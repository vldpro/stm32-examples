ARM GAS  /tmp/ccjYyghm.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text._Error_Handler,"ax",%progbits
  21              		.align	2
  22              		.global	_Error_Handler
  23              		.thumb
  24              		.thumb_func
  26              	_Error_Handler:
  27              	.LFB125:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/ccjYyghm.s 			page 2


  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f3xx_hal.h"
  42:Src/main.c    **** #include "rtc.h"
  43:Src/main.c    **** #include "tim.h"
  44:Src/main.c    **** #include "usart.h"
  45:Src/main.c    **** #include "usb.h"
  46:Src/main.c    **** #include "gpio.h"
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PV */
  55:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PV */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** void SystemClock_Config(void);
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PFP */
  63:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PFP */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE BEGIN 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE END 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** /**
  72:Src/main.c    ****   * @brief  The application entry point.
  73:Src/main.c    ****   *
  74:Src/main.c    ****   * @retval None
  75:Src/main.c    ****   */
  76:Src/main.c    **** int main(void)
  77:Src/main.c    **** {
  78:Src/main.c    ****   /* USER CODE BEGIN 1 */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* USER CODE END 1 */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Src/main.c    ****   HAL_Init();
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE BEGIN Init */
ARM GAS  /tmp/ccjYyghm.s 			page 3


  88:Src/main.c    **** 
  89:Src/main.c    ****   /* USER CODE END Init */
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* Configure the system clock */
  92:Src/main.c    ****   SystemClock_Config();
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE END SysInit */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Initialize all configured peripherals */
  99:Src/main.c    ****   MX_GPIO_Init();
 100:Src/main.c    ****   MX_RTC_Init();
 101:Src/main.c    ****   MX_USART3_UART_Init();
 102:Src/main.c    ****   MX_USB_PCD_Init();
 103:Src/main.c    ****   MX_TIM2_Init();
 104:Src/main.c    ****   /* USER CODE BEGIN 2 */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE END 2 */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* Infinite loop */
 109:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 110:Src/main.c    **** 
 111:Src/main.c    ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 112:Src/main.c    ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 113:Src/main.c    **** 
 114:Src/main.c    ****   while (1) {
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE END WHILE */
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* USER CODE BEGIN 3 */
 119:Src/main.c    ****   }
 120:Src/main.c    ****   /* USER CODE END 3 */
 121:Src/main.c    **** 
 122:Src/main.c    **** }
 123:Src/main.c    **** 
 124:Src/main.c    **** /**
 125:Src/main.c    ****   * @brief System Clock Configuration
 126:Src/main.c    ****   * @retval None
 127:Src/main.c    ****   */
 128:Src/main.c    **** void SystemClock_Config(void)
 129:Src/main.c    **** {
 130:Src/main.c    **** 
 131:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 132:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 133:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 134:Src/main.c    **** 
 135:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 136:Src/main.c    ****     */
 137:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 138:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 139:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 140:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
ARM GAS  /tmp/ccjYyghm.s 			page 4


 145:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 146:Src/main.c    ****   {
 147:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 148:Src/main.c    ****   }
 149:Src/main.c    **** 
 150:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 151:Src/main.c    ****     */
 152:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 153:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 154:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 155:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 156:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 157:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 158:Src/main.c    **** 
 159:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 160:Src/main.c    ****   {
 161:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 162:Src/main.c    ****   }
 163:Src/main.c    **** 
 164:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB|RCC_PERIPHCLK_USART3
 165:Src/main.c    ****                               |RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_TIM2;
 166:Src/main.c    ****   PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 167:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 168:Src/main.c    ****   PeriphClkInit.USBClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 169:Src/main.c    ****   PeriphClkInit.Tim2ClockSelection = RCC_TIM2CLK_HCLK;
 170:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 171:Src/main.c    ****   {
 172:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 173:Src/main.c    ****   }
 174:Src/main.c    **** 
 175:Src/main.c    ****     /**Configure the Systick interrupt time 
 176:Src/main.c    ****     */
 177:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 178:Src/main.c    **** 
 179:Src/main.c    ****     /**Configure the Systick 
 180:Src/main.c    ****     */
 181:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 182:Src/main.c    **** 
 183:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 184:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 185:Src/main.c    **** }
 186:Src/main.c    **** 
 187:Src/main.c    **** /* USER CODE BEGIN 4 */
 188:Src/main.c    **** 
 189:Src/main.c    **** /* USER CODE END 4 */
 190:Src/main.c    **** 
 191:Src/main.c    **** /**
 192:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 193:Src/main.c    ****   * @param  file: The file name as string.
 194:Src/main.c    ****   * @param  line: The line in file as a number.
 195:Src/main.c    ****   * @retval None
 196:Src/main.c    ****   */
 197:Src/main.c    **** void _Error_Handler(char *file, int line)
 198:Src/main.c    **** {
  29              		.loc 1 198 0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
ARM GAS  /tmp/ccjYyghm.s 			page 5


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LVL0:
  36              	.L2:
 199:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 200:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 201:Src/main.c    ****   while (1) {
 202:Src/main.c    ****   }
  37              		.loc 1 202 0 discriminator 1
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE125:
  42 0002 00BF     		.section	.text.SystemClock_Config,"ax",%progbits
  43              		.align	2
  44              		.global	SystemClock_Config
  45              		.thumb
  46              		.thumb_func
  48              	SystemClock_Config:
  49              	.LFB124:
 129:Src/main.c    **** 
  50              		.loc 1 129 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 152
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54 0000 00B5     		push	{lr}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 4
  57              		.cfi_offset 14, -4
  58 0002 A7B0     		sub	sp, sp, #156
  59              	.LCFI1:
  60              		.cfi_def_cfa_offset 160
 137:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
  61              		.loc 1 137 0
  62 0004 0923     		movs	r3, #9
  63 0006 1C93     		str	r3, [sp, #112]
 138:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  64              		.loc 1 138 0
  65 0008 4FF4A023 		mov	r3, #327680
  66 000c 1D93     		str	r3, [sp, #116]
 139:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
  67              		.loc 1 139 0
  68 000e 0123     		movs	r3, #1
  69 0010 1F93     		str	r3, [sp, #124]
 140:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  70              		.loc 1 140 0
  71 0012 2193     		str	r3, [sp, #132]
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  72              		.loc 1 141 0
  73 0014 0223     		movs	r3, #2
  74 0016 2293     		str	r3, [sp, #136]
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  75              		.loc 1 142 0
  76 0018 4FF48033 		mov	r3, #65536
  77 001c 2393     		str	r3, [sp, #140]
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
  78              		.loc 1 143 0
ARM GAS  /tmp/ccjYyghm.s 			page 6


  79 001e 4FF4E013 		mov	r3, #1835008
  80 0022 2493     		str	r3, [sp, #144]
 144:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  81              		.loc 1 144 0
  82 0024 0023     		movs	r3, #0
  83 0026 2593     		str	r3, [sp, #148]
 145:Src/main.c    ****   {
  84              		.loc 1 145 0
  85 0028 1CA8     		add	r0, sp, #112
  86 002a FFF7FEFF 		bl	HAL_RCC_OscConfig
  87              	.LVL1:
  88 002e 18B1     		cbz	r0, .L4
 147:Src/main.c    ****   }
  89              		.loc 1 147 0
  90 0030 1D48     		ldr	r0, .L8
  91 0032 9321     		movs	r1, #147
  92 0034 FFF7FEFF 		bl	_Error_Handler
  93              	.LVL2:
  94              	.L4:
 152:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  95              		.loc 1 152 0
  96 0038 0F23     		movs	r3, #15
  97 003a 1793     		str	r3, [sp, #92]
 154:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  98              		.loc 1 154 0
  99 003c 0221     		movs	r1, #2
 100 003e 1891     		str	r1, [sp, #96]
 155:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 101              		.loc 1 155 0
 102 0040 0023     		movs	r3, #0
 103 0042 1993     		str	r3, [sp, #100]
 156:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 104              		.loc 1 156 0
 105 0044 4FF48062 		mov	r2, #1024
 106 0048 1A92     		str	r2, [sp, #104]
 157:Src/main.c    **** 
 107              		.loc 1 157 0
 108 004a 1B93     		str	r3, [sp, #108]
 159:Src/main.c    ****   {
 109              		.loc 1 159 0
 110 004c 17A8     		add	r0, sp, #92
 111 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 112              	.LVL3:
 113 0052 18B1     		cbz	r0, .L5
 161:Src/main.c    ****   }
 114              		.loc 1 161 0
 115 0054 1448     		ldr	r0, .L8
 116 0056 A121     		movs	r1, #161
 117 0058 FFF7FEFF 		bl	_Error_Handler
 118              	.LVL4:
 119              	.L5:
 164:Src/main.c    ****                               |RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_TIM2;
 120              		.loc 1 164 0
 121 005c 134B     		ldr	r3, .L8+4
 122 005e 0193     		str	r3, [sp, #4]
 166:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 123              		.loc 1 166 0
ARM GAS  /tmp/ccjYyghm.s 			page 7


 124 0060 0023     		movs	r3, #0
 125 0062 0593     		str	r3, [sp, #20]
 167:Src/main.c    ****   PeriphClkInit.USBClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 126              		.loc 1 167 0
 127 0064 4FF40072 		mov	r2, #512
 128 0068 0292     		str	r2, [sp, #8]
 168:Src/main.c    ****   PeriphClkInit.Tim2ClockSelection = RCC_TIM2CLK_HCLK;
 129              		.loc 1 168 0
 130 006a 1693     		str	r3, [sp, #88]
 169:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 131              		.loc 1 169 0
 132 006c 0F93     		str	r3, [sp, #60]
 170:Src/main.c    ****   {
 133              		.loc 1 170 0
 134 006e 01A8     		add	r0, sp, #4
 135 0070 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 136              	.LVL5:
 137 0074 18B1     		cbz	r0, .L6
 172:Src/main.c    ****   }
 138              		.loc 1 172 0
 139 0076 0C48     		ldr	r0, .L8
 140 0078 AC21     		movs	r1, #172
 141 007a FFF7FEFF 		bl	_Error_Handler
 142              	.LVL6:
 143              	.L6:
 177:Src/main.c    **** 
 144              		.loc 1 177 0
 145 007e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 146              	.LVL7:
 147 0082 0B4B     		ldr	r3, .L8+8
 148 0084 A3FB0030 		umull	r3, r0, r3, r0
 149 0088 8009     		lsrs	r0, r0, #6
 150 008a FFF7FEFF 		bl	HAL_SYSTICK_Config
 151              	.LVL8:
 181:Src/main.c    **** 
 152              		.loc 1 181 0
 153 008e 0420     		movs	r0, #4
 154 0090 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 155              	.LVL9:
 184:Src/main.c    **** }
 156              		.loc 1 184 0
 157 0094 4FF0FF30 		mov	r0, #-1
 158 0098 0021     		movs	r1, #0
 159 009a 0A46     		mov	r2, r1
 160 009c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 161              	.LVL10:
 185:Src/main.c    **** 
 162              		.loc 1 185 0
 163 00a0 27B0     		add	sp, sp, #156
 164              	.LCFI2:
 165              		.cfi_def_cfa_offset 4
 166              		@ sp needed
 167 00a2 5DF804FB 		ldr	pc, [sp], #4
 168              	.L9:
 169 00a6 00BF     		.align	2
 170              	.L8:
 171 00a8 00000000 		.word	.LC0
ARM GAS  /tmp/ccjYyghm.s 			page 8


 172 00ac 04001300 		.word	1245188
 173 00b0 D34D6210 		.word	274877907
 174              		.cfi_endproc
 175              	.LFE124:
 177              		.section	.text.main,"ax",%progbits
 178              		.align	2
 179              		.global	main
 180              		.thumb
 181              		.thumb_func
 183              	main:
 184              	.LFB123:
  77:Src/main.c    ****   /* USER CODE BEGIN 1 */
 185              		.loc 1 77 0
 186              		.cfi_startproc
 187              		@ Volatile: function does not return.
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190 0000 08B5     		push	{r3, lr}
 191              	.LCFI3:
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 3, -8
 194              		.cfi_offset 14, -4
  85:Src/main.c    **** 
 195              		.loc 1 85 0
 196 0002 FFF7FEFF 		bl	HAL_Init
 197              	.LVL11:
  92:Src/main.c    **** 
 198              		.loc 1 92 0
 199 0006 FFF7FEFF 		bl	SystemClock_Config
 200              	.LVL12:
  99:Src/main.c    ****   MX_RTC_Init();
 201              		.loc 1 99 0
 202 000a FFF7FEFF 		bl	MX_GPIO_Init
 203              	.LVL13:
 100:Src/main.c    ****   MX_USART3_UART_Init();
 204              		.loc 1 100 0
 205 000e FFF7FEFF 		bl	MX_RTC_Init
 206              	.LVL14:
 101:Src/main.c    ****   MX_USB_PCD_Init();
 207              		.loc 1 101 0
 208 0012 FFF7FEFF 		bl	MX_USART3_UART_Init
 209              	.LVL15:
 102:Src/main.c    ****   MX_TIM2_Init();
 210              		.loc 1 102 0
 211 0016 FFF7FEFF 		bl	MX_USB_PCD_Init
 212              	.LVL16:
 103:Src/main.c    ****   /* USER CODE BEGIN 2 */
 213              		.loc 1 103 0
 214 001a FFF7FEFF 		bl	MX_TIM2_Init
 215              	.LVL17:
 111:Src/main.c    ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 216              		.loc 1 111 0
 217 001e 054C     		ldr	r4, .L13
 218 0020 2046     		mov	r0, r4
 219 0022 0021     		movs	r1, #0
 220 0024 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 221              	.LVL18:
ARM GAS  /tmp/ccjYyghm.s 			page 9


 112:Src/main.c    **** 
 222              		.loc 1 112 0
 223 0028 2046     		mov	r0, r4
 224 002a 0421     		movs	r1, #4
 225 002c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 226              	.LVL19:
 227              	.L11:
 119:Src/main.c    ****   /* USER CODE END 3 */
 228              		.loc 1 119 0 discriminator 1
 229 0030 FEE7     		b	.L11
 230              	.L14:
 231 0032 00BF     		.align	2
 232              	.L13:
 233 0034 00000000 		.word	htim2
 234              		.cfi_endproc
 235              	.LFE123:
 237              		.section	.rodata.str1.4,"aMS",%progbits,1
 238              		.align	2
 239              	.LC0:
 240 0000 5372632F 		.ascii	"Src/main.c\000"
 240      6D61696E 
 240      2E6300
 241              		.text
 242              	.Letext0:
 243              		.file 2 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 244              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 245              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 246              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 247              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 248              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 249              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 250              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 251              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 252              		.file 11 "Inc/tim.h"
 253              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 254              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 255              		.file 14 "Inc/gpio.h"
 256              		.file 15 "Inc/rtc.h"
 257              		.file 16 "Inc/usart.h"
 258              		.file 17 "Inc/usb.h"
ARM GAS  /tmp/ccjYyghm.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccjYyghm.s:21     .text._Error_Handler:0000000000000000 $t
     /tmp/ccjYyghm.s:26     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccjYyghm.s:43     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccjYyghm.s:48     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccjYyghm.s:171    .text.SystemClock_Config:00000000000000a8 $d
     /tmp/ccjYyghm.s:178    .text.main:0000000000000000 $t
     /tmp/ccjYyghm.s:183    .text.main:0000000000000000 main
     /tmp/ccjYyghm.s:233    .text.main:0000000000000034 $d
     /tmp/ccjYyghm.s:238    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_RTC_Init
MX_USART3_UART_Init
MX_USB_PCD_Init
MX_TIM2_Init
HAL_TIM_PWM_Start
htim2
