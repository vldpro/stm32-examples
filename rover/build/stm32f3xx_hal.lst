ARM GAS  /tmp/ccQpMUSZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_hal.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_MspInit,"ax",%progbits
  21              		.align	2
  22              		.weak	HAL_MspInit
  23              		.thumb
  24              		.thumb_func
  26              	HAL_MspInit:
  27              	.LFB125:
  28              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @file    stm32f3xx_hal.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   @verbatim
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     [..]
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     [..]
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     The HAL contains two APIs categories:
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****          (+) HAL Initialization and de-initialization functions
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****          (+) HAL Control functions
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   @endverbatim
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @attention
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * are permitted provided that the following conditions are met:
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *      this list of conditions and the following disclaimer.
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
ARM GAS  /tmp/ccQpMUSZ.s 			page 2


  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *      and/or other materials provided with the distribution.
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *      without specific prior written permission.
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   ******************************************************************************  
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #include "stm32f3xx_hal.h"
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @addtogroup STM32F3xx_HAL_Driver
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @defgroup HAL HAL
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief HAL module driver.
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Private define ------------------------------------------------------------*/
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @defgroup HAL_Private Constants
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  * @brief STM32F3xx HAL Driver version number V1.5.2
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    */
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #define __STM32F3xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #define __STM32F3xx_HAL_VERSION_SUB1   (0x05U) /*!< [23:16] sub1 version */
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #define __STM32F3xx_HAL_VERSION_SUB2   (0x02U) /*!< [15:8]  sub2 version */
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #define __STM32F3xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #define __STM32F3xx_HAL_VERSION         ((__STM32F3xx_HAL_VERSION_MAIN << 24U)\
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****                                         |(__STM32F3xx_HAL_VERSION_SUB1 << 16U)\
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****                                         |(__STM32F3xx_HAL_VERSION_SUB2 << 8U )\
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****                                         |(__STM32F3xx_HAL_VERSION_RC))
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #define IDCODE_DEVID_MASK    (0x00000FFFU)
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @}
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  /tmp/ccQpMUSZ.s 			page 3


  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Exported variables --------------------------------------------------------*/
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @defgroup HAL_Exported_Variables HAL Exported Variables
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __IO uint32_t uwTick;
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @}
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  *
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** @verbatim
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  ===============================================================================
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****               ##### Initialization and de-initialization functions #####
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  ===============================================================================
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     [..]  This section provides functions allowing to:
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****           and the backup domain when enabled.
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) de-Initializes common part of the HAL.
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated 
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****           Tick interrupt priority. 
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user 
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              handled in milliseconds basis.
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****             ISR process will be blocked. 
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****        (++) functions affecting time base configurations are declared as __Weak  
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** @endverbatim
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  This function configures the Flash prefetch, 
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         Configures time base source, NVIC and Low level hardware
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   This function is called at the beginning of program after reset and before 
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         the clock configuration
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *             
ARM GAS  /tmp/ccQpMUSZ.s 			page 4


 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   The Systick configuration is based on HSI clock, as HSI is the clock
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         used after a system Reset and the NVIC configuration is set to Priority group 4 
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *            
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   The time base configuration is based on MSI clock when exting from Reset.
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         Once done, time base tick start incrementing.
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         In the default implementation,Systick is used as source of time base.
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *       The tick variable is incremented each 1ms in its ISR.
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval HAL status
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Configure Flash prefetch */
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #endif /* PREFETCH_ENABLE */
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Set Interrupt Group Priority */
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Enable systick and configure 1ms tick (default clock after Reset is HSI) */
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Init the low level hardware */
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   HAL_MspInit();
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Return function status */
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return HAL_OK;
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note This function is optional.
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval HAL status
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Reset of all peripherals */
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* De-Init the low level hardware */
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   HAL_MspDeInit();
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Return function status */
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return HAL_OK;
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Initialize the MSP.
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
ARM GAS  /tmp/ccQpMUSZ.s 			page 5


 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak void HAL_MspInit(void)
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
  29              		.loc 1 203 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE125:
  38 0002 00BF     		.section	.text.HAL_MspDeInit,"ax",%progbits
  39              		.align	2
  40              		.weak	HAL_MspDeInit
  41              		.thumb
  42              		.thumb_func
  44              	HAL_MspDeInit:
  45              	.LFB126:
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    */
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  DeInitialize the MSP.
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak void HAL_MspDeInit(void)
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
  46              		.loc 1 214 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
  51 0000 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE126:
  55 0002 00BF     		.section	.text.HAL_DeInit,"ax",%progbits
  56              		.align	2
  57              		.global	HAL_DeInit
  58              		.thumb
  59              		.thumb_func
  61              	HAL_DeInit:
  62              	.LFB124:
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Reset of all peripherals */
  63              		.loc 1 180 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Reset of all peripherals */
  67              		.loc 1 180 0
  68 0000 10B5     		push	{r4, lr}
  69              	.LCFI0:
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 4, -8
  72              		.cfi_offset 14, -4
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  73              		.loc 1 182 0
ARM GAS  /tmp/ccQpMUSZ.s 			page 6


  74 0002 074B     		ldr	r3, .L5
  75 0004 4FF0FF32 		mov	r2, #-1
  76 0008 1A61     		str	r2, [r3, #16]
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  77              		.loc 1 183 0
  78 000a 0024     		movs	r4, #0
  79 000c 1C61     		str	r4, [r3, #16]
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  80              		.loc 1 185 0
  81 000e DA60     		str	r2, [r3, #12]
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  82              		.loc 1 186 0
  83 0010 DC60     		str	r4, [r3, #12]
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  84              		.loc 1 188 0
  85 0012 9A62     		str	r2, [r3, #40]
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  86              		.loc 1 189 0
  87 0014 9C62     		str	r4, [r3, #40]
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  88              		.loc 1 192 0
  89 0016 FFF7FEFF 		bl	HAL_MspDeInit
  90              	.LVL0:
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  91              		.loc 1 196 0
  92 001a 2046     		mov	r0, r4
  93 001c 10BD     		pop	{r4, pc}
  94              	.L6:
  95 001e 00BF     		.align	2
  96              	.L5:
  97 0020 00100240 		.word	1073876992
  98              		.cfi_endproc
  99              	.LFE124:
 101              		.section	.text.HAL_InitTick,"ax",%progbits
 102              		.align	2
 103              		.weak	HAL_InitTick
 104              		.thumb
 105              		.thumb_func
 107              	HAL_InitTick:
 108              	.LFB127:
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    */
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  This function configures the source of the time base. 
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         The time source is configured  to have 1ms time base with a dedicated 
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         Tick interrupt priority. 
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   This function is called  automatically at the beginning of program after
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig()
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   In the default implementation , SysTick timer is the source of time base. 
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         It is used to generate interrupts at regular time intervals. 
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         The SysTick interrupt must have higher priority (numerically lower) 
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         The function is declared as __Weak  to be overwritten  in case of other
ARM GAS  /tmp/ccQpMUSZ.s 			page 7


 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         implementation  in user file.
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval HAL status
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 109              		.loc 1 237 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              	.LVL1:
 114 0000 10B5     		push	{r4, lr}
 115              	.LCFI1:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 4, -8
 118              		.cfi_offset 14, -4
 119 0002 0446     		mov	r4, r0
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 120              		.loc 1 239 0
 121 0004 0E4B     		ldr	r3, .L12
 122 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 123              	.LVL2:
 124 0008 4FF47A73 		mov	r3, #1000
 125 000c B3FBF0F3 		udiv	r3, r3, r0
 126 0010 0C4A     		ldr	r2, .L12+4
 127 0012 1068     		ldr	r0, [r2]
 128 0014 B0FBF3F0 		udiv	r0, r0, r3
 129 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
 130              	.LVL3:
 131 001c 58B9     		cbnz	r0, .L9
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   {
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     return HAL_ERROR;
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   }
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Configure the SysTick IRQ priority */
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 132              		.loc 1 245 0
 133 001e 0F2C     		cmp	r4, #15
 134 0020 0BD8     		bhi	.L10
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   {
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 135              		.loc 1 247 0
 136 0022 4FF0FF30 		mov	r0, #-1
 137 0026 2146     		mov	r1, r4
 138 0028 0022     		movs	r2, #0
 139 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 140              	.LVL4:
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     uwTickPrio = TickPriority;
 141              		.loc 1 248 0
 142 002e 064B     		ldr	r3, .L12+8
 143 0030 1C60     		str	r4, [r3]
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   }
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   else
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   {
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     return HAL_ERROR;
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   }
ARM GAS  /tmp/ccQpMUSZ.s 			page 8


 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    /* Return function status */
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return HAL_OK;
 144              		.loc 1 255 0
 145 0032 0020     		movs	r0, #0
 146 0034 10BD     		pop	{r4, pc}
 147              	.LVL5:
 148              	.L9:
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   }
 149              		.loc 1 241 0
 150 0036 0120     		movs	r0, #1
 151 0038 10BD     		pop	{r4, pc}
 152              	.LVL6:
 153              	.L10:
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   }
 154              		.loc 1 252 0
 155 003a 0120     		movs	r0, #1
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 156              		.loc 1 256 0
 157 003c 10BD     		pop	{r4, pc}
 158              	.LVL7:
 159              	.L13:
 160 003e 00BF     		.align	2
 161              	.L12:
 162 0040 00000000 		.word	.LANCHOR0
 163 0044 00000000 		.word	SystemCoreClock
 164 0048 00000000 		.word	.LANCHOR1
 165              		.cfi_endproc
 166              	.LFE127:
 168              		.section	.text.HAL_Init,"ax",%progbits
 169              		.align	2
 170              		.global	HAL_Init
 171              		.thumb
 172              		.thumb_func
 174              	HAL_Init:
 175              	.LFB123:
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Configure Flash prefetch */
 176              		.loc 1 155 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180 0000 08B5     		push	{r3, lr}
 181              	.LCFI2:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 3, -8
 184              		.cfi_offset 14, -4
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #endif /* PREFETCH_ENABLE */
 185              		.loc 1 158 0
 186 0002 074A     		ldr	r2, .L16
 187 0004 1368     		ldr	r3, [r2]
 188 0006 43F01003 		orr	r3, r3, #16
 189 000a 1360     		str	r3, [r2]
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 190              		.loc 1 162 0
 191 000c 0320     		movs	r0, #3
 192 000e FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 193              	.LVL8:
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
ARM GAS  /tmp/ccQpMUSZ.s 			page 9


 194              		.loc 1 165 0
 195 0012 0020     		movs	r0, #0
 196 0014 FFF7FEFF 		bl	HAL_InitTick
 197              	.LVL9:
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 198              		.loc 1 168 0
 199 0018 FFF7FEFF 		bl	HAL_MspInit
 200              	.LVL10:
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 201              		.loc 1 172 0
 202 001c 0020     		movs	r0, #0
 203 001e 08BD     		pop	{r3, pc}
 204              	.L17:
 205              		.align	2
 206              	.L16:
 207 0020 00200240 		.word	1073881088
 208              		.cfi_endproc
 209              	.LFE123:
 211              		.section	.text.HAL_IncTick,"ax",%progbits
 212              		.align	2
 213              		.weak	HAL_IncTick
 214              		.thumb
 215              		.thumb_func
 217              	HAL_IncTick:
 218              	.LFB128:
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @}
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  *  @brief    HAL Control functions
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  *
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** @verbatim
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  ===============================================================================
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****                       ##### HAL Control functions #####
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  ===============================================================================
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     [..]  This section provides functions allowing to:
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Provide a tick value in millisecond
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Provide a blocking delay in millisecond
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Suspend the time base source interrupt
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Resume the time base source interrupt
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Get the HAL API driver version
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Get the device identifier
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Get the device revision identifier
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Enable/Disable Debug module during Sleep mode
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** @endverbatim
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  This function is called to increment  a global variable "uwTick"
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         used as application time base.
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
ARM GAS  /tmp/ccQpMUSZ.s 			page 10


 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         in SysTick ISR.
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         implementations  in user file.
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak void HAL_IncTick(void)
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 219              		.loc 1 295 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   uwTick += uwTickFreq;
 224              		.loc 1 296 0
 225 0000 034A     		ldr	r2, .L19
 226 0002 1368     		ldr	r3, [r2]
 227 0004 0349     		ldr	r1, .L19+4
 228 0006 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 229 0008 0B44     		add	r3, r3, r1
 230 000a 1360     		str	r3, [r2]
 231 000c 7047     		bx	lr
 232              	.L20:
 233 000e 00BF     		.align	2
 234              	.L19:
 235 0010 00000000 		.word	uwTick
 236 0014 00000000 		.word	.LANCHOR0
 237              		.cfi_endproc
 238              	.LFE128:
 240              		.section	.text.HAL_GetTick,"ax",%progbits
 241              		.align	2
 242              		.weak	HAL_GetTick
 243              		.thumb
 244              		.thumb_func
 246              	HAL_GetTick:
 247              	.LFB129:
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Povides a tick value in millisecond.
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   The function is declared as __Weak  to be overwritten  in case of other 
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         implementations  in user file.
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval tick value
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 248              		.loc 1 306 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return uwTick;  
 253              		.loc 1 307 0
 254 0000 014B     		ldr	r3, .L22
 255 0002 1868     		ldr	r0, [r3]
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 256              		.loc 1 308 0
 257 0004 7047     		bx	lr
ARM GAS  /tmp/ccQpMUSZ.s 			page 11


 258              	.L23:
 259 0006 00BF     		.align	2
 260              	.L22:
 261 0008 00000000 		.word	uwTick
 262              		.cfi_endproc
 263              	.LFE129:
 265              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 266              		.align	2
 267              		.global	HAL_GetTickPrio
 268              		.thumb
 269              		.thumb_func
 271              	HAL_GetTickPrio:
 272              	.LFB130:
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief This function returns a tick priority.
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval tick priority
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 273              		.loc 1 315 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              		@ link register save eliminated.
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return uwTickPrio;
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 278              		.loc 1 317 0
 279 0000 014B     		ldr	r3, .L25
 280 0002 1868     		ldr	r0, [r3]
 281 0004 7047     		bx	lr
 282              	.L26:
 283 0006 00BF     		.align	2
 284              	.L25:
 285 0008 00000000 		.word	.LANCHOR1
 286              		.cfi_endproc
 287              	.LFE130:
 289              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 290              		.align	2
 291              		.global	HAL_SetTickFreq
 292              		.thumb
 293              		.thumb_func
 295              	HAL_SetTickFreq:
 296              	.LFB131:
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief Set new tick Freq.
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval Status
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 297              		.loc 1 324 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              	.LVL11:
 302 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccQpMUSZ.s 			page 12


 303              	.LCFI3:
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 3, -8
 306              		.cfi_offset 14, -4
 307              	.LVL12:
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   if (uwTickFreq != Freq)
 308              		.loc 1 328 0
 309 0002 064B     		ldr	r3, .L31
 310 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 311 0006 8342     		cmp	r3, r0
 312 0008 06D0     		beq	.L29
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   {
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     uwTickFreq = Freq;
 313              		.loc 1 330 0
 314 000a 044B     		ldr	r3, .L31
 315 000c 1870     		strb	r0, [r3]
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     /* Apply the new tick Freq  */
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 316              		.loc 1 333 0
 317 000e 044B     		ldr	r3, .L31+4
 318 0010 1868     		ldr	r0, [r3]
 319              	.LVL13:
 320 0012 FFF7FEFF 		bl	HAL_InitTick
 321              	.LVL14:
 322 0016 08BD     		pop	{r3, pc}
 323              	.LVL15:
 324              	.L29:
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 325              		.loc 1 325 0
 326 0018 0020     		movs	r0, #0
 327              	.LVL16:
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   }
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return status;
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 328              		.loc 1 337 0
 329 001a 08BD     		pop	{r3, pc}
 330              	.L32:
 331              		.align	2
 332              	.L31:
 333 001c 00000000 		.word	.LANCHOR0
 334 0020 00000000 		.word	.LANCHOR1
 335              		.cfi_endproc
 336              	.LFE131:
 338              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 339              		.align	2
 340              		.global	HAL_GetTickFreq
 341              		.thumb
 342              		.thumb_func
 344              	HAL_GetTickFreq:
 345              	.LFB132:
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
ARM GAS  /tmp/ccQpMUSZ.s 			page 13


 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief Return tick frequency.
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval tick period in Hz
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 346              		.loc 1 344 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              		@ link register save eliminated.
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return uwTickFreq;
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 351              		.loc 1 346 0
 352 0000 014B     		ldr	r3, .L34
 353 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 354 0004 7047     		bx	lr
 355              	.L35:
 356 0006 00BF     		.align	2
 357              	.L34:
 358 0008 00000000 		.word	.LANCHOR0
 359              		.cfi_endproc
 360              	.LFE132:
 362              		.section	.text.HAL_Delay,"ax",%progbits
 363              		.align	2
 364              		.weak	HAL_Delay
 365              		.thumb
 366              		.thumb_func
 368              	HAL_Delay:
 369              	.LFB133:
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  This function provides accurate delay (in milliseconds) based 
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         on variable incremented.
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   In the default implementation , SysTick timer is the source of time base. 
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         It is used to generate interrupts at regular time intervals where uwTick
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         is incremented.
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         The function is declared as __Weak  to be overwritten  in case of other
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         implementations  in user file.
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @param  Delay specifies the delay time length, in milliseconds.
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 370              		.loc 1 360 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              	.LVL17:
 375 0000 38B5     		push	{r3, r4, r5, lr}
 376              	.LCFI4:
 377              		.cfi_def_cfa_offset 16
 378              		.cfi_offset 3, -16
 379              		.cfi_offset 4, -12
 380              		.cfi_offset 5, -8
 381              		.cfi_offset 14, -4
 382 0002 0446     		mov	r4, r0
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
ARM GAS  /tmp/ccQpMUSZ.s 			page 14


 383              		.loc 1 361 0
 384 0004 FFF7FEFF 		bl	HAL_GetTick
 385              	.LVL18:
 386 0008 0546     		mov	r5, r0
 387              	.LVL19:
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   uint32_t wait = Delay;
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Add freq to guarantee minimum wait */
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 388              		.loc 1 365 0
 389 000a B4F1FF3F 		cmp	r4, #-1
 390 000e 02D0     		beq	.L38
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   {
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 391              		.loc 1 367 0
 392 0010 044B     		ldr	r3, .L40
 393 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 394 0014 1C44     		add	r4, r4, r3
 395              	.LVL20:
 396              	.L38:
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   }
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 397              		.loc 1 370 0 discriminator 1
 398 0016 FFF7FEFF 		bl	HAL_GetTick
 399              	.LVL21:
 400 001a 401B     		subs	r0, r0, r5
 401 001c 8442     		cmp	r4, r0
 402 001e FAD8     		bhi	.L38
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   {
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   }
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 403              		.loc 1 373 0
 404 0020 38BD     		pop	{r3, r4, r5, pc}
 405              	.LVL22:
 406              	.L41:
 407 0022 00BF     		.align	2
 408              	.L40:
 409 0024 00000000 		.word	.LANCHOR0
 410              		.cfi_endproc
 411              	.LFE133:
 413              		.section	.text.HAL_SuspendTick,"ax",%progbits
 414              		.align	2
 415              		.weak	HAL_SuspendTick
 416              		.thumb
 417              		.thumb_func
 419              	HAL_SuspendTick:
 420              	.LFB134:
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Suspend Tick increment.
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   In the default implementation , SysTick timer is the source of time base. It is  
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         is called, the the SysTick interrupt will be disabled and so Tick increment 
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         is suspended.
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         implementations  in user file.
ARM GAS  /tmp/ccQpMUSZ.s 			page 15


 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak void HAL_SuspendTick(void)
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 421              		.loc 1 387 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		@ link register save eliminated.
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Disable SysTick Interrupt */
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 426              		.loc 1 389 0
 427 0000 024A     		ldr	r2, .L43
 428 0002 1368     		ldr	r3, [r2]
 429 0004 23F00203 		bic	r3, r3, #2
 430 0008 1360     		str	r3, [r2]
 431 000a 7047     		bx	lr
 432              	.L44:
 433              		.align	2
 434              	.L43:
 435 000c 10E000E0 		.word	-536813552
 436              		.cfi_endproc
 437              	.LFE134:
 439              		.section	.text.HAL_ResumeTick,"ax",%progbits
 440              		.align	2
 441              		.weak	HAL_ResumeTick
 442              		.thumb
 443              		.thumb_func
 445              	HAL_ResumeTick:
 446              	.LFB135:
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****                                                    
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Resume Tick increment.
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   In the default implementation , SysTick timer is the source of time base. It is  
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         is called, the the SysTick interrupt will be enabled and so Tick increment 
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         is resumed.
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         The function is declared as __Weak  to be overwritten  in case of other
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         implementations  in user file.
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak void HAL_ResumeTick(void)
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 447              		.loc 1 404 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Enable SysTick Interrupt */
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 452              		.loc 1 406 0
 453 0000 024A     		ldr	r2, .L46
 454 0002 1368     		ldr	r3, [r2]
 455 0004 43F00203 		orr	r3, r3, #2
ARM GAS  /tmp/ccQpMUSZ.s 			page 16


 456 0008 1360     		str	r3, [r2]
 457 000a 7047     		bx	lr
 458              	.L47:
 459              		.align	2
 460              	.L46:
 461 000c 10E000E0 		.word	-536813552
 462              		.cfi_endproc
 463              	.LFE135:
 465              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 466              		.align	2
 467              		.global	HAL_GetHalVersion
 468              		.thumb
 469              		.thumb_func
 471              	HAL_GetHalVersion:
 472              	.LFB136:
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  This function returns the HAL revision
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval version 0xXYZR (8bits for each decimal, R for RC)
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 473              		.loc 1 415 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  return __STM32F3xx_HAL_VERSION;
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 478              		.loc 1 417 0
 479 0000 0048     		ldr	r0, .L49
 480 0002 7047     		bx	lr
 481              	.L50:
 482              		.align	2
 483              	.L49:
 484 0004 00020501 		.word	17105408
 485              		.cfi_endproc
 486              	.LFE136:
 488              		.section	.text.HAL_GetREVID,"ax",%progbits
 489              		.align	2
 490              		.global	HAL_GetREVID
 491              		.thumb
 492              		.thumb_func
 494              	HAL_GetREVID:
 495              	.LFB137:
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Returns the device revision identifier.
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval Device revision identifier
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetREVID(void)
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 496              		.loc 1 424 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccQpMUSZ.s 			page 17


 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return((DBGMCU->IDCODE) >> 16U);
 501              		.loc 1 425 0
 502 0000 014B     		ldr	r3, .L52
 503 0002 1868     		ldr	r0, [r3]
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 504              		.loc 1 426 0
 505 0004 000C     		lsrs	r0, r0, #16
 506 0006 7047     		bx	lr
 507              	.L53:
 508              		.align	2
 509              	.L52:
 510 0008 002004E0 		.word	-536600576
 511              		.cfi_endproc
 512              	.LFE137:
 514              		.section	.text.HAL_GetDEVID,"ax",%progbits
 515              		.align	2
 516              		.global	HAL_GetDEVID
 517              		.thumb
 518              		.thumb_func
 520              	HAL_GetDEVID:
 521              	.LFB138:
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Returns the device identifier.
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval Device identifier
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetDEVID(void)
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 522              		.loc 1 433 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		@ link register save eliminated.
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 527              		.loc 1 434 0
 528 0000 024B     		ldr	r3, .L55
 529 0002 1868     		ldr	r0, [r3]
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 530              		.loc 1 435 0
 531 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 532 0008 7047     		bx	lr
 533              	.L56:
 534 000a 00BF     		.align	2
 535              	.L55:
 536 000c 002004E0 		.word	-536600576
 537              		.cfi_endproc
 538              	.LFE138:
 540              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 541              		.align	2
 542              		.global	HAL_GetUIDw0
 543              		.thumb
 544              		.thumb_func
 546              	HAL_GetUIDw0:
 547              	.LFB139:
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
ARM GAS  /tmp/ccQpMUSZ.s 			page 18


 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval Device identifier
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 548              		.loc 1 442 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              		@ link register save eliminated.
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 553              		.loc 1 444 0
 554 0000 014B     		ldr	r3, .L58
 555 0002 1868     		ldr	r0, [r3]
 556 0004 7047     		bx	lr
 557              	.L59:
 558 0006 00BF     		.align	2
 559              	.L58:
 560 0008 ACF7FF1F 		.word	536868780
 561              		.cfi_endproc
 562              	.LFE139:
 564              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 565              		.align	2
 566              		.global	HAL_GetUIDw1
 567              		.thumb
 568              		.thumb_func
 570              	HAL_GetUIDw1:
 571              	.LFB140:
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval Device identifier
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 572              		.loc 1 451 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 577              		.loc 1 453 0
 578 0000 014B     		ldr	r3, .L61
 579 0002 1868     		ldr	r0, [r3]
 580 0004 7047     		bx	lr
 581              	.L62:
 582 0006 00BF     		.align	2
 583              	.L61:
 584 0008 B0F7FF1F 		.word	536868784
 585              		.cfi_endproc
 586              	.LFE140:
 588              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 589              		.align	2
 590              		.global	HAL_GetUIDw2
ARM GAS  /tmp/ccQpMUSZ.s 			page 19


 591              		.thumb
 592              		.thumb_func
 594              	HAL_GetUIDw2:
 595              	.LFB141:
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval Device identifier
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 596              		.loc 1 460 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 601              		.loc 1 462 0
 602 0000 014B     		ldr	r3, .L64
 603 0002 1868     		ldr	r0, [r3]
 604 0004 7047     		bx	lr
 605              	.L65:
 606 0006 00BF     		.align	2
 607              	.L64:
 608 0008 B4F7FF1F 		.word	536868788
 609              		.cfi_endproc
 610              	.LFE141:
 612              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 613              		.align	2
 614              		.global	HAL_DBGMCU_EnableDBGSleepMode
 615              		.thumb
 616              		.thumb_func
 618              	HAL_DBGMCU_EnableDBGSleepMode:
 619              	.LFB142:
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 620              		.loc 1 469 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              		@ link register save eliminated.
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 625              		.loc 1 470 0
 626 0000 024A     		ldr	r2, .L67
 627 0002 5368     		ldr	r3, [r2, #4]
 628 0004 43F00103 		orr	r3, r3, #1
 629 0008 5360     		str	r3, [r2, #4]
 630 000a 7047     		bx	lr
 631              	.L68:
 632              		.align	2
 633              	.L67:
ARM GAS  /tmp/ccQpMUSZ.s 			page 20


 634 000c 002004E0 		.word	-536600576
 635              		.cfi_endproc
 636              	.LFE142:
 638              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 639              		.align	2
 640              		.global	HAL_DBGMCU_DisableDBGSleepMode
 641              		.thumb
 642              		.thumb_func
 644              	HAL_DBGMCU_DisableDBGSleepMode:
 645              	.LFB143:
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 646              		.loc 1 478 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              		@ link register save eliminated.
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 651              		.loc 1 479 0
 652 0000 024A     		ldr	r2, .L70
 653 0002 5368     		ldr	r3, [r2, #4]
 654 0004 23F00103 		bic	r3, r3, #1
 655 0008 5360     		str	r3, [r2, #4]
 656 000a 7047     		bx	lr
 657              	.L71:
 658              		.align	2
 659              	.L70:
 660 000c 002004E0 		.word	-536600576
 661              		.cfi_endproc
 662              	.LFE143:
 664              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 665              		.align	2
 666              		.global	HAL_DBGMCU_EnableDBGStopMode
 667              		.thumb
 668              		.thumb_func
 670              	HAL_DBGMCU_EnableDBGStopMode:
 671              	.LFB144:
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 672              		.loc 1 487 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
ARM GAS  /tmp/ccQpMUSZ.s 			page 21


 677              		.loc 1 488 0
 678 0000 024A     		ldr	r2, .L73
 679 0002 5368     		ldr	r3, [r2, #4]
 680 0004 43F00203 		orr	r3, r3, #2
 681 0008 5360     		str	r3, [r2, #4]
 682 000a 7047     		bx	lr
 683              	.L74:
 684              		.align	2
 685              	.L73:
 686 000c 002004E0 		.word	-536600576
 687              		.cfi_endproc
 688              	.LFE144:
 690              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 691              		.align	2
 692              		.global	HAL_DBGMCU_DisableDBGStopMode
 693              		.thumb
 694              		.thumb_func
 696              	HAL_DBGMCU_DisableDBGStopMode:
 697              	.LFB145:
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 698              		.loc 1 496 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 703              		.loc 1 497 0
 704 0000 024A     		ldr	r2, .L76
 705 0002 5368     		ldr	r3, [r2, #4]
 706 0004 23F00203 		bic	r3, r3, #2
 707 0008 5360     		str	r3, [r2, #4]
 708 000a 7047     		bx	lr
 709              	.L77:
 710              		.align	2
 711              	.L76:
 712 000c 002004E0 		.word	-536600576
 713              		.cfi_endproc
 714              	.LFE145:
 716              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 717              		.align	2
 718              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 719              		.thumb
 720              		.thumb_func
 722              	HAL_DBGMCU_EnableDBGStandbyMode:
 723              	.LFB146:
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
ARM GAS  /tmp/ccQpMUSZ.s 			page 22


 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 724              		.loc 1 505 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              		@ link register save eliminated.
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 729              		.loc 1 506 0
 730 0000 024A     		ldr	r2, .L79
 731 0002 5368     		ldr	r3, [r2, #4]
 732 0004 43F00403 		orr	r3, r3, #4
 733 0008 5360     		str	r3, [r2, #4]
 734 000a 7047     		bx	lr
 735              	.L80:
 736              		.align	2
 737              	.L79:
 738 000c 002004E0 		.word	-536600576
 739              		.cfi_endproc
 740              	.LFE146:
 742              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 743              		.align	2
 744              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 745              		.thumb
 746              		.thumb_func
 748              	HAL_DBGMCU_DisableDBGStandbyMode:
 749              	.LFB147:
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 750              		.loc 1 514 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 0
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 754              		@ link register save eliminated.
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 755              		.loc 1 515 0
 756 0000 024A     		ldr	r2, .L82
 757 0002 5368     		ldr	r3, [r2, #4]
 758 0004 23F00403 		bic	r3, r3, #4
 759 0008 5360     		str	r3, [r2, #4]
 760 000a 7047     		bx	lr
 761              	.L83:
 762              		.align	2
 763              	.L82:
 764 000c 002004E0 		.word	-536600576
 765              		.cfi_endproc
 766              	.LFE147:
 768              		.global	uwTickFreq
 769              		.global	uwTickPrio
 770              		.comm	uwTick,4,4
ARM GAS  /tmp/ccQpMUSZ.s 			page 23


 771              		.section	.data.uwTickPrio,"aw",%progbits
 772              		.align	2
 773              		.set	.LANCHOR1,. + 0
 776              	uwTickPrio:
 777 0000 10000000 		.word	16
 778              		.section	.data.uwTickFreq,"aw",%progbits
 779              		.set	.LANCHOR0,. + 0
 782              	uwTickFreq:
 783 0000 01       		.byte	1
 784              		.text
 785              	.Letext0:
 786              		.file 2 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 787              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 788              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 789              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 790              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 791              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 792              		.file 8 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 793              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
ARM GAS  /tmp/ccQpMUSZ.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal.c
     /tmp/ccQpMUSZ.s:21     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccQpMUSZ.s:26     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccQpMUSZ.s:39     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccQpMUSZ.s:44     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccQpMUSZ.s:56     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccQpMUSZ.s:61     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccQpMUSZ.s:97     .text.HAL_DeInit:0000000000000020 $d
     /tmp/ccQpMUSZ.s:102    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccQpMUSZ.s:107    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccQpMUSZ.s:162    .text.HAL_InitTick:0000000000000040 $d
     /tmp/ccQpMUSZ.s:169    .text.HAL_Init:0000000000000000 $t
     /tmp/ccQpMUSZ.s:174    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccQpMUSZ.s:207    .text.HAL_Init:0000000000000020 $d
     /tmp/ccQpMUSZ.s:212    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccQpMUSZ.s:217    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccQpMUSZ.s:235    .text.HAL_IncTick:0000000000000010 $d
                            *COM*:0000000000000004 uwTick
     /tmp/ccQpMUSZ.s:241    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccQpMUSZ.s:246    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccQpMUSZ.s:261    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccQpMUSZ.s:266    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccQpMUSZ.s:271    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccQpMUSZ.s:285    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/ccQpMUSZ.s:290    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccQpMUSZ.s:295    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccQpMUSZ.s:333    .text.HAL_SetTickFreq:000000000000001c $d
     /tmp/ccQpMUSZ.s:339    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccQpMUSZ.s:344    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccQpMUSZ.s:358    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/ccQpMUSZ.s:363    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccQpMUSZ.s:368    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccQpMUSZ.s:409    .text.HAL_Delay:0000000000000024 $d
     /tmp/ccQpMUSZ.s:414    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccQpMUSZ.s:419    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccQpMUSZ.s:435    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccQpMUSZ.s:440    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccQpMUSZ.s:445    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccQpMUSZ.s:461    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccQpMUSZ.s:466    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccQpMUSZ.s:471    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccQpMUSZ.s:484    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/ccQpMUSZ.s:489    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccQpMUSZ.s:494    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccQpMUSZ.s:510    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccQpMUSZ.s:515    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccQpMUSZ.s:520    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccQpMUSZ.s:536    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccQpMUSZ.s:541    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccQpMUSZ.s:546    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccQpMUSZ.s:560    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/ccQpMUSZ.s:565    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccQpMUSZ.s:570    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccQpMUSZ.s:584    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/ccQpMUSZ.s:589    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccQpMUSZ.s:594    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
ARM GAS  /tmp/ccQpMUSZ.s 			page 25


     /tmp/ccQpMUSZ.s:608    .text.HAL_GetUIDw2:0000000000000008 $d
     /tmp/ccQpMUSZ.s:613    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccQpMUSZ.s:618    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccQpMUSZ.s:634    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/ccQpMUSZ.s:639    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccQpMUSZ.s:644    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccQpMUSZ.s:660    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/ccQpMUSZ.s:665    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccQpMUSZ.s:670    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccQpMUSZ.s:686    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccQpMUSZ.s:691    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccQpMUSZ.s:696    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccQpMUSZ.s:712    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccQpMUSZ.s:717    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccQpMUSZ.s:722    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccQpMUSZ.s:738    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccQpMUSZ.s:743    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccQpMUSZ.s:748    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccQpMUSZ.s:764    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/ccQpMUSZ.s:782    .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccQpMUSZ.s:776    .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccQpMUSZ.s:772    .data.uwTickPrio:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
