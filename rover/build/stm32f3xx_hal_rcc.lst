ARM GAS  /tmp/ccMjLcE6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_hal_rcc.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  21              		.align	2
  22              		.global	HAL_RCC_DeInit
  23              		.thumb
  24              		.thumb_func
  26              	HAL_RCC_DeInit:
  27              	.LFB123:
  28              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @file    stm32f3xx_hal_rcc.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *       
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim                
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
ARM GAS  /tmp/ccMjLcE6.s 			page 2


  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           derived from the System clock (RTC, ADC, I2C, I2S, TIM, USB FS)
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC Limitations #####
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       from/to registers.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       Workarounds:
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @attention
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      without specific prior written permission.
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************  
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** */
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #include "stm32f3xx_hal.h"
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @addtogroup STM32F3xx_HAL_Driver
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC RCC
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** * @brief RCC HAL module driver
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
ARM GAS  /tmp/ccMjLcE6.s 			page 3


  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  * @{
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  */
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Bits position in  in the CFGR register */
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_HPRE_BITNUMBER           POSITION_VAL(RCC_CFGR_HPRE)
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE1_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE1)
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE2_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE2)
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                        10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                          9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim    
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
ARM GAS  /tmp/ccMjLcE6.s 			page 4


 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and APB2).
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the PLL as System clock source.
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The HSI clock can be used also to clock the USART and I2C peripherals.
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source.
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 72 MHz)
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB FS (48 MHz)
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The third output may be used to generate the clock for the ADC peripherals (up to 72 M
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The fourth output may be used to generate the clock for the TIM peripherals (144 MHz)
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M4 NMI 
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE or PLL
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock (divided by 2) output on pin (such as PA8 pin).
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           HSE and PLL.
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) All the peripheral clocks are derived from the System clock (SYSCLK) except:
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The FLASH program/erase clock  which is always HSI 8MHz clock.
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USB 48 MHz clock which is derived from the PLL VCO clock.
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The I2C clock which can be derived as well from HSI 8MHz clock.
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The ADC clock which is derived from PLL output.
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              (HSE divided by a programmable prescaler). The System clock (SYSCLK)
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              frequency must be higher or equal to the RTC clock frequency.
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) IWDG clock which is always the LSI clock.
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) For the STM32F3xx devices, the maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              prefetch is disabled.
ARM GAS  /tmp/ccMjLcE6.s 			page 5


 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /*
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         | Latency       | SYSCLK clock frequency (MHz)  |
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSE and PLL OFF
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - All interrupts disabled
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - Peripheral clocks
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
  29              		.loc 1 233 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  40              	.LVL0:
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0;
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set HSION bit */
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
  41              		.loc 1 237 0
  42 0002 374A     		ldr	r2, .L14
  43 0004 1368     		ldr	r3, [r2]
  44 0006 43F00103 		orr	r3, r3, #1
  45 000a 1360     		str	r3, [r2]
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Insure HSIRDY bit is set before writing default HSITRIM value */
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get start tick */
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tickstart = HAL_GetTick();
ARM GAS  /tmp/ccMjLcE6.s 			page 6


  46              		.loc 1 241 0
  47 000c FFF7FEFF 		bl	HAL_GetTick
  48              	.LVL1:
  49 0010 0446     		mov	r4, r0
  50              	.LVL2:
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Wait till HSI is ready */
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
  51              		.loc 1 244 0
  52 0012 04E0     		b	.L2
  53              	.LVL3:
  54              	.L4:
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
  55              		.loc 1 246 0
  56 0014 FFF7FEFF 		bl	HAL_GetTick
  57              	.LVL4:
  58 0018 001B     		subs	r0, r0, r4
  59 001a 0228     		cmp	r0, #2
  60 001c 57D8     		bhi	.L9
  61              	.L2:
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
  62              		.loc 1 244 0
  63 001e 304B     		ldr	r3, .L14
  64 0020 1B68     		ldr	r3, [r3]
  65 0022 13F0020F 		tst	r3, #2
  66 0026 F5D0     		beq	.L4
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_TIMEOUT;
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set HSITRIM default value */
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, RCC_CR_HSITRIM_4);
  67              		.loc 1 253 0
  68 0028 2D4A     		ldr	r2, .L14
  69 002a 1368     		ldr	r3, [r2]
  70 002c 23F0F803 		bic	r3, r3, #248
  71 0030 43F08003 		orr	r3, r3, #128
  72 0034 1360     		str	r3, [r2]
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0] and MCOSEL[2:0] bits */
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW | RCC_CFGR_HPRE | RCC_CFGR_PPRE1 | RCC_CFGR_PPRE2 | RCC_CFGR_MCO
  73              		.loc 1 256 0
  74 0036 5168     		ldr	r1, [r2, #4]
  75 0038 2A4B     		ldr	r3, .L14+4
  76 003a 0B40     		ands	r3, r3, r1
  77 003c 5360     		str	r3, [r2, #4]
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Insure HSI selected as system clock source */
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get start tick */
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  78              		.loc 1 260 0
  79 003e FFF7FEFF 		bl	HAL_GetTick
  80              	.LVL5:
  81 0042 0446     		mov	r4, r0
  82              	.LVL6:
ARM GAS  /tmp/ccMjLcE6.s 			page 7


 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Wait till system clock source is ready */
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI)
  83              		.loc 1 263 0
  84 0044 06E0     		b	.L5
  85              	.LVL7:
  86              	.L6:
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
  87              		.loc 1 265 0
  88 0046 FFF7FEFF 		bl	HAL_GetTick
  89              	.LVL8:
  90 004a 001B     		subs	r0, r0, r4
  91 004c 41F28833 		movw	r3, #5000
  92 0050 9842     		cmp	r0, r3
  93 0052 3ED8     		bhi	.L10
  94              	.L5:
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
  95              		.loc 1 263 0
  96 0054 224B     		ldr	r3, .L14
  97 0056 5B68     		ldr	r3, [r3, #4]
  98 0058 13F00C0F 		tst	r3, #12
  99 005c F3D1     		bne	.L6
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_TIMEOUT;
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable for HSI as system clock source */
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 100              		.loc 1 272 0
 101 005e 224A     		ldr	r2, .L14+8
 102 0060 224B     		ldr	r3, .L14+12
 103 0062 1A60     		str	r2, [r3]
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the source of time base considering new system clock settings  */
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 104              		.loc 1 275 0
 105 0064 0020     		movs	r0, #0
 106 0066 FFF7FEFF 		bl	HAL_InitTick
 107              	.LVL9:
 108 006a 0446     		mov	r4, r0
 109              	.LVL10:
 110 006c 0028     		cmp	r0, #0
 111 006e 32D1     		bne	.L11
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     return HAL_ERROR;
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEON, CSSON, PLLON bits */
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON | RCC_CR_CSSON | RCC_CR_HSEON);
 112              		.loc 1 281 0
 113 0070 1B4A     		ldr	r2, .L14
 114 0072 1368     		ldr	r3, [r2]
 115 0074 23F08473 		bic	r3, r3, #17301504
 116 0078 23F48033 		bic	r3, r3, #65536
 117 007c 1360     		str	r3, [r2]
ARM GAS  /tmp/ccMjLcE6.s 			page 8


 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 118              		.loc 1 284 0
 119 007e 1368     		ldr	r3, [r2]
 120 0080 23F48023 		bic	r3, r3, #262144
 121 0084 1360     		str	r3, [r2]
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Insure PLLRDY is reset */
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get start tick */
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 122              		.loc 1 288 0
 123 0086 FFF7FEFF 		bl	HAL_GetTick
 124              	.LVL11:
 125 008a 0546     		mov	r5, r0
 126              	.LVL12:
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 127              		.loc 1 289 0
 128 008c 04E0     		b	.L7
 129              	.LVL13:
 130              	.L8:
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 131              		.loc 1 291 0
 132 008e FFF7FEFF 		bl	HAL_GetTick
 133              	.LVL14:
 134 0092 401B     		subs	r0, r0, r5
 135 0094 0228     		cmp	r0, #2
 136 0096 20D8     		bhi	.L12
 137              	.L7:
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 138              		.loc 1 289 0
 139 0098 114B     		ldr	r3, .L14
 140 009a 1B68     		ldr	r3, [r3]
 141 009c 13F0007F 		tst	r3, #33554432
 142 00a0 F5D1     		bne	.L8
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_TIMEOUT;
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR register */
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 143              		.loc 1 298 0
 144 00a2 0F4B     		ldr	r3, .L14
 145 00a4 0022     		movs	r2, #0
 146 00a6 5A60     		str	r2, [r3, #4]
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR2 register */
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
 147              		.loc 1 301 0
 148 00a8 DA62     		str	r2, [r3, #44]
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR3 register */
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR3);
 149              		.loc 1 304 0
 150 00aa 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/ccMjLcE6.s 			page 9


 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Clear all interrupt flags */
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SET_BIT(RCC->CIR, RCC_CIR_LSIRDYC | RCC_CIR_LSERDYC | RCC_CIR_HSIRDYC | RCC_CIR_HSERDYC | RCC_CIR
 151              		.loc 1 307 0
 152 00ac 9968     		ldr	r1, [r3, #8]
 153 00ae 41F41F01 		orr	r1, r1, #10420224
 154 00b2 9960     		str	r1, [r3, #8]
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Disable all interrupts */
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
 155              		.loc 1 310 0
 156 00b4 9A60     		str	r2, [r3, #8]
 157              	.LVL15:
 158              	.LBB168:
 159              	.LBB169:
 160              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
ARM GAS  /tmp/ccMjLcE6.s 			page 10


  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccMjLcE6.s 			page 11


  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccMjLcE6.s 			page 12


 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccMjLcE6.s 			page 13


 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
ARM GAS  /tmp/ccMjLcE6.s 			page 14


 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccMjLcE6.s 			page 15


 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
ARM GAS  /tmp/ccMjLcE6.s 			page 16


 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
ARM GAS  /tmp/ccMjLcE6.s 			page 17


 441:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 455:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 479:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 483:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t result;
 490:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccMjLcE6.s 			page 18


 498:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 526:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 528:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 161              		.loc 2 531 0
 162 00b6 4FF08072 		mov	r2, #16777216
 163              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 164 00ba 92FAA2F2 		rbit r2, r2
 165              	@ 0 "" 2
 166              	.LVL16:
 167              		.thumb
 168              	.LBE169:
 169              	.LBE168:
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset all CSR flags */
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   __HAL_RCC_CLEAR_RESET_FLAGS();
 170              		.loc 1 313 0
 171 00be B2FA82F2 		clz	r2, r2
 172              	.LVL17:
 173 00c2 0B4B     		ldr	r3, .L14+16
 174 00c4 1344     		add	r3, r3, r2
 175 00c6 9B00     		lsls	r3, r3, #2
 176 00c8 0122     		movs	r2, #1
 177 00ca 1A60     		str	r2, [r3]
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 178              		.loc 1 315 0
ARM GAS  /tmp/ccMjLcE6.s 			page 19


 179 00cc 06E0     		b	.L3
 180              	.LVL18:
 181              	.L9:
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 182              		.loc 1 248 0
 183 00ce 0324     		movs	r4, #3
 184              	.LVL19:
 185 00d0 04E0     		b	.L3
 186              	.LVL20:
 187              	.L10:
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 188              		.loc 1 267 0
 189 00d2 0324     		movs	r4, #3
 190              	.LVL21:
 191 00d4 02E0     		b	.L3
 192              	.L11:
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 193              		.loc 1 277 0
 194 00d6 0124     		movs	r4, #1
 195 00d8 00E0     		b	.L3
 196              	.LVL22:
 197              	.L12:
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 198              		.loc 1 293 0
 199 00da 0324     		movs	r4, #3
 200              	.LVL23:
 201              	.L3:
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 202              		.loc 1 316 0
 203 00dc 2046     		mov	r0, r4
 204 00de 38BD     		pop	{r3, r4, r5, pc}
 205              	.L15:
 206              		.align	2
 207              	.L14:
 208 00e0 00100240 		.word	1073876992
 209 00e4 0CC0FFF8 		.word	-117456884
 210 00e8 00127A00 		.word	8000000
 211 00ec 00000000 		.word	SystemCoreClock
 212 00f0 20819010 		.word	277905696
 213              		.cfi_endproc
 214              	.LFE123:
 216              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 217              		.align	2
 218              		.global	HAL_RCC_OscConfig
 219              		.thumb
 220              		.thumb_func
 222              	HAL_RCC_OscConfig:
 223              	.LFB124:
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
ARM GAS  /tmp/ccMjLcE6.s 			page 20


 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 224              		.loc 1 333 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 8
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              	.LVL24:
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart;
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check Null pointer */
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
 229              		.loc 1 337 0
 230 0000 0028     		cmp	r0, #0
 231 0002 00F0EA82 		beq	.L89
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart;
 232              		.loc 1 333 0
 233 0006 70B5     		push	{r4, r5, r6, lr}
 234              	.LCFI1:
 235              		.cfi_def_cfa_offset 16
 236              		.cfi_offset 4, -16
 237              		.cfi_offset 5, -12
 238              		.cfi_offset 6, -8
 239              		.cfi_offset 14, -4
 240 0008 82B0     		sub	sp, sp, #8
 241              	.LCFI2:
 242              		.cfi_def_cfa_offset 24
 243 000a 0446     		mov	r4, r0
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     return HAL_ERROR;
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 244              		.loc 1 346 0
 245 000c 0368     		ldr	r3, [r0]
 246 000e 13F0010F 		tst	r3, #1
 247 0012 00F09880 		beq	.L18
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 248              		.loc 1 352 0
 249 0016 B54B     		ldr	r3, .L108
 250 0018 5B68     		ldr	r3, [r3, #4]
 251 001a 03F00C03 		and	r3, r3, #12
 252 001e 042B     		cmp	r3, #4
ARM GAS  /tmp/ccMjLcE6.s 			page 21


 253 0020 0CD0     		beq	.L19
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 254              		.loc 1 353 0
 255 0022 B24B     		ldr	r3, .L108
 256 0024 5B68     		ldr	r3, [r3, #4]
 257 0026 03F00C03 		and	r3, r3, #12
 258 002a 082B     		cmp	r3, #8
 259 002c 1DD1     		bne	.L20
 260              		.loc 1 353 0 is_stmt 0 discriminator 1
 261 002e AF4B     		ldr	r3, .L108
 262 0030 5B68     		ldr	r3, [r3, #4]
 263 0032 03F4C033 		and	r3, r3, #98304
 264 0036 B3F5803F 		cmp	r3, #65536
 265 003a 16D1     		bne	.L20
 266              	.L19:
 267              	.LVL25:
 268              	.LBB170:
 269              	.LBB171:
 270              		.loc 2 531 0 is_stmt 1
 271 003c 4FF40033 		mov	r3, #131072
 272              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 273 0040 93FAA3F3 		rbit r3, r3
 274              	@ 0 "" 2
 275              		.thumb
 276              	.LBE171:
 277              	.LBE170:
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 278              		.loc 1 355 0
 279 0044 A94B     		ldr	r3, .L108
 280 0046 1968     		ldr	r1, [r3]
 281              	.LVL26:
 282              	.LBB172:
 283              	.LBB173:
 284              		.loc 2 531 0
 285 0048 4FF40033 		mov	r3, #131072
 286              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 287 004c 93FAA3F3 		rbit r3, r3
 288              	@ 0 "" 2
 289              	.LVL27:
 290              		.thumb
 291              	.LBE173:
 292              	.LBE172:
 293              		.loc 1 355 0
 294 0050 B3FA83F3 		clz	r3, r3
 295              	.LVL28:
 296 0054 03F01F03 		and	r3, r3, #31
 297 0058 0122     		movs	r2, #1
 298 005a 02FA03F3 		lsl	r3, r2, r3
 299 005e 1942     		tst	r1, r3
 300 0060 71D0     		beq	.L18
 301              		.loc 1 355 0 is_stmt 0 discriminator 13
 302 0062 6368     		ldr	r3, [r4, #4]
 303 0064 002B     		cmp	r3, #0
 304 0066 6ED1     		bne	.L18
 305 0068 B9E2     		b	.L90
 306              	.LVL29:
ARM GAS  /tmp/ccMjLcE6.s 			page 22


 307              	.L20:
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 308              		.loc 1 363 0 is_stmt 1
 309 006a 6368     		ldr	r3, [r4, #4]
 310 006c B3F5803F 		cmp	r3, #65536
 311 0070 05D1     		bne	.L23
 312              		.loc 1 363 0 is_stmt 0 discriminator 1
 313 0072 9E4A     		ldr	r2, .L108
 314 0074 1368     		ldr	r3, [r2]
 315 0076 43F48033 		orr	r3, r3, #65536
 316 007a 1360     		str	r3, [r2]
 317 007c 26E0     		b	.L24
 318              	.L23:
 319              		.loc 1 363 0 discriminator 2
 320 007e 63B9     		cbnz	r3, .L25
 321              		.loc 1 363 0 discriminator 3
 322 0080 03F18043 		add	r3, r3, #1073741824
 323 0084 03F50433 		add	r3, r3, #135168
 324 0088 1A68     		ldr	r2, [r3]
 325 008a 22F48032 		bic	r2, r2, #65536
 326 008e 1A60     		str	r2, [r3]
 327 0090 1A68     		ldr	r2, [r3]
 328 0092 22F48022 		bic	r2, r2, #262144
 329 0096 1A60     		str	r2, [r3]
 330 0098 18E0     		b	.L24
 331              	.L25:
 332              		.loc 1 363 0 discriminator 4
 333 009a B3F5A02F 		cmp	r3, #327680
 334 009e 0CD1     		bne	.L26
 335              		.loc 1 363 0 discriminator 5
 336 00a0 03F18043 		add	r3, r3, #1073741824
 337 00a4 A3F53C33 		sub	r3, r3, #192512
 338 00a8 1A68     		ldr	r2, [r3]
 339 00aa 42F48022 		orr	r2, r2, #262144
 340 00ae 1A60     		str	r2, [r3]
 341 00b0 1A68     		ldr	r2, [r3]
 342 00b2 42F48032 		orr	r2, r2, #65536
 343 00b6 1A60     		str	r2, [r3]
 344 00b8 08E0     		b	.L24
 345              	.L26:
 346              		.loc 1 363 0 discriminator 6
 347 00ba 8C4B     		ldr	r3, .L108
 348 00bc 1A68     		ldr	r2, [r3]
 349 00be 22F48032 		bic	r2, r2, #65536
 350 00c2 1A60     		str	r2, [r3]
 351 00c4 1A68     		ldr	r2, [r3]
 352 00c6 22F48022 		bic	r2, r2, #262144
 353 00ca 1A60     		str	r2, [r3]
 354              	.L24:
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
ARM GAS  /tmp/ccMjLcE6.s 			page 23


 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the HSE predivision factor --------------------------------*/
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Check the HSE State */
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 355              		.loc 1 371 0 is_stmt 1
 356 00cc 6368     		ldr	r3, [r4, #4]
 357 00ce EBB1     		cbz	r3, .L27
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 358              		.loc 1 374 0
 359 00d0 FFF7FEFF 		bl	HAL_GetTick
 360              	.LVL30:
 361 00d4 0546     		mov	r5, r0
 362              	.LVL31:
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is ready */
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 363              		.loc 1 377 0
 364 00d6 05E0     		b	.L28
 365              	.LVL32:
 366              	.L31:
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 367              		.loc 1 379 0
 368 00d8 FFF7FEFF 		bl	HAL_GetTick
 369              	.LVL33:
 370 00dc 401B     		subs	r0, r0, r5
 371 00de 6428     		cmp	r0, #100
 372 00e0 00F27F82 		bhi	.L91
 373              	.LVL34:
 374              	.L28:
 375              	.LBB174:
 376              	.LBB175:
 377              		.loc 2 531 0
 378 00e4 4FF40033 		mov	r3, #131072
 379              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 380 00e8 93FAA3F3 		rbit r3, r3
 381              	@ 0 "" 2
 382              		.thumb
 383              	.LBE175:
 384              	.LBE174:
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 385              		.loc 1 377 0
 386 00ec 7F4B     		ldr	r3, .L108
 387 00ee 1968     		ldr	r1, [r3]
 388              	.LVL35:
 389              	.LBB176:
 390              	.LBB177:
 391              		.loc 2 531 0
 392 00f0 4FF40033 		mov	r3, #131072
 393              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 394 00f4 93FAA3F3 		rbit r3, r3
 395              	@ 0 "" 2
ARM GAS  /tmp/ccMjLcE6.s 			page 24


 396              	.LVL36:
 397              		.thumb
 398              	.LBE177:
 399              	.LBE176:
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 400              		.loc 1 377 0
 401 00f8 B3FA83F3 		clz	r3, r3
 402              	.LVL37:
 403 00fc 03F01F03 		and	r3, r3, #31
 404 0100 0122     		movs	r2, #1
 405 0102 02FA03F3 		lsl	r3, r2, r3
 406 0106 1942     		tst	r1, r3
 407 0108 E6D0     		beq	.L31
 408 010a 1CE0     		b	.L18
 409              	.LVL38:
 410              	.L27:
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 411              		.loc 1 388 0
 412 010c FFF7FEFF 		bl	HAL_GetTick
 413              	.LVL39:
 414 0110 0546     		mov	r5, r0
 415              	.LVL40:
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 416              		.loc 1 391 0
 417 0112 05E0     		b	.L32
 418              	.LVL41:
 419              	.L35:
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 420              		.loc 1 393 0
 421 0114 FFF7FEFF 		bl	HAL_GetTick
 422              	.LVL42:
 423 0118 401B     		subs	r0, r0, r5
 424 011a 6428     		cmp	r0, #100
 425 011c 00F26382 		bhi	.L92
 426              	.LVL43:
 427              	.L32:
 428              	.LBB178:
 429              	.LBB179:
 430              		.loc 2 531 0
 431 0120 4FF40033 		mov	r3, #131072
 432              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 433 0124 93FAA3F3 		rbit r3, r3
 434              	@ 0 "" 2
 435              		.thumb
 436              	.LBE179:
 437              	.LBE178:
ARM GAS  /tmp/ccMjLcE6.s 			page 25


 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 438              		.loc 1 391 0
 439 0128 704B     		ldr	r3, .L108
 440 012a 1968     		ldr	r1, [r3]
 441              	.LVL44:
 442              	.LBB180:
 443              	.LBB181:
 444              		.loc 2 531 0
 445 012c 4FF40033 		mov	r3, #131072
 446              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 447 0130 93FAA3F3 		rbit r3, r3
 448              	@ 0 "" 2
 449              	.LVL45:
 450              		.thumb
 451              	.LBE181:
 452              	.LBE180:
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 453              		.loc 1 391 0
 454 0134 B3FA83F3 		clz	r3, r3
 455              	.LVL46:
 456 0138 03F01F03 		and	r3, r3, #31
 457 013c 0122     		movs	r2, #1
 458 013e 02FA03F3 		lsl	r3, r2, r3
 459 0142 1942     		tst	r1, r3
 460 0144 E6D1     		bne	.L35
 461              	.LVL47:
 462              	.L18:
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 463              		.loc 1 402 0
 464 0146 2368     		ldr	r3, [r4]
 465 0148 13F0020F 		tst	r3, #2
 466 014c 00F09280 		beq	.L36
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 467              		.loc 1 409 0
 468 0150 664B     		ldr	r3, .L108
 469 0152 5B68     		ldr	r3, [r3, #4]
 470 0154 13F00C0F 		tst	r3, #12
 471 0158 0CD0     		beq	.L37
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 472              		.loc 1 410 0
 473 015a 644B     		ldr	r3, .L108
 474 015c 5B68     		ldr	r3, [r3, #4]
 475 015e 03F00C03 		and	r3, r3, #12
ARM GAS  /tmp/ccMjLcE6.s 			page 26


 476 0162 082B     		cmp	r3, #8
 477 0164 29D1     		bne	.L38
 478              		.loc 1 410 0 is_stmt 0 discriminator 1
 479 0166 614B     		ldr	r3, .L108
 480 0168 5B68     		ldr	r3, [r3, #4]
 481 016a 03F4C033 		and	r3, r3, #98304
 482 016e B3F5004F 		cmp	r3, #32768
 483 0172 22D1     		bne	.L38
 484              	.L37:
 485              	.LVL48:
 486              	.LBB182:
 487              	.LBB183:
 488              		.loc 2 531 0 is_stmt 1
 489 0174 0223     		movs	r3, #2
 490              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 491 0176 93FAA3F3 		rbit r3, r3
 492              	@ 0 "" 2
 493              		.thumb
 494              	.LBE183:
 495              	.LBE182:
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 496              		.loc 1 413 0
 497 017a 5C4B     		ldr	r3, .L108
 498 017c 1968     		ldr	r1, [r3]
 499              	.LVL49:
 500              	.LBB184:
 501              	.LBB185:
 502              		.loc 2 531 0
 503 017e 0223     		movs	r3, #2
 504              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 505 0180 93FAA3F3 		rbit r3, r3
 506              	@ 0 "" 2
 507              	.LVL50:
 508              		.thumb
 509              	.LBE185:
 510              	.LBE184:
 511              		.loc 1 413 0
 512 0184 B3FA83F3 		clz	r3, r3
 513              	.LVL51:
 514 0188 03F01F03 		and	r3, r3, #31
 515 018c 0122     		movs	r2, #1
 516 018e 02FA03F3 		lsl	r3, r2, r3
 517 0192 1942     		tst	r1, r3
 518 0194 03D0     		beq	.L41
 519              		.loc 1 413 0 is_stmt 0 discriminator 13
 520 0196 E368     		ldr	r3, [r4, #12]
 521 0198 9342     		cmp	r3, r2
 522 019a 40F02682 		bne	.L93
 523              	.L41:
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccMjLcE6.s 			page 27


 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 524              		.loc 1 421 0 is_stmt 1
 525 019e 5348     		ldr	r0, .L108
 526 01a0 0368     		ldr	r3, [r0]
 527 01a2 23F0F801 		bic	r1, r3, #248
 528 01a6 2369     		ldr	r3, [r4, #16]
 529              	.LVL52:
 530              	.LBB186:
 531              	.LBB187:
 532              		.loc 2 531 0
 533 01a8 F822     		movs	r2, #248
 534              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 535 01aa 92FAA2F2 		rbit r2, r2
 536              	@ 0 "" 2
 537              	.LVL53:
 538              		.thumb
 539              	.LBE187:
 540              	.LBE186:
 541              		.loc 1 421 0
 542 01ae B2FA82F2 		clz	r2, r2
 543              	.LVL54:
 544 01b2 9340     		lsls	r3, r3, r2
 545 01b4 0B43     		orrs	r3, r3, r1
 546 01b6 0360     		str	r3, [r0]
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 547              		.loc 1 413 0
 548 01b8 5CE0     		b	.L36
 549              	.LVL55:
 550              	.L38:
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI State */
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 551              		.loc 1 427 0
 552 01ba E368     		ldr	r3, [r4, #12]
 553 01bc 9BB3     		cbz	r3, .L42
 554              	.LVL56:
 555              	.LBB188:
 556              	.LBB189:
 557              		.loc 2 531 0
 558 01be 0122     		movs	r2, #1
 559              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 560 01c0 92FAA2F3 		rbit r3, r2
 561              	@ 0 "" 2
 562              	.LVL57:
 563              		.thumb
 564              	.LBE189:
 565              	.LBE188:
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 566              		.loc 1 430 0
 567 01c4 B3FA83F3 		clz	r3, r3
 568              	.LVL58:
ARM GAS  /tmp/ccMjLcE6.s 			page 28


 569 01c8 03F18453 		add	r3, r3, #276824064
 570 01cc 03F58413 		add	r3, r3, #1081344
 571 01d0 9B00     		lsls	r3, r3, #2
 572 01d2 1A60     		str	r2, [r3]
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 573              		.loc 1 433 0
 574 01d4 FFF7FEFF 		bl	HAL_GetTick
 575              	.LVL59:
 576 01d8 0546     		mov	r5, r0
 577              	.LVL60:
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is ready */
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 578              		.loc 1 436 0
 579 01da 05E0     		b	.L43
 580              	.LVL61:
 581              	.L46:
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 582              		.loc 1 438 0
 583 01dc FFF7FEFF 		bl	HAL_GetTick
 584              	.LVL62:
 585 01e0 401B     		subs	r0, r0, r5
 586 01e2 0228     		cmp	r0, #2
 587 01e4 00F20382 		bhi	.L94
 588              	.LVL63:
 589              	.L43:
 590              	.LBB190:
 591              	.LBB191:
 592              		.loc 2 531 0
 593 01e8 0223     		movs	r3, #2
 594              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 595 01ea 93FAA3F3 		rbit r3, r3
 596              	@ 0 "" 2
 597              		.thumb
 598              	.LBE191:
 599              	.LBE190:
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 600              		.loc 1 436 0
 601 01ee 3F4B     		ldr	r3, .L108
 602 01f0 1968     		ldr	r1, [r3]
 603              	.LVL64:
 604              	.LBB192:
 605              	.LBB193:
 606              		.loc 2 531 0
 607 01f2 0223     		movs	r3, #2
 608              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 609 01f4 93FAA3F3 		rbit r3, r3
 610              	@ 0 "" 2
 611              	.LVL65:
 612              		.thumb
 613              	.LBE193:
 614              	.LBE192:
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 615              		.loc 1 436 0
ARM GAS  /tmp/ccMjLcE6.s 			page 29


 616 01f8 B3FA83F3 		clz	r3, r3
 617              	.LVL66:
 618 01fc 03F01F03 		and	r3, r3, #31
 619 0200 0122     		movs	r2, #1
 620 0202 02FA03F3 		lsl	r3, r2, r3
 621 0206 1942     		tst	r1, r3
 622 0208 E8D0     		beq	.L46
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                 
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 623              		.loc 1 445 0
 624 020a 3848     		ldr	r0, .L108
 625 020c 0368     		ldr	r3, [r0]
 626 020e 23F0F801 		bic	r1, r3, #248
 627 0212 2369     		ldr	r3, [r4, #16]
 628              	.LVL67:
 629              	.LBB194:
 630              	.LBB195:
 631              		.loc 2 531 0
 632 0214 F822     		movs	r2, #248
 633              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 634 0216 92FAA2F2 		rbit r2, r2
 635              	@ 0 "" 2
 636              	.LVL68:
 637              		.thumb
 638              	.LBE195:
 639              	.LBE194:
 640              		.loc 1 445 0
 641 021a B2FA82F2 		clz	r2, r2
 642              	.LVL69:
 643 021e 9340     		lsls	r3, r3, r2
 644 0220 0B43     		orrs	r3, r3, r1
 645 0222 0360     		str	r3, [r0]
 646 0224 26E0     		b	.L36
 647              	.LVL70:
 648              	.L42:
 649              	.LBB196:
 650              	.LBB197:
 651              		.loc 2 531 0
 652 0226 0123     		movs	r3, #1
 653              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 654 0228 93FAA3F3 		rbit r3, r3
 655              	@ 0 "" 2
 656              	.LVL71:
 657              		.thumb
 658              	.LBE197:
 659              	.LBE196:
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 660              		.loc 1 450 0
ARM GAS  /tmp/ccMjLcE6.s 			page 30


 661 022c B3FA83F3 		clz	r3, r3
 662              	.LVL72:
 663 0230 03F18453 		add	r3, r3, #276824064
 664 0234 03F58413 		add	r3, r3, #1081344
 665 0238 9B00     		lsls	r3, r3, #2
 666 023a 0022     		movs	r2, #0
 667 023c 1A60     		str	r2, [r3]
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 668              		.loc 1 453 0
 669 023e FFF7FEFF 		bl	HAL_GetTick
 670              	.LVL73:
 671 0242 0546     		mov	r5, r0
 672              	.LVL74:
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 673              		.loc 1 456 0
 674 0244 05E0     		b	.L47
 675              	.LVL75:
 676              	.L50:
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 677              		.loc 1 458 0
 678 0246 FFF7FEFF 		bl	HAL_GetTick
 679              	.LVL76:
 680 024a 401B     		subs	r0, r0, r5
 681 024c 0228     		cmp	r0, #2
 682 024e 00F2D081 		bhi	.L95
 683              	.LVL77:
 684              	.L47:
 685              	.LBB198:
 686              	.LBB199:
 687              		.loc 2 531 0
 688 0252 0223     		movs	r3, #2
 689              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 690 0254 93FAA3F3 		rbit r3, r3
 691              	@ 0 "" 2
 692              		.thumb
 693              	.LBE199:
 694              	.LBE198:
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 695              		.loc 1 456 0
 696 0258 244B     		ldr	r3, .L108
 697 025a 1968     		ldr	r1, [r3]
 698              	.LVL78:
 699              	.LBB200:
 700              	.LBB201:
 701              		.loc 2 531 0
 702 025c 0223     		movs	r3, #2
 703              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 704 025e 93FAA3F3 		rbit r3, r3
 705              	@ 0 "" 2
 706              	.LVL79:
 707              		.thumb
 708              	.LBE201:
ARM GAS  /tmp/ccMjLcE6.s 			page 31


 709              	.LBE200:
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 710              		.loc 1 456 0
 711 0262 B3FA83F3 		clz	r3, r3
 712              	.LVL80:
 713 0266 03F01F03 		and	r3, r3, #31
 714 026a 0122     		movs	r2, #1
 715 026c 02FA03F3 		lsl	r3, r2, r3
 716 0270 1942     		tst	r1, r3
 717 0272 E8D1     		bne	.L50
 718              	.LVL81:
 719              	.L36:
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 720              		.loc 1 467 0
 721 0274 2368     		ldr	r3, [r4]
 722 0276 13F0080F 		tst	r3, #8
 723 027a 55D0     		beq	.L51
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSI State */
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 724              		.loc 1 473 0
 725 027c 6369     		ldr	r3, [r4, #20]
 726 027e 3BB3     		cbz	r3, .L52
 727              	.LVL82:
 728              	.LBB202:
 729              	.LBB203:
 730              		.loc 2 531 0
 731 0280 0121     		movs	r1, #1
 732              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 733 0282 91FAA1F2 		rbit r2, r1
 734              	@ 0 "" 2
 735              	.LVL83:
 736              		.thumb
 737              	.LBE203:
 738              	.LBE202:
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 739              		.loc 1 476 0
 740 0286 B2FA82F2 		clz	r2, r2
 741              	.LVL84:
 742 028a 194B     		ldr	r3, .L108+4
 743 028c 1344     		add	r3, r3, r2
 744 028e 9B00     		lsls	r3, r3, #2
 745 0290 1960     		str	r1, [r3]
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
ARM GAS  /tmp/ccMjLcE6.s 			page 32


 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 746              		.loc 1 479 0
 747 0292 FFF7FEFF 		bl	HAL_GetTick
 748              	.LVL85:
 749 0296 0546     		mov	r5, r0
 750              	.LVL86:
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 751              		.loc 1 482 0
 752 0298 05E0     		b	.L53
 753              	.LVL87:
 754              	.L54:
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 755              		.loc 1 484 0
 756 029a FFF7FEFF 		bl	HAL_GetTick
 757              	.LVL88:
 758 029e 401B     		subs	r0, r0, r5
 759 02a0 0228     		cmp	r0, #2
 760 02a2 00F2A881 		bhi	.L96
 761              	.LVL89:
 762              	.L53:
 763              	.LBB204:
 764              	.LBB205:
 765              		.loc 2 531 0
 766 02a6 0223     		movs	r3, #2
 767              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 768 02a8 93FAA3F2 		rbit r2, r3
 769              	@ 0 "" 2
 770              	.LVL90:
 771              		.thumb
 772              	.LBE205:
 773              	.LBE204:
 774              	.LBB206:
 775              	.LBB207:
 776              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 777 02ac 93FAA3F2 		rbit r2, r3
 778              	@ 0 "" 2
 779              	.LVL91:
 780              		.thumb
 781              	.LBE207:
 782              	.LBE206:
 783              	.LBB208:
 784              	.LBB209:
 785              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 786 02b0 93FAA3F2 		rbit r2, r3
 787              	@ 0 "" 2
 788              		.thumb
 789              	.LBE209:
 790              	.LBE208:
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 791              		.loc 1 482 0
 792 02b4 0D4A     		ldr	r2, .L108
 793 02b6 516A     		ldr	r1, [r2, #36]
 794              	.LVL92:
ARM GAS  /tmp/ccMjLcE6.s 			page 33


 795              	.LBB210:
 796              	.LBB211:
 797              		.loc 2 531 0
 798              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 799 02b8 93FAA3F3 		rbit r3, r3
 800              	@ 0 "" 2
 801              	.LVL93:
 802              		.thumb
 803              	.LBE211:
 804              	.LBE210:
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 805              		.loc 1 482 0
 806 02bc B3FA83F3 		clz	r3, r3
 807              	.LVL94:
 808 02c0 03F01F03 		and	r3, r3, #31
 809 02c4 0122     		movs	r2, #1
 810 02c6 02FA03F3 		lsl	r3, r2, r3
 811 02ca 1942     		tst	r1, r3
 812 02cc E5D0     		beq	.L54
 813 02ce 2BE0     		b	.L51
 814              	.LVL95:
 815              	.L52:
 816              	.LBB212:
 817              	.LBB213:
 818              		.loc 2 531 0
 819 02d0 0122     		movs	r2, #1
 820              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 821 02d2 92FAA2F2 		rbit r2, r2
 822              	@ 0 "" 2
 823              	.LVL96:
 824              		.thumb
 825              	.LBE213:
 826              	.LBE212:
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 827              		.loc 1 493 0
 828 02d6 B2FA82F2 		clz	r2, r2
 829              	.LVL97:
 830 02da 054B     		ldr	r3, .L108+4
 831 02dc 1344     		add	r3, r3, r2
 832 02de 9B00     		lsls	r3, r3, #2
 833 02e0 0022     		movs	r2, #0
 834 02e2 1A60     		str	r2, [r3]
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 835              		.loc 1 496 0
 836 02e4 FFF7FEFF 		bl	HAL_GetTick
 837              	.LVL98:
 838 02e8 0546     		mov	r5, r0
ARM GAS  /tmp/ccMjLcE6.s 			page 34


 839              	.LVL99:
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 840              		.loc 1 499 0
 841 02ea 09E0     		b	.L55
 842              	.L109:
 843              		.align	2
 844              	.L108:
 845 02ec 00100240 		.word	1073876992
 846 02f0 20819010 		.word	277905696
 847              	.LVL100:
 848              	.L56:
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 849              		.loc 1 501 0
 850 02f4 FFF7FEFF 		bl	HAL_GetTick
 851              	.LVL101:
 852 02f8 401B     		subs	r0, r0, r5
 853 02fa 0228     		cmp	r0, #2
 854 02fc 00F27D81 		bhi	.L97
 855              	.LVL102:
 856              	.L55:
 857              	.LBB214:
 858              	.LBB215:
 859              		.loc 2 531 0
 860 0300 0223     		movs	r3, #2
 861              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 862 0302 93FAA3F2 		rbit r2, r3
 863              	@ 0 "" 2
 864              	.LVL103:
 865              		.thumb
 866              	.LBE215:
 867              	.LBE214:
 868              	.LBB216:
 869              	.LBB217:
 870              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 871 0306 93FAA3F2 		rbit r2, r3
 872              	@ 0 "" 2
 873              	.LVL104:
 874              		.thumb
 875              	.LBE217:
 876              	.LBE216:
 877              	.LBB218:
 878              	.LBB219:
 879              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 880 030a 93FAA3F2 		rbit r2, r3
 881              	@ 0 "" 2
 882              		.thumb
 883              	.LBE219:
 884              	.LBE218:
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 885              		.loc 1 499 0
 886 030e BE4A     		ldr	r2, .L110
 887 0310 516A     		ldr	r1, [r2, #36]
 888              	.LVL105:
 889              	.LBB220:
ARM GAS  /tmp/ccMjLcE6.s 			page 35


 890              	.LBB221:
 891              		.loc 2 531 0
 892              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 893 0312 93FAA3F3 		rbit r3, r3
 894              	@ 0 "" 2
 895              	.LVL106:
 896              		.thumb
 897              	.LBE221:
 898              	.LBE220:
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 899              		.loc 1 499 0
 900 0316 B3FA83F3 		clz	r3, r3
 901              	.LVL107:
 902 031a 03F01F03 		and	r3, r3, #31
 903 031e 0122     		movs	r2, #1
 904 0320 02FA03F3 		lsl	r3, r2, r3
 905 0324 1942     		tst	r1, r3
 906 0326 E5D1     		bne	.L56
 907              	.LVL108:
 908              	.L51:
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 909              		.loc 1 509 0
 910 0328 2368     		ldr	r3, [r4]
 911 032a 13F0040F 		tst	r3, #4
 912 032e 00F0B880 		beq	.L57
 913              	.LVL109:
 914              	.LBB222:
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 915              		.loc 1 518 0
 916 0332 B54B     		ldr	r3, .L110
 917 0334 DB69     		ldr	r3, [r3, #28]
 918 0336 13F0805F 		tst	r3, #268435456
 919 033a 0BD1     		bne	.L98
 920              	.LBB223:
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 921              		.loc 1 520 0
 922 033c B24B     		ldr	r3, .L110
 923 033e DA69     		ldr	r2, [r3, #28]
 924 0340 42F08052 		orr	r2, r2, #268435456
 925 0344 DA61     		str	r2, [r3, #28]
 926 0346 DB69     		ldr	r3, [r3, #28]
ARM GAS  /tmp/ccMjLcE6.s 			page 36


 927 0348 03F08053 		and	r3, r3, #268435456
 928 034c 0193     		str	r3, [sp, #4]
 929 034e 019B     		ldr	r3, [sp, #4]
 930              	.LVL110:
 931              	.LBE223:
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pwrclkchanged = SET;
 932              		.loc 1 521 0
 933 0350 0125     		movs	r5, #1
 934 0352 00E0     		b	.L58
 935              	.LVL111:
 936              	.L98:
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 937              		.loc 1 511 0
 938 0354 0025     		movs	r5, #0
 939              	.LVL112:
 940              	.L58:
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 941              		.loc 1 524 0
 942 0356 AD4B     		ldr	r3, .L110+4
 943 0358 1B68     		ldr	r3, [r3]
 944 035a 13F4807F 		tst	r3, #256
 945 035e 13D1     		bne	.L59
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 946              		.loc 1 527 0
 947 0360 AA4A     		ldr	r2, .L110+4
 948 0362 1368     		ldr	r3, [r2]
 949 0364 43F48073 		orr	r3, r3, #256
 950 0368 1360     		str	r3, [r2]
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 951              		.loc 1 530 0
 952 036a FFF7FEFF 		bl	HAL_GetTick
 953              	.LVL113:
 954 036e 0646     		mov	r6, r0
 955              	.LVL114:
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 956              		.loc 1 532 0
 957 0370 05E0     		b	.L60
 958              	.LVL115:
 959              	.L61:
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 960              		.loc 1 534 0
 961 0372 FFF7FEFF 		bl	HAL_GetTick
 962              	.LVL116:
 963 0376 801B     		subs	r0, r0, r6
 964 0378 6428     		cmp	r0, #100
 965 037a 00F24081 		bhi	.L99
 966              	.L60:
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 967              		.loc 1 532 0
ARM GAS  /tmp/ccMjLcE6.s 			page 37


 968 037e A34B     		ldr	r3, .L110+4
 969 0380 1B68     		ldr	r3, [r3]
 970 0382 13F4807F 		tst	r3, #256
 971 0386 F4D0     		beq	.L61
 972              	.LVL117:
 973              	.L59:
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 974              		.loc 1 542 0
 975 0388 A368     		ldr	r3, [r4, #8]
 976 038a 012B     		cmp	r3, #1
 977 038c 05D1     		bne	.L62
 978              		.loc 1 542 0 is_stmt 0 discriminator 1
 979 038e 9E4A     		ldr	r2, .L110
 980 0390 136A     		ldr	r3, [r2, #32]
 981 0392 43F00103 		orr	r3, r3, #1
 982 0396 1362     		str	r3, [r2, #32]
 983 0398 22E0     		b	.L63
 984              	.L62:
 985              		.loc 1 542 0 discriminator 2
 986 039a 63B9     		cbnz	r3, .L64
 987              		.loc 1 542 0 discriminator 3
 988 039c 03F18043 		add	r3, r3, #1073741824
 989 03a0 03F50433 		add	r3, r3, #135168
 990 03a4 1A6A     		ldr	r2, [r3, #32]
 991 03a6 22F00102 		bic	r2, r2, #1
 992 03aa 1A62     		str	r2, [r3, #32]
 993 03ac 1A6A     		ldr	r2, [r3, #32]
 994 03ae 22F00402 		bic	r2, r2, #4
 995 03b2 1A62     		str	r2, [r3, #32]
 996 03b4 14E0     		b	.L63
 997              	.L64:
 998              		.loc 1 542 0 discriminator 4
 999 03b6 052B     		cmp	r3, #5
 1000 03b8 09D1     		bne	.L65
 1001              		.loc 1 542 0 discriminator 5
 1002 03ba 934B     		ldr	r3, .L110
 1003 03bc 1A6A     		ldr	r2, [r3, #32]
 1004 03be 42F00402 		orr	r2, r2, #4
 1005 03c2 1A62     		str	r2, [r3, #32]
 1006 03c4 1A6A     		ldr	r2, [r3, #32]
 1007 03c6 42F00102 		orr	r2, r2, #1
 1008 03ca 1A62     		str	r2, [r3, #32]
 1009 03cc 08E0     		b	.L63
 1010              	.L65:
 1011              		.loc 1 542 0 discriminator 6
 1012 03ce 8E4B     		ldr	r3, .L110
 1013 03d0 1A6A     		ldr	r2, [r3, #32]
 1014 03d2 22F00102 		bic	r2, r2, #1
 1015 03d6 1A62     		str	r2, [r3, #32]
 1016 03d8 1A6A     		ldr	r2, [r3, #32]
ARM GAS  /tmp/ccMjLcE6.s 			page 38


 1017 03da 22F00402 		bic	r2, r2, #4
 1018 03de 1A62     		str	r2, [r3, #32]
 1019              	.L63:
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 1020              		.loc 1 544 0 is_stmt 1
 1021 03e0 A368     		ldr	r3, [r4, #8]
 1022 03e2 63B3     		cbz	r3, .L66
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1023              		.loc 1 547 0
 1024 03e4 FFF7FEFF 		bl	HAL_GetTick
 1025              	.LVL118:
 1026 03e8 0646     		mov	r6, r0
 1027              	.LVL119:
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 1028              		.loc 1 550 0
 1029 03ea 07E0     		b	.L67
 1030              	.LVL120:
 1031              	.L70:
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1032              		.loc 1 552 0
 1033 03ec FFF7FEFF 		bl	HAL_GetTick
 1034              	.LVL121:
 1035 03f0 801B     		subs	r0, r0, r6
 1036 03f2 41F28833 		movw	r3, #5000
 1037 03f6 9842     		cmp	r0, r3
 1038 03f8 00F20381 		bhi	.L100
 1039              	.LVL122:
 1040              	.L67:
 1041              	.LBB224:
 1042              	.LBB225:
 1043              		.loc 2 531 0
 1044 03fc 0223     		movs	r3, #2
 1045              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1046 03fe 93FAA3F2 		rbit r2, r3
 1047              	@ 0 "" 2
 1048              	.LVL123:
 1049              		.thumb
 1050              	.LBE225:
 1051              	.LBE224:
 1052              	.LBB226:
 1053              	.LBB227:
 1054              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1055 0402 93FAA3F3 		rbit r3, r3
 1056              	@ 0 "" 2
 1057              	.LVL124:
 1058              		.thumb
 1059              	.LBE227:
 1060              	.LBE226:
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1061              		.loc 1 550 0
 1062 0406 B3FA83F3 		clz	r3, r3
ARM GAS  /tmp/ccMjLcE6.s 			page 39


 1063              	.LVL125:
 1064 040a 43F04003 		orr	r3, r3, #64
 1065 040e 5B09     		lsrs	r3, r3, #5
 1066 0410 022B     		cmp	r3, #2
 1067 0412 02D1     		bne	.L68
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1068              		.loc 1 550 0 is_stmt 0 discriminator 4
 1069 0414 7C4B     		ldr	r3, .L110
 1070 0416 196A     		ldr	r1, [r3, #32]
 1071 0418 04E0     		b	.L69
 1072              	.L68:
 1073              	.LVL126:
 1074              	.LBB228:
 1075              	.LBB229:
 1076              		.loc 2 531 0 is_stmt 1
 1077 041a 0223     		movs	r3, #2
 1078              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1079 041c 93FAA3F3 		rbit r3, r3
 1080              	@ 0 "" 2
 1081              	.LVL127:
 1082              		.thumb
 1083              	.LBE229:
 1084              	.LBE228:
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1085              		.loc 1 550 0
 1086 0420 794B     		ldr	r3, .L110
 1087 0422 596A     		ldr	r1, [r3, #36]
 1088              	.LVL128:
 1089              	.L69:
 1090              	.LBB230:
 1091              	.LBB231:
 1092              		.loc 2 531 0 discriminator 11
 1093 0424 0223     		movs	r3, #2
 1094              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1095 0426 93FAA3F3 		rbit r3, r3
 1096              	@ 0 "" 2
 1097              	.LVL129:
 1098              		.thumb
 1099              	.LBE231:
 1100              	.LBE230:
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1101              		.loc 1 550 0 discriminator 11
 1102 042a B3FA83F3 		clz	r3, r3
 1103              	.LVL130:
 1104 042e 03F01F03 		and	r3, r3, #31
 1105 0432 0122     		movs	r2, #1
 1106 0434 02FA03F3 		lsl	r3, r2, r3
 1107 0438 1942     		tst	r1, r3
 1108 043a D7D0     		beq	.L70
 1109 043c 2BE0     		b	.L71
 1110              	.LVL131:
 1111              	.L66:
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccMjLcE6.s 			page 40


 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1112              		.loc 1 561 0
 1113 043e FFF7FEFF 		bl	HAL_GetTick
 1114              	.LVL132:
 1115 0442 0646     		mov	r6, r0
 1116              	.LVL133:
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 1117              		.loc 1 564 0
 1118 0444 07E0     		b	.L72
 1119              	.LVL134:
 1120              	.L75:
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1121              		.loc 1 566 0
 1122 0446 FFF7FEFF 		bl	HAL_GetTick
 1123              	.LVL135:
 1124 044a 801B     		subs	r0, r0, r6
 1125 044c 41F28833 		movw	r3, #5000
 1126 0450 9842     		cmp	r0, r3
 1127 0452 00F2DD80 		bhi	.L101
 1128              	.LVL136:
 1129              	.L72:
 1130              	.LBB232:
 1131              	.LBB233:
 1132              		.loc 2 531 0
 1133 0456 0223     		movs	r3, #2
 1134              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1135 0458 93FAA3F2 		rbit r2, r3
 1136              	@ 0 "" 2
 1137              	.LVL137:
 1138              		.thumb
 1139              	.LBE233:
 1140              	.LBE232:
 1141              	.LBB234:
 1142              	.LBB235:
 1143              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1144 045c 93FAA3F3 		rbit r3, r3
 1145              	@ 0 "" 2
 1146              	.LVL138:
 1147              		.thumb
 1148              	.LBE235:
 1149              	.LBE234:
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1150              		.loc 1 564 0
 1151 0460 B3FA83F3 		clz	r3, r3
 1152              	.LVL139:
 1153 0464 43F04003 		orr	r3, r3, #64
 1154 0468 5B09     		lsrs	r3, r3, #5
 1155 046a 022B     		cmp	r3, #2
 1156 046c 02D1     		bne	.L73
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1157              		.loc 1 564 0 is_stmt 0 discriminator 4
ARM GAS  /tmp/ccMjLcE6.s 			page 41


 1158 046e 664B     		ldr	r3, .L110
 1159 0470 196A     		ldr	r1, [r3, #32]
 1160 0472 04E0     		b	.L74
 1161              	.L73:
 1162              	.LVL140:
 1163              	.LBB236:
 1164              	.LBB237:
 1165              		.loc 2 531 0 is_stmt 1
 1166 0474 0223     		movs	r3, #2
 1167              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1168 0476 93FAA3F3 		rbit r3, r3
 1169              	@ 0 "" 2
 1170              	.LVL141:
 1171              		.thumb
 1172              	.LBE237:
 1173              	.LBE236:
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1174              		.loc 1 564 0
 1175 047a 634B     		ldr	r3, .L110
 1176 047c 596A     		ldr	r1, [r3, #36]
 1177              	.LVL142:
 1178              	.L74:
 1179              	.LBB238:
 1180              	.LBB239:
 1181              		.loc 2 531 0 discriminator 11
 1182 047e 0223     		movs	r3, #2
 1183              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1184 0480 93FAA3F3 		rbit r3, r3
 1185              	@ 0 "" 2
 1186              	.LVL143:
 1187              		.thumb
 1188              	.LBE239:
 1189              	.LBE238:
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1190              		.loc 1 564 0 discriminator 11
 1191 0484 B3FA83F3 		clz	r3, r3
 1192              	.LVL144:
 1193 0488 03F01F03 		and	r3, r3, #31
 1194 048c 0122     		movs	r2, #1
 1195 048e 02FA03F3 		lsl	r3, r2, r3
 1196 0492 1942     		tst	r1, r3
 1197 0494 D7D1     		bne	.L75
 1198              	.LVL145:
 1199              	.L71:
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 1200              		.loc 1 574 0
 1201 0496 25B1     		cbz	r5, .L57
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 1202              		.loc 1 576 0
ARM GAS  /tmp/ccMjLcE6.s 			page 42


 1203 0498 5B4A     		ldr	r2, .L110
 1204 049a D369     		ldr	r3, [r2, #28]
 1205 049c 23F08053 		bic	r3, r3, #268435456
 1206 04a0 D361     		str	r3, [r2, #28]
 1207              	.LVL146:
 1208              	.L57:
 1209              	.LBE222:
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1210              		.loc 1 583 0
 1211 04a2 A369     		ldr	r3, [r4, #24]
 1212 04a4 002B     		cmp	r3, #0
 1213 04a6 00F0B580 		beq	.L102
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1214              		.loc 1 586 0
 1215 04aa 574A     		ldr	r2, .L110
 1216 04ac 5268     		ldr	r2, [r2, #4]
 1217 04ae 02F00C02 		and	r2, r2, #12
 1218 04b2 082A     		cmp	r2, #8
 1219 04b4 00F0B080 		beq	.L103
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     { 
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1220              		.loc 1 588 0
 1221 04b8 022B     		cmp	r3, #2
 1222 04ba 63D1     		bne	.L76
 1223              	.LVL147:
 1224              	.LBB240:
 1225              	.LBB241:
 1226              		.loc 2 531 0
 1227 04bc 4FF08073 		mov	r3, #16777216
 1228              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1229 04c0 93FAA3F3 		rbit r3, r3
 1230              	@ 0 "" 2
 1231              	.LVL148:
 1232              		.thumb
 1233              	.LBE241:
 1234              	.LBE240:
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Check the parameters */
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1235              		.loc 1 598 0
 1236 04c4 B3FA83F3 		clz	r3, r3
 1237              	.LVL149:
ARM GAS  /tmp/ccMjLcE6.s 			page 43


 1238 04c8 03F18453 		add	r3, r3, #276824064
 1239 04cc 03F58413 		add	r3, r3, #1081344
 1240 04d0 9B00     		lsls	r3, r3, #2
 1241 04d2 0022     		movs	r2, #0
 1242 04d4 1A60     		str	r2, [r3]
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1243              		.loc 1 601 0
 1244 04d6 FFF7FEFF 		bl	HAL_GetTick
 1245              	.LVL150:
 1246 04da 0546     		mov	r5, r0
 1247              	.LVL151:
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1248              		.loc 1 604 0
 1249 04dc 05E0     		b	.L77
 1250              	.LVL152:
 1251              	.L80:
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1252              		.loc 1 606 0
 1253 04de FFF7FEFF 		bl	HAL_GetTick
 1254              	.LVL153:
 1255 04e2 401B     		subs	r0, r0, r5
 1256 04e4 0228     		cmp	r0, #2
 1257 04e6 00F29980 		bhi	.L104
 1258              	.LVL154:
 1259              	.L77:
 1260              	.LBB242:
 1261              	.LBB243:
 1262              		.loc 2 531 0
 1263 04ea 4FF00073 		mov	r3, #33554432
 1264              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1265 04ee 93FAA3F3 		rbit r3, r3
 1266              	@ 0 "" 2
 1267              		.thumb
 1268              	.LBE243:
 1269              	.LBE242:
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1270              		.loc 1 604 0
 1271 04f2 454B     		ldr	r3, .L110
 1272 04f4 1968     		ldr	r1, [r3]
 1273              	.LVL155:
 1274              	.LBB244:
 1275              	.LBB245:
 1276              		.loc 2 531 0
 1277 04f6 4FF00073 		mov	r3, #33554432
 1278              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1279 04fa 93FAA3F3 		rbit r3, r3
 1280              	@ 0 "" 2
 1281              	.LVL156:
 1282              		.thumb
 1283              	.LBE245:
 1284              	.LBE244:
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
ARM GAS  /tmp/ccMjLcE6.s 			page 44


 1285              		.loc 1 604 0
 1286 04fe B3FA83F3 		clz	r3, r3
 1287              	.LVL157:
 1288 0502 03F01F03 		and	r3, r3, #31
 1289 0506 0122     		movs	r2, #1
 1290 0508 02FA03F3 		lsl	r3, r2, r3
 1291 050c 1942     		tst	r1, r3
 1292 050e E6D1     		bne	.L80
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 1293              		.loc 1 614 0
 1294 0510 3D49     		ldr	r1, .L110
 1295 0512 CB6A     		ldr	r3, [r1, #44]
 1296 0514 23F00F02 		bic	r2, r3, #15
 1297 0518 636A     		ldr	r3, [r4, #36]
 1298 051a 1343     		orrs	r3, r3, r2
 1299 051c CB62     		str	r3, [r1, #44]
 1300 051e 4B68     		ldr	r3, [r1, #4]
 1301 0520 23F47610 		bic	r0, r3, #4030464
 1302 0524 236A     		ldr	r3, [r4, #32]
 1303 0526 E269     		ldr	r2, [r4, #28]
 1304 0528 1343     		orrs	r3, r3, r2
 1305 052a 0343     		orrs	r3, r3, r0
 1306 052c 4B60     		str	r3, [r1, #4]
 1307              	.LVL158:
 1308              	.LBB246:
 1309              	.LBB247:
 1310              		.loc 2 531 0
 1311 052e 4FF08073 		mov	r3, #16777216
 1312              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1313 0532 93FAA3F3 		rbit r3, r3
 1314              	@ 0 "" 2
 1315              	.LVL159:
 1316              		.thumb
 1317              	.LBE247:
 1318              	.LBE246:
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the main PLL clock source and multiplication factor. */
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                            RCC_OscInitStruct->PLL.PLLMUL);
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Enable the main PLL. */
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 1319              		.loc 1 623 0
 1320 0536 B3FA83F3 		clz	r3, r3
 1321              	.LVL160:
 1322 053a 03F18453 		add	r3, r3, #276824064
 1323 053e 03F58413 		add	r3, r3, #1081344
 1324 0542 9B00     		lsls	r3, r3, #2
ARM GAS  /tmp/ccMjLcE6.s 			page 45


 1325 0544 0122     		movs	r2, #1
 1326 0546 1A60     		str	r2, [r3]
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1327              		.loc 1 626 0
 1328 0548 FFF7FEFF 		bl	HAL_GetTick
 1329              	.LVL161:
 1330 054c 0446     		mov	r4, r0
 1331              	.LVL162:
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is ready */
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 1332              		.loc 1 629 0
 1333 054e 04E0     		b	.L81
 1334              	.LVL163:
 1335              	.L84:
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1336              		.loc 1 631 0
 1337 0550 FFF7FEFF 		bl	HAL_GetTick
 1338              	.LVL164:
 1339 0554 001B     		subs	r0, r0, r4
 1340 0556 0228     		cmp	r0, #2
 1341 0558 62D8     		bhi	.L105
 1342              	.LVL165:
 1343              	.L81:
 1344              	.LBB248:
 1345              	.LBB249:
 1346              		.loc 2 531 0
 1347 055a 4FF00073 		mov	r3, #33554432
 1348              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1349 055e 93FAA3F3 		rbit r3, r3
 1350              	@ 0 "" 2
 1351              		.thumb
 1352              	.LBE249:
 1353              	.LBE248:
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1354              		.loc 1 629 0
 1355 0562 294B     		ldr	r3, .L110
 1356 0564 1968     		ldr	r1, [r3]
 1357              	.LVL166:
 1358              	.LBB250:
 1359              	.LBB251:
 1360              		.loc 2 531 0
 1361 0566 4FF00073 		mov	r3, #33554432
 1362              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1363 056a 93FAA3F3 		rbit r3, r3
 1364              	@ 0 "" 2
 1365              	.LVL167:
 1366              		.thumb
 1367              	.LBE251:
 1368              	.LBE250:
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1369              		.loc 1 629 0
 1370 056e B3FA83F3 		clz	r3, r3
 1371              	.LVL168:
ARM GAS  /tmp/ccMjLcE6.s 			page 46


 1372 0572 03F01F03 		and	r3, r3, #31
 1373 0576 0122     		movs	r2, #1
 1374 0578 02FA03F3 		lsl	r3, r2, r3
 1375 057c 1942     		tst	r1, r3
 1376 057e E7D0     		beq	.L84
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 1377              		.loc 1 661 0
 1378 0580 0020     		movs	r0, #0
 1379 0582 50E0     		b	.L17
 1380              	.LVL169:
 1381              	.L76:
 1382              	.LBB252:
 1383              	.LBB253:
 1384              		.loc 2 531 0
 1385 0584 4FF08073 		mov	r3, #16777216
 1386              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1387 0588 93FAA3F3 		rbit r3, r3
 1388              	@ 0 "" 2
 1389              	.LVL170:
 1390              		.thumb
 1391              	.LBE253:
 1392              	.LBE252:
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 1393              		.loc 1 640 0
 1394 058c B3FA83F3 		clz	r3, r3
 1395              	.LVL171:
 1396 0590 03F18453 		add	r3, r3, #276824064
 1397 0594 03F58413 		add	r3, r3, #1081344
ARM GAS  /tmp/ccMjLcE6.s 			page 47


 1398 0598 9B00     		lsls	r3, r3, #2
 1399 059a 0022     		movs	r2, #0
 1400 059c 1A60     		str	r2, [r3]
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 1401              		.loc 1 643 0
 1402 059e FFF7FEFF 		bl	HAL_GetTick
 1403              	.LVL172:
 1404 05a2 0446     		mov	r4, r0
 1405              	.LVL173:
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1406              		.loc 1 646 0
 1407 05a4 04E0     		b	.L85
 1408              	.LVL174:
 1409              	.L88:
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 1410              		.loc 1 648 0
 1411 05a6 FFF7FEFF 		bl	HAL_GetTick
 1412              	.LVL175:
 1413 05aa 001B     		subs	r0, r0, r4
 1414 05ac 0228     		cmp	r0, #2
 1415 05ae 39D8     		bhi	.L106
 1416              	.LVL176:
 1417              	.L85:
 1418              	.LBB254:
 1419              	.LBB255:
 1420              		.loc 2 531 0
 1421 05b0 4FF00073 		mov	r3, #33554432
 1422              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1423 05b4 93FAA3F3 		rbit r3, r3
 1424              	@ 0 "" 2
 1425              		.thumb
 1426              	.LBE255:
 1427              	.LBE254:
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1428              		.loc 1 646 0
 1429 05b8 134B     		ldr	r3, .L110
 1430 05ba 1968     		ldr	r1, [r3]
 1431              	.LVL177:
 1432              	.LBB256:
 1433              	.LBB257:
 1434              		.loc 2 531 0
 1435 05bc 4FF00073 		mov	r3, #33554432
 1436              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1437 05c0 93FAA3F3 		rbit r3, r3
 1438              	@ 0 "" 2
 1439              	.LVL178:
 1440              		.thumb
 1441              	.LBE257:
 1442              	.LBE256:
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1443              		.loc 1 646 0
 1444 05c4 B3FA83F3 		clz	r3, r3
 1445              	.LVL179:
 1446 05c8 03F01F03 		and	r3, r3, #31
 1447 05cc 0122     		movs	r2, #1
 1448 05ce 02FA03F3 		lsl	r3, r2, r3
 1449 05d2 1942     		tst	r1, r3
ARM GAS  /tmp/ccMjLcE6.s 			page 48


 1450 05d4 E7D1     		bne	.L88
 1451              		.loc 1 661 0
 1452 05d6 0020     		movs	r0, #0
 1453 05d8 25E0     		b	.L17
 1454              	.LVL180:
 1455              	.L89:
 1456              	.LCFI3:
 1457              		.cfi_def_cfa_offset 0
 1458              		.cfi_restore 4
 1459              		.cfi_restore 5
 1460              		.cfi_restore 6
 1461              		.cfi_restore 14
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 1462              		.loc 1 339 0
 1463 05da 0120     		movs	r0, #1
 1464              	.LVL181:
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1465              		.loc 1 662 0
 1466 05dc 7047     		bx	lr
 1467              	.LVL182:
 1468              	.L90:
 1469              	.LCFI4:
 1470              		.cfi_def_cfa_offset 24
 1471              		.cfi_offset 4, -16
 1472              		.cfi_offset 5, -12
 1473              		.cfi_offset 6, -8
 1474              		.cfi_offset 14, -4
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1475              		.loc 1 357 0
 1476 05de 0120     		movs	r0, #1
 1477              	.LVL183:
 1478 05e0 21E0     		b	.L17
 1479              	.LVL184:
 1480              	.L91:
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1481              		.loc 1 381 0
 1482 05e2 0320     		movs	r0, #3
 1483 05e4 1FE0     		b	.L17
 1484              	.LVL185:
 1485              	.L92:
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1486              		.loc 1 395 0
 1487 05e6 0320     		movs	r0, #3
 1488 05e8 1DE0     		b	.L17
 1489              	.LVL186:
 1490              	.L93:
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1491              		.loc 1 415 0
 1492 05ea 0120     		movs	r0, #1
 1493 05ec 1BE0     		b	.L17
 1494              	.LVL187:
 1495              	.L94:
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1496              		.loc 1 440 0
 1497 05ee 0320     		movs	r0, #3
 1498 05f0 19E0     		b	.L17
 1499              	.LVL188:
ARM GAS  /tmp/ccMjLcE6.s 			page 49


 1500              	.L95:
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1501              		.loc 1 460 0
 1502 05f2 0320     		movs	r0, #3
 1503 05f4 17E0     		b	.L17
 1504              	.LVL189:
 1505              	.L96:
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1506              		.loc 1 486 0
 1507 05f6 0320     		movs	r0, #3
 1508 05f8 15E0     		b	.L17
 1509              	.LVL190:
 1510              	.L97:
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1511              		.loc 1 503 0
 1512 05fa 0320     		movs	r0, #3
 1513 05fc 13E0     		b	.L17
 1514              	.LVL191:
 1515              	.L99:
 1516              	.LBB258:
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1517              		.loc 1 536 0
 1518 05fe 0320     		movs	r0, #3
 1519 0600 11E0     		b	.L17
 1520              	.LVL192:
 1521              	.L100:
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1522              		.loc 1 554 0
 1523 0602 0320     		movs	r0, #3
 1524 0604 0FE0     		b	.L17
 1525              	.L111:
 1526 0606 00BF     		.align	2
 1527              	.L110:
 1528 0608 00100240 		.word	1073876992
 1529 060c 00700040 		.word	1073770496
 1530              	.LVL193:
 1531              	.L101:
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1532              		.loc 1 568 0
 1533 0610 0320     		movs	r0, #3
 1534 0612 08E0     		b	.L17
 1535              	.LVL194:
 1536              	.L102:
 1537              	.LBE258:
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1538              		.loc 1 661 0
 1539 0614 0020     		movs	r0, #0
 1540 0616 06E0     		b	.L17
 1541              	.L103:
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 1542              		.loc 1 657 0
 1543 0618 0120     		movs	r0, #1
 1544 061a 04E0     		b	.L17
 1545              	.LVL195:
 1546              	.L104:
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1547              		.loc 1 608 0
ARM GAS  /tmp/ccMjLcE6.s 			page 50


 1548 061c 0320     		movs	r0, #3
 1549 061e 02E0     		b	.L17
 1550              	.LVL196:
 1551              	.L105:
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1552              		.loc 1 633 0
 1553 0620 0320     		movs	r0, #3
 1554 0622 00E0     		b	.L17
 1555              	.LVL197:
 1556              	.L106:
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1557              		.loc 1 650 0
 1558 0624 0320     		movs	r0, #3
 1559              	.LVL198:
 1560              	.L17:
 1561              		.loc 1 662 0
 1562 0626 02B0     		add	sp, sp, #8
 1563              	.LCFI5:
 1564              		.cfi_def_cfa_offset 16
 1565              		@ sp needed
 1566 0628 70BD     		pop	{r4, r5, r6, pc}
 1567              		.cfi_endproc
 1568              	.LFE124:
 1570 062a 00BF     		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1571              		.align	2
 1572              		.global	HAL_RCC_MCOConfig
 1573              		.thumb
 1574              		.thumb_func
 1576              	HAL_RCC_MCOConfig:
 1577              	.LFB126:
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         currently used as system clock source.
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
ARM GAS  /tmp/ccMjLcE6.s 			page 51


 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check Null pointer */
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     return HAL_ERROR;
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     (HCLK) of the device. */
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
ARM GAS  /tmp/ccMjLcE6.s 			page 52


 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Get Start Tick */
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_TIMEOUT;
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }    
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
ARM GAS  /tmp/ccMjLcE6.s 			page 53


 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim   
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================  
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     frequencies.
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_MCOPRE)
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System Clock selected as MCO clock
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1   no division applied to MCO clock
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2   division by 2 applied to MCO clock
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4   division by 4 applied to MCO clock
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8   division by 8 applied to MCO clock
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_32  division by 32 applied to MCO clock
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_64  division by 64 applied to MCO clock
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_128 division by 128 applied to MCO clock
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
ARM GAS  /tmp/ccMjLcE6.s 			page 54


 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1578              		.loc 1 880 0
 1579              		.cfi_startproc
 1580              		@ args = 0, pretend = 0, frame = 24
 1581              		@ frame_needed = 0, uses_anonymous_args = 0
 1582              	.LVL199:
 1583 0000 70B5     		push	{r4, r5, r6, lr}
 1584              	.LCFI6:
 1585              		.cfi_def_cfa_offset 16
 1586              		.cfi_offset 4, -16
 1587              		.cfi_offset 5, -12
 1588              		.cfi_offset 6, -8
 1589              		.cfi_offset 14, -4
 1590 0002 86B0     		sub	sp, sp, #24
 1591              	.LCFI7:
 1592              		.cfi_def_cfa_offset 40
 1593 0004 0E46     		mov	r6, r1
 1594 0006 1546     		mov	r5, r2
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1595              		.loc 1 889 0
 1596 0008 0223     		movs	r3, #2
 1597 000a 0293     		str	r3, [sp, #8]
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1598              		.loc 1 890 0
 1599 000c 0323     		movs	r3, #3
 1600 000e 0493     		str	r3, [sp, #16]
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 1601              		.loc 1 891 0
 1602 0010 0023     		movs	r3, #0
 1603 0012 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/ccMjLcE6.s 			page 55


 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1604              		.loc 1 892 0
 1605 0014 4FF48072 		mov	r2, #256
 1606              	.LVL200:
 1607 0018 0192     		str	r2, [sp, #4]
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
 1608              		.loc 1 893 0
 1609 001a 0593     		str	r3, [sp, #20]
 1610              	.LBB259:
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* MCO1 Clock Enable */
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1611              		.loc 1 896 0
 1612 001c 0B4C     		ldr	r4, .L114
 1613 001e 6369     		ldr	r3, [r4, #20]
 1614 0020 43F40033 		orr	r3, r3, #131072
 1615 0024 6361     		str	r3, [r4, #20]
 1616 0026 6369     		ldr	r3, [r4, #20]
 1617 0028 03F40033 		and	r3, r3, #131072
 1618 002c 0093     		str	r3, [sp]
 1619 002e 009B     		ldr	r3, [sp]
 1620              	.LBE259:
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1621              		.loc 1 898 0
 1622 0030 4FF09040 		mov	r0, #1207959552
 1623              	.LVL201:
 1624 0034 01A9     		add	r1, sp, #4
 1625              	.LVL202:
 1626 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 1627              	.LVL203:
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO clock source */
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1628              		.loc 1 901 0
 1629 003a 6368     		ldr	r3, [r4, #4]
 1630 003c 23F0EE43 		bic	r3, r3, #1996488704
 1631 0040 3543     		orrs	r5, r5, r6
 1632              	.LVL204:
 1633 0042 1D43     		orrs	r5, r5, r3
 1634 0044 6560     		str	r5, [r4, #4]
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1635              		.loc 1 902 0
 1636 0046 06B0     		add	sp, sp, #24
 1637              	.LCFI8:
 1638              		.cfi_def_cfa_offset 16
 1639              		@ sp needed
 1640 0048 70BD     		pop	{r4, r5, r6, pc}
 1641              	.LVL205:
 1642              	.L115:
 1643 004a 00BF     		.align	2
 1644              	.L114:
 1645 004c 00100240 		.word	1073876992
 1646              		.cfi_endproc
 1647              	.LFE126:
 1649              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1650              		.align	2
ARM GAS  /tmp/ccMjLcE6.s 			page 56


 1651              		.global	HAL_RCC_EnableCSS
 1652              		.thumb
 1653              		.thumb_func
 1655              	HAL_RCC_EnableCSS:
 1656              	.LFB127:
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.  
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1657              		.loc 1 914 0
 1658              		.cfi_startproc
 1659              		@ args = 0, pretend = 0, frame = 0
 1660              		@ frame_needed = 0, uses_anonymous_args = 0
 1661              		@ link register save eliminated.
 1662              	.LVL206:
 1663              	.LBB260:
 1664              	.LBB261:
 1665              		.loc 2 531 0
 1666 0000 4FF40023 		mov	r3, #524288
 1667              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1668 0004 93FAA3F3 		rbit r3, r3
 1669              	@ 0 "" 2
 1670              	.LVL207:
 1671              		.thumb
 1672              	.LBE261:
 1673              	.LBE260:
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1674              		.loc 1 915 0
 1675 0008 B3FA83F3 		clz	r3, r3
 1676              	.LVL208:
 1677 000c 03F18453 		add	r3, r3, #276824064
 1678 0010 03F58413 		add	r3, r3, #1081344
 1679 0014 9B00     		lsls	r3, r3, #2
 1680 0016 0122     		movs	r2, #1
 1681 0018 1A60     		str	r2, [r3]
 1682 001a 7047     		bx	lr
 1683              		.cfi_endproc
 1684              	.LFE127:
 1686              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1687              		.align	2
 1688              		.global	HAL_RCC_DisableCSS
 1689              		.thumb
 1690              		.thumb_func
 1692              	HAL_RCC_DisableCSS:
 1693              	.LFB128:
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
ARM GAS  /tmp/ccMjLcE6.s 			page 57


 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1694              		.loc 1 923 0
 1695              		.cfi_startproc
 1696              		@ args = 0, pretend = 0, frame = 0
 1697              		@ frame_needed = 0, uses_anonymous_args = 0
 1698              		@ link register save eliminated.
 1699              	.LVL209:
 1700              	.LBB262:
 1701              	.LBB263:
 1702              		.loc 2 531 0
 1703 0000 4FF40023 		mov	r3, #524288
 1704              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1705 0004 93FAA3F3 		rbit r3, r3
 1706              	@ 0 "" 2
 1707              	.LVL210:
 1708              		.thumb
 1709              	.LBE263:
 1710              	.LBE262:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1711              		.loc 1 924 0
 1712 0008 B3FA83F3 		clz	r3, r3
 1713              	.LVL211:
 1714 000c 03F18453 		add	r3, r3, #276824064
 1715 0010 03F58413 		add	r3, r3, #1081344
 1716 0014 9B00     		lsls	r3, r3, #2
 1717 0016 0022     		movs	r2, #0
 1718 0018 1A60     		str	r2, [r3]
 1719 001a 7047     		bx	lr
 1720              		.cfi_endproc
 1721              	.LFE128:
 1723              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1724              		.align	2
 1725              		.global	HAL_RCC_GetSysClockFreq
 1726              		.thumb
 1727              		.thumb_func
 1729              	HAL_RCC_GetSysClockFreq:
 1730              	.LFB129:
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         constant and the selected clock source:
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or HSI_VALUE(*) multiplied by the PLL factor.
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               in voltage and temperature.
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
ARM GAS  /tmp/ccMjLcE6.s 			page 58


 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                have wrong result.
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                  
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         value for HSE crystal.
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval SYSCLK frequency
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1731              		.loc 1 957 0
 1732              		.cfi_startproc
 1733              		@ args = 0, pretend = 0, frame = 0
 1734              		@ frame_needed = 0, uses_anonymous_args = 0
 1735              		@ link register save eliminated.
 1736              	.LVL212:
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1737              		.loc 1 961 0
 1738 0000 174B     		ldr	r3, .L125
 1739 0002 5A68     		ldr	r2, [r3, #4]
 1740              	.LVL213:
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1741              		.loc 1 964 0
 1742 0004 02F00C03 		and	r3, r2, #12
 1743 0008 082B     		cmp	r3, #8
 1744 000a 26D1     		bne	.L124
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> POSITION_VAL(RCC_CFGR_PLL
 1745              		.loc 1 973 0
 1746 000c 02F47011 		and	r1, r2, #3932160
 1747              	.LVL214:
 1748              	.LBB264:
 1749              	.LBB265:
 1750              		.loc 2 531 0
 1751 0010 4FF47013 		mov	r3, #3932160
 1752              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1753 0014 93FAA3F3 		rbit r3, r3
 1754              	@ 0 "" 2
 1755              	.LVL215:
ARM GAS  /tmp/ccMjLcE6.s 			page 59


 1756              		.thumb
 1757              	.LBE265:
 1758              	.LBE264:
 1759              		.loc 1 973 0
 1760 0018 B3FA83F3 		clz	r3, r3
 1761              	.LVL216:
 1762 001c 21FA03F3 		lsr	r3, r1, r3
 1763 0020 1049     		ldr	r1, .L125+4
 1764 0022 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1765              	.LVL217:
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> POSITION_VAL(RCC_CFG
 1766              		.loc 1 974 0
 1767 0024 0E49     		ldr	r1, .L125
 1768 0026 C96A     		ldr	r1, [r1, #44]
 1769 0028 01F00F01 		and	r1, r1, #15
 1770              	.LVL218:
 1771              	.LBB266:
 1772              	.LBB267:
 1773              		.loc 2 531 0
 1774 002c 0F20     		movs	r0, #15
 1775              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1776 002e 90FAA0F0 		rbit r0, r0
 1777              	@ 0 "" 2
 1778              	.LVL219:
 1779              		.thumb
 1780              	.LBE267:
 1781              	.LBE266:
 1782              		.loc 1 974 0
 1783 0032 B0FA80F0 		clz	r0, r0
 1784              	.LVL220:
 1785 0036 C140     		lsrs	r1, r1, r0
 1786 0038 0B48     		ldr	r0, .L125+8
 1787 003a 405C     		ldrb	r0, [r0, r1]	@ zero_extendqisi2
 1788              	.LVL221:
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI)
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSI_VALUE >> 1U) * pllmul;
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC_HSE_PREDIV) == RCC_CFGR_PLLSRC_HSE_PREDIV)
 1789              		.loc 1 987 0
 1790 003c 12F4803F 		tst	r2, #65536
 1791 0040 05D0     		beq	.L121
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
 1792              		.loc 1 990 0
 1793 0042 0A4A     		ldr	r2, .L125+12
 1794              	.LVL222:
 1795 0044 B2FBF0F0 		udiv	r0, r2, r0
ARM GAS  /tmp/ccMjLcE6.s 			page 60


 1796              	.LVL223:
 1797 0048 03FB00F0 		mul	r0, r3, r0
 1798              	.LVL224:
 1799 004c 7047     		bx	lr
 1800              	.LVL225:
 1801              	.L121:
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSI_VALUE / prediv) * pllmul;
 1802              		.loc 1 995 0
 1803 004e 074A     		ldr	r2, .L125+12
 1804              	.LVL226:
 1805 0050 B2FBF0F0 		udiv	r0, r2, r0
 1806              	.LVL227:
 1807 0054 03FB00F0 		mul	r0, r3, r0
 1808              	.LVL228:
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = pllclk;
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 1809              		.loc 1 999 0
 1810 0058 7047     		bx	lr
 1811              	.LVL229:
 1812              	.L124:
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 1813              		.loc 1 968 0
 1814 005a 0448     		ldr	r0, .L125+12
 1815              	.LVL230:
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     default: /* HSI used as system clock */
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return sysclockfreq;
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1816              		.loc 1 1009 0
 1817 005c 7047     		bx	lr
 1818              	.L126:
 1819 005e 00BF     		.align	2
 1820              	.L125:
 1821 0060 00100240 		.word	1073876992
 1822 0064 00000000 		.word	.LANCHOR0
 1823 0068 00000000 		.word	.LANCHOR1
 1824 006c 00127A00 		.word	8000000
 1825              		.cfi_endproc
 1826              	.LFE129:
 1828              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1829              		.align	2
 1830              		.global	HAL_RCC_ClockConfig
 1831              		.thumb
 1832              		.thumb_func
 1834              	HAL_RCC_ClockConfig:
ARM GAS  /tmp/ccMjLcE6.s 			page 61


 1835              	.LFB125:
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1836              		.loc 1 688 0
 1837              		.cfi_startproc
 1838              		@ args = 0, pretend = 0, frame = 0
 1839              		@ frame_needed = 0, uses_anonymous_args = 0
 1840              	.LVL231:
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 1841              		.loc 1 692 0
 1842 0000 0028     		cmp	r0, #0
 1843 0002 00F0B980 		beq	.L146
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1844              		.loc 1 688 0
 1845 0006 70B5     		push	{r4, r5, r6, lr}
 1846              	.LCFI9:
 1847              		.cfi_def_cfa_offset 16
 1848              		.cfi_offset 4, -16
 1849              		.cfi_offset 5, -12
 1850              		.cfi_offset 6, -8
 1851              		.cfi_offset 14, -4
 1852 0008 0446     		mov	r4, r0
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 1853              		.loc 1 706 0
 1854 000a 624B     		ldr	r3, .L154
 1855 000c 1B68     		ldr	r3, [r3]
 1856 000e 03F00703 		and	r3, r3, #7
 1857 0012 8B42     		cmp	r3, r1
 1858 0014 0BD2     		bcs	.L129
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 1859              		.loc 1 709 0
 1860 0016 5F4A     		ldr	r2, .L154
 1861 0018 1368     		ldr	r3, [r2]
 1862 001a 23F00703 		bic	r3, r3, #7
 1863 001e 0B43     		orrs	r3, r3, r1
 1864 0020 1360     		str	r3, [r2]
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1865              		.loc 1 713 0
 1866 0022 1368     		ldr	r3, [r2]
 1867 0024 03F00703 		and	r3, r3, #7
 1868 0028 8B42     		cmp	r3, r1
 1869 002a 40F0A780 		bne	.L147
 1870              	.L129:
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 1871              		.loc 1 720 0
 1872 002e 2368     		ldr	r3, [r4]
 1873 0030 13F0020F 		tst	r3, #2
 1874 0034 06D0     		beq	.L130
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 1875              		.loc 1 723 0
 1876 0036 5848     		ldr	r0, .L154+4
 1877              	.LVL232:
 1878 0038 4368     		ldr	r3, [r0, #4]
 1879 003a 23F0F002 		bic	r2, r3, #240
 1880 003e A368     		ldr	r3, [r4, #8]
 1881 0040 1343     		orrs	r3, r3, r2
 1882 0042 4360     		str	r3, [r0, #4]
 1883              	.L130:
ARM GAS  /tmp/ccMjLcE6.s 			page 62


 1884 0044 0D46     		mov	r5, r1
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 1885              		.loc 1 727 0
 1886 0046 2368     		ldr	r3, [r4]
 1887 0048 13F0010F 		tst	r3, #1
 1888 004c 56D0     		beq	.L131
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1889              		.loc 1 732 0
 1890 004e 6268     		ldr	r2, [r4, #4]
 1891 0050 012A     		cmp	r2, #1
 1892 0052 13D1     		bne	.L132
 1893              	.LVL233:
 1894              	.LBB268:
 1895              	.LBB269:
 1896              		.loc 2 531 0
 1897 0054 4FF40033 		mov	r3, #131072
 1898              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1899 0058 93FAA3F3 		rbit r3, r3
 1900              	@ 0 "" 2
 1901              		.thumb
 1902              	.LBE269:
 1903              	.LBE268:
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1904              		.loc 1 735 0
 1905 005c 4E4B     		ldr	r3, .L154+4
 1906 005e 1868     		ldr	r0, [r3]
 1907              	.LVL234:
 1908              	.LBB270:
 1909              	.LBB271:
 1910              		.loc 2 531 0
 1911 0060 4FF40033 		mov	r3, #131072
 1912              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1913 0064 93FAA3F3 		rbit r3, r3
 1914              	@ 0 "" 2
 1915              	.LVL235:
 1916              		.thumb
 1917              	.LBE271:
 1918              	.LBE270:
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1919              		.loc 1 735 0
 1920 0068 B3FA83F3 		clz	r3, r3
 1921              	.LVL236:
 1922 006c 03F01F03 		and	r3, r3, #31
 1923 0070 0121     		movs	r1, #1
 1924              	.LVL237:
 1925 0072 01FA03F3 		lsl	r3, r1, r3
 1926 0076 1842     		tst	r0, r3
 1927 0078 27D1     		bne	.L135
 1928 007a 81E0     		b	.L148
 1929              	.LVL238:
 1930              	.L132:
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1931              		.loc 1 741 0
 1932 007c 022A     		cmp	r2, #2
 1933 007e 13D1     		bne	.L136
 1934              	.LVL239:
 1935              	.LBB272:
ARM GAS  /tmp/ccMjLcE6.s 			page 63


 1936              	.LBB273:
 1937              		.loc 2 531 0
 1938 0080 4FF00073 		mov	r3, #33554432
 1939              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1940 0084 93FAA3F3 		rbit r3, r3
 1941              	@ 0 "" 2
 1942              		.thumb
 1943              	.LBE273:
 1944              	.LBE272:
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1945              		.loc 1 744 0
 1946 0088 434B     		ldr	r3, .L154+4
 1947 008a 1868     		ldr	r0, [r3]
 1948              	.LVL240:
 1949              	.LBB274:
 1950              	.LBB275:
 1951              		.loc 2 531 0
 1952 008c 4FF00073 		mov	r3, #33554432
 1953              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1954 0090 93FAA3F3 		rbit r3, r3
 1955              	@ 0 "" 2
 1956              	.LVL241:
 1957              		.thumb
 1958              	.LBE275:
 1959              	.LBE274:
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1960              		.loc 1 744 0
 1961 0094 B3FA83F3 		clz	r3, r3
 1962              	.LVL242:
 1963 0098 03F01F03 		and	r3, r3, #31
 1964 009c 0121     		movs	r1, #1
 1965              	.LVL243:
 1966 009e 01FA03F3 		lsl	r3, r1, r3
 1967 00a2 1842     		tst	r0, r3
 1968 00a4 11D1     		bne	.L135
 1969 00a6 6DE0     		b	.L149
 1970              	.LVL244:
 1971              	.L136:
 1972              	.LBB276:
 1973              	.LBB277:
 1974              		.loc 2 531 0
 1975 00a8 0223     		movs	r3, #2
 1976              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1977 00aa 93FAA3F3 		rbit r3, r3
 1978              	@ 0 "" 2
 1979              		.thumb
 1980              	.LBE277:
 1981              	.LBE276:
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1982              		.loc 1 753 0
 1983 00ae 3A4B     		ldr	r3, .L154+4
 1984 00b0 1868     		ldr	r0, [r3]
 1985              	.LVL245:
 1986              	.LBB278:
 1987              	.LBB279:
 1988              		.loc 2 531 0
 1989 00b2 0223     		movs	r3, #2
ARM GAS  /tmp/ccMjLcE6.s 			page 64


 1990              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1991 00b4 93FAA3F3 		rbit r3, r3
 1992              	@ 0 "" 2
 1993              	.LVL246:
 1994              		.thumb
 1995              	.LBE279:
 1996              	.LBE278:
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1997              		.loc 1 753 0
 1998 00b8 B3FA83F3 		clz	r3, r3
 1999              	.LVL247:
 2000 00bc 03F01F03 		and	r3, r3, #31
 2001 00c0 0121     		movs	r1, #1
 2002              	.LVL248:
 2003 00c2 01FA03F3 		lsl	r3, r1, r3
 2004 00c6 1842     		tst	r0, r3
 2005 00c8 5ED0     		beq	.L150
 2006              	.LVL249:
 2007              	.L135:
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2008              		.loc 1 759 0
 2009 00ca 3349     		ldr	r1, .L154+4
 2010 00cc 4B68     		ldr	r3, [r1, #4]
 2011 00ce 23F00303 		bic	r3, r3, #3
 2012 00d2 1343     		orrs	r3, r3, r2
 2013 00d4 4B60     		str	r3, [r1, #4]
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 2014              		.loc 1 762 0
 2015 00d6 FFF7FEFF 		bl	HAL_GetTick
 2016              	.LVL250:
 2017 00da 0646     		mov	r6, r0
 2018              	.LVL251:
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 2019              		.loc 1 764 0
 2020 00dc 06E0     		b	.L141
 2021              	.LVL252:
 2022              	.L142:
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2023              		.loc 1 766 0
 2024 00de FFF7FEFF 		bl	HAL_GetTick
 2025              	.LVL253:
 2026 00e2 801B     		subs	r0, r0, r6
 2027 00e4 41F28833 		movw	r3, #5000
 2028 00e8 9842     		cmp	r0, r3
 2029 00ea 4FD8     		bhi	.L151
 2030              	.L141:
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 2031              		.loc 1 764 0
 2032 00ec 2A4B     		ldr	r3, .L154+4
 2033 00ee 5B68     		ldr	r3, [r3, #4]
 2034 00f0 03F00C03 		and	r3, r3, #12
 2035 00f4 6268     		ldr	r2, [r4, #4]
 2036 00f6 B3EB820F 		cmp	r3, r2, lsl #2
 2037 00fa F0D1     		bne	.L142
 2038              	.LVL254:
 2039              	.L131:
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
ARM GAS  /tmp/ccMjLcE6.s 			page 65


 2040              		.loc 1 773 0
 2041 00fc 254B     		ldr	r3, .L154
 2042 00fe 1B68     		ldr	r3, [r3]
 2043 0100 03F00703 		and	r3, r3, #7
 2044 0104 AB42     		cmp	r3, r5
 2045 0106 0AD9     		bls	.L143
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 2046              		.loc 1 776 0
 2047 0108 224A     		ldr	r2, .L154
 2048 010a 1368     		ldr	r3, [r2]
 2049 010c 23F00703 		bic	r3, r3, #7
 2050 0110 2B43     		orrs	r3, r3, r5
 2051 0112 1360     		str	r3, [r2]
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 2052              		.loc 1 780 0
 2053 0114 1368     		ldr	r3, [r2]
 2054 0116 03F00703 		and	r3, r3, #7
 2055 011a AB42     		cmp	r3, r5
 2056 011c 38D1     		bne	.L152
 2057              	.L143:
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2058              		.loc 1 787 0
 2059 011e 2368     		ldr	r3, [r4]
 2060 0120 13F0040F 		tst	r3, #4
 2061 0124 06D0     		beq	.L144
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2062              		.loc 1 790 0
 2063 0126 1C49     		ldr	r1, .L154+4
 2064 0128 4B68     		ldr	r3, [r1, #4]
 2065 012a 23F4E062 		bic	r2, r3, #1792
 2066 012e E368     		ldr	r3, [r4, #12]
 2067 0130 1343     		orrs	r3, r3, r2
 2068 0132 4B60     		str	r3, [r1, #4]
 2069              	.L144:
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2070              		.loc 1 794 0
 2071 0134 2368     		ldr	r3, [r4]
 2072 0136 13F0080F 		tst	r3, #8
 2073 013a 07D0     		beq	.L145
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2074              		.loc 1 797 0
 2075 013c 164A     		ldr	r2, .L154+4
 2076 013e 5368     		ldr	r3, [r2, #4]
 2077 0140 23F46053 		bic	r3, r3, #14336
 2078 0144 2169     		ldr	r1, [r4, #16]
 2079 0146 43EAC103 		orr	r3, r3, r1, lsl #3
 2080 014a 5360     		str	r3, [r2, #4]
 2081              	.L145:
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2082              		.loc 1 801 0
 2083 014c FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2084              	.LVL255:
 2085 0150 114B     		ldr	r3, .L154+4
 2086 0152 5B68     		ldr	r3, [r3, #4]
 2087 0154 03F0F003 		and	r3, r3, #240
 2088              	.LVL256:
 2089              	.LBB280:
ARM GAS  /tmp/ccMjLcE6.s 			page 66


 2090              	.LBB281:
 2091              		.loc 2 531 0
 2092 0158 F022     		movs	r2, #240
 2093              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2094 015a 92FAA2F2 		rbit r2, r2
 2095              	@ 0 "" 2
 2096              	.LVL257:
 2097              		.thumb
 2098              	.LBE281:
 2099              	.LBE280:
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2100              		.loc 1 801 0
 2101 015e B2FA82F2 		clz	r2, r2
 2102              	.LVL258:
 2103 0162 D340     		lsrs	r3, r3, r2
 2104 0164 0D4A     		ldr	r2, .L154+8
 2105 0166 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2106 0168 D840     		lsrs	r0, r0, r3
 2107 016a 0D4B     		ldr	r3, .L154+12
 2108 016c 1860     		str	r0, [r3]
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 2109              		.loc 1 804 0
 2110 016e 0020     		movs	r0, #0
 2111 0170 FFF7FEFF 		bl	HAL_InitTick
 2112              	.LVL259:
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2113              		.loc 1 806 0
 2114 0174 0020     		movs	r0, #0
 2115 0176 70BD     		pop	{r4, r5, r6, pc}
 2116              	.LVL260:
 2117              	.L146:
 2118              	.LCFI10:
 2119              		.cfi_def_cfa_offset 0
 2120              		.cfi_restore 4
 2121              		.cfi_restore 5
 2122              		.cfi_restore 6
 2123              		.cfi_restore 14
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2124              		.loc 1 694 0
 2125 0178 0120     		movs	r0, #1
 2126              	.LVL261:
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2127              		.loc 1 807 0
 2128 017a 7047     		bx	lr
 2129              	.LVL262:
 2130              	.L147:
 2131              	.LCFI11:
 2132              		.cfi_def_cfa_offset 16
 2133              		.cfi_offset 4, -16
 2134              		.cfi_offset 5, -12
 2135              		.cfi_offset 6, -8
 2136              		.cfi_offset 14, -4
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 2137              		.loc 1 715 0
 2138 017c 0120     		movs	r0, #1
 2139              	.LVL263:
 2140 017e 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccMjLcE6.s 			page 67


 2141              	.LVL264:
 2142              	.L148:
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2143              		.loc 1 737 0
 2144 0180 0120     		movs	r0, #1
 2145 0182 70BD     		pop	{r4, r5, r6, pc}
 2146              	.LVL265:
 2147              	.L149:
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2148              		.loc 1 746 0
 2149 0184 0120     		movs	r0, #1
 2150 0186 70BD     		pop	{r4, r5, r6, pc}
 2151              	.LVL266:
 2152              	.L150:
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2153              		.loc 1 755 0
 2154 0188 0120     		movs	r0, #1
 2155 018a 70BD     		pop	{r4, r5, r6, pc}
 2156              	.LVL267:
 2157              	.L151:
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2158              		.loc 1 768 0
 2159 018c 0320     		movs	r0, #3
 2160 018e 70BD     		pop	{r4, r5, r6, pc}
 2161              	.LVL268:
 2162              	.L152:
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 2163              		.loc 1 782 0
 2164 0190 0120     		movs	r0, #1
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2165              		.loc 1 807 0
 2166 0192 70BD     		pop	{r4, r5, r6, pc}
 2167              	.LVL269:
 2168              	.L155:
 2169              		.align	2
 2170              	.L154:
 2171 0194 00200240 		.word	1073881088
 2172 0198 00100240 		.word	1073876992
 2173 019c 00000000 		.word	AHBPrescTable
 2174 01a0 00000000 		.word	SystemCoreClock
 2175              		.cfi_endproc
 2176              	.LFE125:
 2178              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2179              		.align	2
 2180              		.global	HAL_RCC_GetHCLKFreq
 2181              		.thumb
 2182              		.thumb_func
 2184              	HAL_RCC_GetHCLKFreq:
 2185              	.LFB130:
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * 
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated within this function
ARM GAS  /tmp/ccMjLcE6.s 			page 68


1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HCLK frequency
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2186              		.loc 1 1021 0
 2187              		.cfi_startproc
 2188              		@ args = 0, pretend = 0, frame = 0
 2189              		@ frame_needed = 0, uses_anonymous_args = 0
 2190              		@ link register save eliminated.
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return SystemCoreClock;
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2191              		.loc 1 1023 0
 2192 0000 014B     		ldr	r3, .L157
 2193 0002 1868     		ldr	r0, [r3]
 2194 0004 7047     		bx	lr
 2195              	.L158:
 2196 0006 00BF     		.align	2
 2197              	.L157:
 2198 0008 00000000 		.word	SystemCoreClock
 2199              		.cfi_endproc
 2200              	.LFE130:
 2202              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2203              		.align	2
 2204              		.global	HAL_RCC_GetPCLK1Freq
 2205              		.thumb
 2206              		.thumb_func
 2208              	HAL_RCC_GetPCLK1Freq:
 2209              	.LFB131:
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK1 frequency
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2210              		.loc 1 1032 0
 2211              		.cfi_startproc
 2212              		@ args = 0, pretend = 0, frame = 0
 2213              		@ frame_needed = 0, uses_anonymous_args = 0
 2214 0000 08B5     		push	{r3, lr}
 2215              	.LCFI12:
 2216              		.cfi_def_cfa_offset 8
 2217              		.cfi_offset 3, -8
 2218              		.cfi_offset 14, -4
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_BIT
 2219              		.loc 1 1034 0
 2220 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2221              	.LVL270:
 2222 0006 074B     		ldr	r3, .L161
 2223 0008 5B68     		ldr	r3, [r3, #4]
 2224 000a 03F4E063 		and	r3, r3, #1792
 2225              	.LVL271:
 2226              	.LBB282:
 2227              	.LBB283:
ARM GAS  /tmp/ccMjLcE6.s 			page 69


 2228              		.loc 2 531 0
 2229 000e 4FF4E062 		mov	r2, #1792
 2230              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2231 0012 92FAA2F2 		rbit r2, r2
 2232              	@ 0 "" 2
 2233              	.LVL272:
 2234              		.thumb
 2235              	.LBE283:
 2236              	.LBE282:
 2237              		.loc 1 1034 0
 2238 0016 B2FA82F2 		clz	r2, r2
 2239              	.LVL273:
 2240 001a D340     		lsrs	r3, r3, r2
 2241 001c 024A     		ldr	r2, .L161+4
 2242 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }    
 2243              		.loc 1 1035 0
 2244 0020 D840     		lsrs	r0, r0, r3
 2245 0022 08BD     		pop	{r3, pc}
 2246              	.L162:
 2247              		.align	2
 2248              	.L161:
 2249 0024 00100240 		.word	1073876992
 2250 0028 00000000 		.word	APBPrescTable
 2251              		.cfi_endproc
 2252              	.LFE131:
 2254              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2255              		.align	2
 2256              		.global	HAL_RCC_GetPCLK2Freq
 2257              		.thumb
 2258              		.thumb_func
 2260              	HAL_RCC_GetPCLK2Freq:
 2261              	.LFB132:
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency     
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK2 frequency
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2262              		.loc 1 1044 0
 2263              		.cfi_startproc
 2264              		@ args = 0, pretend = 0, frame = 0
 2265              		@ frame_needed = 0, uses_anonymous_args = 0
 2266 0000 08B5     		push	{r3, lr}
 2267              	.LCFI13:
 2268              		.cfi_def_cfa_offset 8
 2269              		.cfi_offset 3, -8
 2270              		.cfi_offset 14, -4
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_BITN
 2271              		.loc 1 1046 0
 2272 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2273              	.LVL274:
 2274 0006 074B     		ldr	r3, .L165
ARM GAS  /tmp/ccMjLcE6.s 			page 70


 2275 0008 5B68     		ldr	r3, [r3, #4]
 2276 000a 03F46053 		and	r3, r3, #14336
 2277              	.LVL275:
 2278              	.LBB284:
 2279              	.LBB285:
 2280              		.loc 2 531 0
 2281 000e 4FF46052 		mov	r2, #14336
 2282              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2283 0012 92FAA2F2 		rbit r2, r2
 2284              	@ 0 "" 2
 2285              	.LVL276:
 2286              		.thumb
 2287              	.LBE285:
 2288              	.LBE284:
 2289              		.loc 1 1046 0
 2290 0016 B2FA82F2 		clz	r2, r2
 2291              	.LVL277:
 2292 001a D340     		lsrs	r3, r3, r2
 2293 001c 024A     		ldr	r2, .L165+4
 2294 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** } 
 2295              		.loc 1 1047 0
 2296 0020 D840     		lsrs	r0, r0, r3
 2297 0022 08BD     		pop	{r3, pc}
 2298              	.L166:
 2299              		.align	2
 2300              	.L165:
 2301 0024 00100240 		.word	1073876992
 2302 0028 00000000 		.word	APBPrescTable
 2303              		.cfi_endproc
 2304              	.LFE132:
 2306              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2307              		.align	2
 2308              		.global	HAL_RCC_GetOscConfig
 2309              		.thumb
 2310              		.thumb_func
 2312              	HAL_RCC_GetOscConfig:
 2313              	.LFB133:
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * will be configured.
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2314              		.loc 1 1057 0
 2315              		.cfi_startproc
 2316              		@ args = 0, pretend = 0, frame = 0
 2317              		@ frame_needed = 0, uses_anonymous_args = 0
 2318              		@ link register save eliminated.
 2319              	.LVL278:
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
ARM GAS  /tmp/ccMjLcE6.s 			page 71


1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 2320              		.loc 1 1062 0
 2321 0000 0F23     		movs	r3, #15
 2322 0002 0360     		str	r3, [r0]
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2323              		.loc 1 1067 0
 2324 0004 2D4B     		ldr	r3, .L180
 2325 0006 1B68     		ldr	r3, [r3]
 2326 0008 13F4802F 		tst	r3, #262144
 2327 000c 03D0     		beq	.L168
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2328              		.loc 1 1069 0
 2329 000e 4FF4A023 		mov	r3, #327680
 2330 0012 4360     		str	r3, [r0, #4]
 2331 0014 0AE0     		b	.L169
 2332              	.L168:
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 2333              		.loc 1 1071 0
 2334 0016 294B     		ldr	r3, .L180
 2335 0018 1B68     		ldr	r3, [r3]
 2336 001a 13F4803F 		tst	r3, #65536
 2337 001e 03D0     		beq	.L170
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2338              		.loc 1 1073 0
 2339 0020 4FF48033 		mov	r3, #65536
 2340 0024 4360     		str	r3, [r0, #4]
 2341 0026 01E0     		b	.L169
 2342              	.L170:
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2343              		.loc 1 1077 0
 2344 0028 0023     		movs	r3, #0
 2345 002a 4360     		str	r3, [r0, #4]
 2346              	.L169:
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSEPredivValue = __HAL_RCC_HSE_GET_PREDIV();
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2347              		.loc 1 1084 0
 2348 002c 234B     		ldr	r3, .L180
 2349 002e 1B68     		ldr	r3, [r3]
 2350 0030 13F0010F 		tst	r3, #1
 2351 0034 02D0     		beq	.L171
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccMjLcE6.s 			page 72


1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2352              		.loc 1 1086 0
 2353 0036 0123     		movs	r3, #1
 2354 0038 C360     		str	r3, [r0, #12]
 2355 003a 01E0     		b	.L172
 2356              	.L171:
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2357              		.loc 1 1090 0
 2358 003c 0023     		movs	r3, #0
 2359 003e C360     		str	r3, [r0, #12]
 2360              	.L172:
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> POSITION_VAL(RC
 2361              		.loc 1 1093 0
 2362 0040 1E49     		ldr	r1, .L180
 2363 0042 0B68     		ldr	r3, [r1]
 2364 0044 03F0F803 		and	r3, r3, #248
 2365              	.LVL279:
 2366              	.LBB286:
 2367              	.LBB287:
 2368              		.loc 2 531 0
 2369 0048 F822     		movs	r2, #248
 2370              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2371 004a 92FAA2F2 		rbit r2, r2
 2372              	@ 0 "" 2
 2373              	.LVL280:
 2374              		.thumb
 2375              	.LBE287:
 2376              	.LBE286:
 2377              		.loc 1 1093 0
 2378 004e B2FA82F2 		clz	r2, r2
 2379              	.LVL281:
 2380 0052 D340     		lsrs	r3, r3, r2
 2381 0054 0361     		str	r3, [r0, #16]
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2382              		.loc 1 1096 0
 2383 0056 0B6A     		ldr	r3, [r1, #32]
 2384 0058 13F0040F 		tst	r3, #4
 2385 005c 02D0     		beq	.L173
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2386              		.loc 1 1098 0
 2387 005e 0523     		movs	r3, #5
 2388 0060 8360     		str	r3, [r0, #8]
 2389 0062 09E0     		b	.L174
 2390              	.L173:
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2391              		.loc 1 1100 0
 2392 0064 154B     		ldr	r3, .L180
 2393 0066 1B6A     		ldr	r3, [r3, #32]
ARM GAS  /tmp/ccMjLcE6.s 			page 73


 2394 0068 13F0010F 		tst	r3, #1
 2395 006c 02D0     		beq	.L175
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2396              		.loc 1 1102 0
 2397 006e 0123     		movs	r3, #1
 2398 0070 8360     		str	r3, [r0, #8]
 2399 0072 01E0     		b	.L174
 2400              	.L175:
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2401              		.loc 1 1106 0
 2402 0074 0023     		movs	r3, #0
 2403 0076 8360     		str	r3, [r0, #8]
 2404              	.L174:
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2405              		.loc 1 1110 0
 2406 0078 104B     		ldr	r3, .L180
 2407 007a 5B6A     		ldr	r3, [r3, #36]
 2408 007c 13F0010F 		tst	r3, #1
 2409 0080 02D0     		beq	.L176
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2410              		.loc 1 1112 0
 2411 0082 0123     		movs	r3, #1
 2412 0084 4361     		str	r3, [r0, #20]
 2413 0086 01E0     		b	.L177
 2414              	.L176:
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2415              		.loc 1 1116 0
 2416 0088 0023     		movs	r3, #0
 2417 008a 4361     		str	r3, [r0, #20]
 2418              	.L177:
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2419              		.loc 1 1121 0
 2420 008c 0B4B     		ldr	r3, .L180
 2421 008e 1B68     		ldr	r3, [r3]
 2422 0090 13F0807F 		tst	r3, #16777216
 2423 0094 02D0     		beq	.L178
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2424              		.loc 1 1123 0
 2425 0096 0223     		movs	r3, #2
 2426 0098 8361     		str	r3, [r0, #24]
 2427 009a 01E0     		b	.L179
ARM GAS  /tmp/ccMjLcE6.s 			page 74


 2428              	.L178:
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2429              		.loc 1 1127 0
 2430 009c 0123     		movs	r3, #1
 2431 009e 8361     		str	r3, [r0, #24]
 2432              	.L179:
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 2433              		.loc 1 1129 0
 2434 00a0 064B     		ldr	r3, .L180
 2435 00a2 5A68     		ldr	r2, [r3, #4]
 2436 00a4 02F4C032 		and	r2, r2, #98304
 2437 00a8 C261     		str	r2, [r0, #28]
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 2438              		.loc 1 1130 0
 2439 00aa 5A68     		ldr	r2, [r3, #4]
 2440 00ac 02F47012 		and	r2, r2, #3932160
 2441 00b0 0262     		str	r2, [r0, #32]
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
 2442              		.loc 1 1132 0
 2443 00b2 DB6A     		ldr	r3, [r3, #44]
 2444 00b4 03F00F03 		and	r3, r3, #15
 2445 00b8 4362     		str	r3, [r0, #36]
 2446 00ba 7047     		bx	lr
 2447              	.L181:
 2448              		.align	2
 2449              	.L180:
 2450 00bc 00100240 		.word	1073876992
 2451              		.cfi_endproc
 2452              	.LFE133:
 2454              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2455              		.align	2
 2456              		.global	HAL_RCC_GetClockConfig
 2457              		.thumb
 2458              		.thumb_func
 2460              	HAL_RCC_GetClockConfig:
 2461              	.LFB134:
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * contains the current clock configuration.
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2462              		.loc 1 1145 0
 2463              		.cfi_startproc
 2464              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccMjLcE6.s 			page 75


 2465              		@ frame_needed = 0, uses_anonymous_args = 0
 2466              		@ link register save eliminated.
 2467              	.LVL282:
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2468              		.loc 1 1151 0
 2469 0000 0F23     		movs	r3, #15
 2470 0002 0360     		str	r3, [r0]
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2471              		.loc 1 1154 0
 2472 0004 0B4B     		ldr	r3, .L183
 2473 0006 5A68     		ldr	r2, [r3, #4]
 2474 0008 02F00302 		and	r2, r2, #3
 2475 000c 4260     		str	r2, [r0, #4]
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 2476              		.loc 1 1157 0
 2477 000e 5A68     		ldr	r2, [r3, #4]
 2478 0010 02F0F002 		and	r2, r2, #240
 2479 0014 8260     		str	r2, [r0, #8]
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
 2480              		.loc 1 1160 0
 2481 0016 5A68     		ldr	r2, [r3, #4]
 2482 0018 02F4E062 		and	r2, r2, #1792
 2483 001c C260     		str	r2, [r0, #12]
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/ 
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 2484              		.loc 1 1163 0
 2485 001e 5B68     		ldr	r3, [r3, #4]
 2486 0020 03F46053 		and	r3, r3, #14336
 2487 0024 DB08     		lsrs	r3, r3, #3
 2488 0026 0361     		str	r3, [r0, #16]
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
 2489              		.loc 1 1166 0
 2490 0028 034B     		ldr	r3, .L183+4
 2491 002a 1B68     		ldr	r3, [r3]
 2492 002c 03F00703 		and	r3, r3, #7
 2493 0030 0B60     		str	r3, [r1]
 2494 0032 7047     		bx	lr
 2495              	.L184:
 2496              		.align	2
 2497              	.L183:
 2498 0034 00100240 		.word	1073876992
 2499 0038 00200240 		.word	1073881088
 2500              		.cfi_endproc
ARM GAS  /tmp/ccMjLcE6.s 			page 76


 2501              	.LFE134:
 2503              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2504              		.align	2
 2505              		.weak	HAL_RCC_CSSCallback
 2506              		.thumb
 2507              		.thumb_func
 2509              	HAL_RCC_CSSCallback:
 2510              	.LFB136:
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval none
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2511              		.loc 1 1192 0
 2512              		.cfi_startproc
 2513              		@ args = 0, pretend = 0, frame = 0
 2514              		@ frame_needed = 0, uses_anonymous_args = 0
 2515              		@ link register save eliminated.
 2516 0000 7047     		bx	lr
 2517              		.cfi_endproc
 2518              	.LFE136:
 2520 0002 00BF     		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2521              		.align	2
 2522              		.global	HAL_RCC_NMI_IRQHandler
 2523              		.thumb
 2524              		.thumb_func
 2526              	HAL_RCC_NMI_IRQHandler:
 2527              	.LFB135:
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2528              		.loc 1 1175 0
 2529              		.cfi_startproc
 2530              		@ args = 0, pretend = 0, frame = 0
 2531              		@ frame_needed = 0, uses_anonymous_args = 0
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2532              		.loc 1 1175 0
 2533 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccMjLcE6.s 			page 77


 2534              	.LCFI14:
 2535              		.cfi_def_cfa_offset 8
 2536              		.cfi_offset 3, -8
 2537              		.cfi_offset 14, -4
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2538              		.loc 1 1177 0
 2539 0002 054B     		ldr	r3, .L189
 2540 0004 9B68     		ldr	r3, [r3, #8]
 2541 0006 13F0800F 		tst	r3, #128
 2542 000a 04D0     		beq	.L186
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 2543              		.loc 1 1180 0
 2544 000c FFF7FEFF 		bl	HAL_RCC_CSSCallback
 2545              	.LVL283:
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2546              		.loc 1 1183 0
 2547 0010 8022     		movs	r2, #128
 2548 0012 024B     		ldr	r3, .L189+4
 2549 0014 1A70     		strb	r2, [r3]
 2550              	.L186:
 2551 0016 08BD     		pop	{r3, pc}
 2552              	.L190:
 2553              		.align	2
 2554              	.L189:
 2555 0018 00100240 		.word	1073876992
 2556 001c 0A100240 		.word	1073877002
 2557              		.cfi_endproc
 2558              	.LFE135:
 2560              		.global	aPredivFactorTable
 2561              		.global	aPLLMULFactorTable
 2562              		.section	.rodata.aPredivFactorTable,"a",%progbits
 2563              		.align	2
 2564              		.set	.LANCHOR1,. + 0
 2567              	aPredivFactorTable:
 2568 0000 01       		.byte	1
 2569 0001 02       		.byte	2
 2570 0002 03       		.byte	3
 2571 0003 04       		.byte	4
 2572 0004 05       		.byte	5
 2573 0005 06       		.byte	6
 2574 0006 07       		.byte	7
 2575 0007 08       		.byte	8
 2576 0008 09       		.byte	9
 2577 0009 0A       		.byte	10
 2578 000a 0B       		.byte	11
 2579 000b 0C       		.byte	12
 2580 000c 0D       		.byte	13
 2581 000d 0E       		.byte	14
 2582 000e 0F       		.byte	15
 2583 000f 10       		.byte	16
 2584              		.section	.rodata.aPLLMULFactorTable,"a",%progbits
 2585              		.align	2
 2586              		.set	.LANCHOR0,. + 0
 2589              	aPLLMULFactorTable:
 2590 0000 02       		.byte	2
 2591 0001 03       		.byte	3
 2592 0002 04       		.byte	4
ARM GAS  /tmp/ccMjLcE6.s 			page 78


 2593 0003 05       		.byte	5
 2594 0004 06       		.byte	6
 2595 0005 07       		.byte	7
 2596 0006 08       		.byte	8
 2597 0007 09       		.byte	9
 2598 0008 0A       		.byte	10
 2599 0009 0B       		.byte	11
 2600 000a 0C       		.byte	12
 2601 000b 0D       		.byte	13
 2602 000c 0E       		.byte	14
 2603 000d 0F       		.byte	15
 2604 000e 10       		.byte	16
 2605 000f 10       		.byte	16
 2606              		.text
 2607              	.Letext0:
 2608              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 2609              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 2610              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 2611              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 2612              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2613              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 2614              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2615              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 2616              		.file 11 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 2617              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccMjLcE6.s 			page 79


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_rcc.c
     /tmp/ccMjLcE6.s:21     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccMjLcE6.s:26     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccMjLcE6.s:208    .text.HAL_RCC_DeInit:00000000000000e0 $d
     /tmp/ccMjLcE6.s:217    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccMjLcE6.s:222    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccMjLcE6.s:845    .text.HAL_RCC_OscConfig:00000000000002ec $d
     /tmp/ccMjLcE6.s:850    .text.HAL_RCC_OscConfig:00000000000002f4 $t
     /tmp/ccMjLcE6.s:1528   .text.HAL_RCC_OscConfig:0000000000000608 $d
     /tmp/ccMjLcE6.s:1533   .text.HAL_RCC_OscConfig:0000000000000610 $t
     /tmp/ccMjLcE6.s:1571   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccMjLcE6.s:1576   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccMjLcE6.s:1645   .text.HAL_RCC_MCOConfig:000000000000004c $d
     /tmp/ccMjLcE6.s:1650   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccMjLcE6.s:1655   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccMjLcE6.s:1687   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/ccMjLcE6.s:1692   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/ccMjLcE6.s:1724   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccMjLcE6.s:1729   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccMjLcE6.s:1821   .text.HAL_RCC_GetSysClockFreq:0000000000000060 $d
     /tmp/ccMjLcE6.s:1829   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccMjLcE6.s:1834   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccMjLcE6.s:2171   .text.HAL_RCC_ClockConfig:0000000000000194 $d
     /tmp/ccMjLcE6.s:2179   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccMjLcE6.s:2184   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccMjLcE6.s:2198   .text.HAL_RCC_GetHCLKFreq:0000000000000008 $d
     /tmp/ccMjLcE6.s:2203   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccMjLcE6.s:2208   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccMjLcE6.s:2249   .text.HAL_RCC_GetPCLK1Freq:0000000000000024 $d
     /tmp/ccMjLcE6.s:2255   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccMjLcE6.s:2260   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccMjLcE6.s:2301   .text.HAL_RCC_GetPCLK2Freq:0000000000000024 $d
     /tmp/ccMjLcE6.s:2307   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccMjLcE6.s:2312   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccMjLcE6.s:2450   .text.HAL_RCC_GetOscConfig:00000000000000bc $d
     /tmp/ccMjLcE6.s:2455   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccMjLcE6.s:2460   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccMjLcE6.s:2498   .text.HAL_RCC_GetClockConfig:0000000000000034 $d
     /tmp/ccMjLcE6.s:2504   .text.HAL_RCC_CSSCallback:0000000000000000 $t
     /tmp/ccMjLcE6.s:2509   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccMjLcE6.s:2521   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccMjLcE6.s:2526   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccMjLcE6.s:2555   .text.HAL_RCC_NMI_IRQHandler:0000000000000018 $d
     /tmp/ccMjLcE6.s:2567   .rodata.aPredivFactorTable:0000000000000000 aPredivFactorTable
     /tmp/ccMjLcE6.s:2589   .rodata.aPLLMULFactorTable:0000000000000000 aPLLMULFactorTable
     /tmp/ccMjLcE6.s:2563   .rodata.aPredivFactorTable:0000000000000000 $d
     /tmp/ccMjLcE6.s:2585   .rodata.aPLLMULFactorTable:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
SystemCoreClock
HAL_GPIO_Init
AHBPrescTable
APBPrescTable
ARM GAS  /tmp/ccMjLcE6.s 			page 80


