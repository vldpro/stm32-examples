ARM GAS  /tmp/ccUVFA1p.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_hal_rtc_ex.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_RTCEx_SetTimeStamp,"ax",%progbits
  21              		.align	2
  22              		.global	HAL_RTCEx_SetTimeStamp
  23              		.thumb
  24              		.thumb_func
  26              	HAL_RTCEx_SetTimeStamp:
  27              	.LFB123:
  28              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @file    stm32f3xx_hal_rtc_ex.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief   Extended RTC HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          functionalities of the Real Time Clock (RTC) Extended peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *           + RTC Time Stamp functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *           + RTC Tamper functions 
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *           + RTC Wake-up functions
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *           + Extended Control functions
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *           + Extended RTC features functions    
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   @verbatim
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   ==============================================================================
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                   ##### How to use this driver #####
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   ==============================================================================
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   [..] 
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     (+) Enable the RTC domain access.
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour 
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         format using the HAL_RTC_Init() function.
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *** RTC Wakeup configuration ***
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   ================================
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   [..] 
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     (+) To configure the RTC Wakeup Clock source and Counter use the HAL_RTCEx_SetWakeUpTimer()
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         function. You can also configure the RTC Wakeup timer with interrupt mode 
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         using the HAL_RTCEx_SetWakeUpTimer_IT() function.
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     (+) To read the RTC WakeUp Counter register, use the HAL_RTCEx_GetWakeUpTimer()
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         function.
ARM GAS  /tmp/ccUVFA1p.s 			page 2


  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *** TimeStamp configuration ***
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   ===============================
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   [..]
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         (+) Configure the RTC_AF trigger and enable the RTC TimeStamp using the 
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         HAL_RTCEx_SetTimeStamp() function. You can also configure the RTC TimeStamp with
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         interrupt mode using the HAL_RTCEx_SetTimeStamp_IT() function.
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTCEx_GetTimeStamp()
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         function.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     (+) The TIMESTAMP alternate function is mapped to RTC_AF1 (PC13U).
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *** Tamper configuration ***
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   ============================
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   [..]
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         (+) Enable the RTC Tamper and configure the Tamper filter count, trigger Edge 
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         or Level according to the Tamper filter (if equal to 0 Edge else Level) 
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         value, sampling frequency, precharge or discharge and Pull-UP using the 
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         HAL_RTCEx_SetTamper() function. You can configure RTC Tamper with interrupt
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         mode using HAL_RTCEx_SetTamper_IT() function.
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     (+) The TAMPER1 alternate function is mapped to RTC_AF1 (PC13U).
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *** Backup Data Registers configuration ***
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   ===========================================
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   [..]
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     (+) To write to the RTC Backup Data registers, use the HAL_RTCEx_BKUPWrite()
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         function.  
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     (+) To read the RTC Backup Data registers, use the HAL_RTCEx_BKUPRead()
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         function.
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****      
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    @endverbatim
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   ******************************************************************************
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @attention
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * are permitted provided that the following conditions are met:
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *      this list of conditions and the following disclaimer.
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *      and/or other materials provided with the distribution.
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *      may be used to endorse or promote products derived from this software
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *      without specific prior written permission.
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *
ARM GAS  /tmp/ccUVFA1p.s 			page 3


  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   ******************************************************************************  
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */ 
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /* Includes ------------------------------------------------------------------*/
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** #include "stm32f3xx_hal.h"
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /** @addtogroup STM32F3xx_HAL_Driver
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @{
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /** @addtogroup RTCEx
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief RTC Extended HAL module driver
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @{
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** #ifdef HAL_RTC_MODULE_ENABLED
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /* Private typedef -----------------------------------------------------------*/
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /* Private define ------------------------------------------------------------*/
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /* Private macro -------------------------------------------------------------*/
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /* Private variables ---------------------------------------------------------*/
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /* Private function prototypes -----------------------------------------------*/
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /* Exported functions ---------------------------------------------------------*/
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @{
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group1
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  *  @brief   RTC TimeStamp and Tamper functions
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  *
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** @verbatim   
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  ===============================================================================
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                  ##### RTC TimeStamp and Tamper functions #####
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  ===============================================================================  
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure TimeStamp feature
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** @endverbatim
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @{
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Set TimeStamp.
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature. 
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *         activated.
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the  
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the 
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin specifies the RTC TimeStamp Pin.
ARM GAS  /tmp/ccUVFA1p.s 			page 4


 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_DEFAULT: PC13 is selected as RTC TimeStamp Pin.
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32_t 
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
  29              		.loc 1 150 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
  35              		.loc 1 158 0
  36 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
  37 0002 012B     		cmp	r3, #1
  38 0004 1FD0     		beq	.L3
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
  39              		.loc 1 150 0 discriminator 2
  40 0006 10B4     		push	{r4}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 4
  43              		.cfi_offset 4, -4
  44              		.loc 1 158 0 discriminator 2
  45 0008 0122     		movs	r2, #1
  46              	.LVL1:
  47 000a 0277     		strb	r2, [r0, #28]
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
  48              		.loc 1 160 0 discriminator 2
  49 000c 0223     		movs	r3, #2
  50 000e 4377     		strb	r3, [r0, #29]
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
  51              		.loc 1 163 0 discriminator 2
  52 0010 0468     		ldr	r4, [r0]
  53 0012 A368     		ldr	r3, [r4, #8]
  54 0014 23F40063 		bic	r3, r3, #2048
  55 0018 23F00803 		bic	r3, r3, #8
  56              	.LVL2:
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmpreg|= TimeStampEdge;
  57              		.loc 1 165 0 discriminator 2
  58 001c 1943     		orrs	r1, r1, r3
  59              	.LVL3:
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
  60              		.loc 1 168 0 discriminator 2
ARM GAS  /tmp/ccUVFA1p.s 			page 5


  61 001e CA23     		movs	r3, #202
  62 0020 6362     		str	r3, [r4, #36]
  63 0022 0368     		ldr	r3, [r0]
  64 0024 5324     		movs	r4, #83
  65 0026 5C62     		str	r4, [r3, #36]
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
  66              		.loc 1 171 0 discriminator 2
  67 0028 0368     		ldr	r3, [r0]
  68 002a 9960     		str	r1, [r3, #8]
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
  69              		.loc 1 173 0 discriminator 2
  70 002c 0168     		ldr	r1, [r0]
  71              	.LVL4:
  72 002e 8B68     		ldr	r3, [r1, #8]
  73              	.LVL5:
  74 0030 43F40063 		orr	r3, r3, #2048
  75 0034 8B60     		str	r3, [r1, #8]
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
  76              		.loc 1 176 0 discriminator 2
  77 0036 0368     		ldr	r3, [r0]
  78 0038 FF21     		movs	r1, #255
  79 003a 5962     		str	r1, [r3, #36]
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
  80              		.loc 1 179 0 discriminator 2
  81 003c 4277     		strb	r2, [r0, #29]
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
  82              		.loc 1 182 0 discriminator 2
  83 003e 0023     		movs	r3, #0
  84 0040 0377     		strb	r3, [r0, #28]
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
  85              		.loc 1 184 0 discriminator 2
  86 0042 1846     		mov	r0, r3
  87              	.LVL6:
  88 0044 01E0     		b	.L2
  89              	.LVL7:
  90              	.L3:
  91              	.LCFI1:
  92              		.cfi_def_cfa_offset 0
  93              		.cfi_restore 4
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
  94              		.loc 1 158 0
  95 0046 0220     		movs	r0, #2
  96              	.LVL8:
  97 0048 7047     		bx	lr
  98              	.LVL9:
  99              	.L2:
 100              	.LCFI2:
ARM GAS  /tmp/ccUVFA1p.s 			page 6


 101              		.cfi_def_cfa_offset 4
 102              		.cfi_offset 4, -4
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 103              		.loc 1 185 0
 104 004a 5DF8044B 		ldr	r4, [sp], #4
 105              	.LCFI3:
 106              		.cfi_restore 4
 107              		.cfi_def_cfa_offset 0
 108 004e 7047     		bx	lr
 109              		.cfi_endproc
 110              	.LFE123:
 112              		.section	.text.HAL_RTCEx_SetTimeStamp_IT,"ax",%progbits
 113              		.align	2
 114              		.global	HAL_RTCEx_SetTimeStamp_IT
 115              		.thumb
 116              		.thumb_func
 118              	HAL_RTCEx_SetTimeStamp_IT:
 119              	.LFB124:
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Set TimeStamp with Interrupt.
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature.
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is 
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *         activated.
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the  
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the 
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin Specifies the RTC TimeStamp Pin.
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_DEFAULT: PC13 is selected as RTC TimeStamp Pin.
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp_IT(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 120              		.loc 1 204 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.LVL10:
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */ 
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 126              		.loc 1 212 0
 127 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 128 0002 012B     		cmp	r3, #1
 129 0004 2DD0     		beq	.L8
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 130              		.loc 1 204 0 discriminator 2
ARM GAS  /tmp/ccUVFA1p.s 			page 7


 131 0006 10B4     		push	{r4}
 132              	.LCFI4:
 133              		.cfi_def_cfa_offset 4
 134              		.cfi_offset 4, -4
 135              		.loc 1 212 0 discriminator 2
 136 0008 0124     		movs	r4, #1
 137 000a 0477     		strb	r4, [r0, #28]
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 138              		.loc 1 214 0 discriminator 2
 139 000c 0223     		movs	r3, #2
 140 000e 4377     		strb	r3, [r0, #29]
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 141              		.loc 1 217 0 discriminator 2
 142 0010 0268     		ldr	r2, [r0]
 143              	.LVL11:
 144 0012 9368     		ldr	r3, [r2, #8]
 145 0014 23F40063 		bic	r3, r3, #2048
 146 0018 23F00803 		bic	r3, r3, #8
 147              	.LVL12:
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmpreg |= TimeStampEdge;
 148              		.loc 1 219 0 discriminator 2
 149 001c 1943     		orrs	r1, r1, r3
 150              	.LVL13:
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 151              		.loc 1 222 0 discriminator 2
 152 001e CA23     		movs	r3, #202
 153 0020 5362     		str	r3, [r2, #36]
 154 0022 0368     		ldr	r3, [r0]
 155 0024 5322     		movs	r2, #83
 156 0026 5A62     		str	r2, [r3, #36]
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 157              		.loc 1 225 0 discriminator 2
 158 0028 0368     		ldr	r3, [r0]
 159 002a 9960     		str	r1, [r3, #8]
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
 160              		.loc 1 227 0 discriminator 2
 161 002c 0268     		ldr	r2, [r0]
 162 002e 9368     		ldr	r3, [r2, #8]
 163 0030 43F40063 		orr	r3, r3, #2048
 164 0034 9360     		str	r3, [r2, #8]
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable IT timestamp */
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE_IT(hrtc,RTC_IT_TS);
 165              		.loc 1 230 0 discriminator 2
 166 0036 0268     		ldr	r2, [r0]
 167 0038 9368     		ldr	r3, [r2, #8]
 168 003a 43F40043 		orr	r3, r3, #32768
 169 003e 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccUVFA1p.s 			page 8


 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* RTC timestamp Interrupt Configuration: EXTI configuration */
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 170              		.loc 1 233 0 discriminator 2
 171 0040 0A4B     		ldr	r3, .L11
 172 0042 1A68     		ldr	r2, [r3]
 173 0044 42F40022 		orr	r2, r2, #524288
 174 0048 1A60     		str	r2, [r3]
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
 175              		.loc 1 235 0 discriminator 2
 176 004a 9A68     		ldr	r2, [r3, #8]
 177 004c 42F40022 		orr	r2, r2, #524288
 178 0050 9A60     		str	r2, [r3, #8]
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 179              		.loc 1 238 0 discriminator 2
 180 0052 0368     		ldr	r3, [r0]
 181 0054 FF22     		movs	r2, #255
 182 0056 5A62     		str	r2, [r3, #36]
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 183              		.loc 1 240 0 discriminator 2
 184 0058 4477     		strb	r4, [r0, #29]
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 185              		.loc 1 243 0 discriminator 2
 186 005a 0023     		movs	r3, #0
 187 005c 0377     		strb	r3, [r0, #28]
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 188              		.loc 1 245 0 discriminator 2
 189 005e 1846     		mov	r0, r3
 190              	.LVL14:
 191 0060 01E0     		b	.L7
 192              	.LVL15:
 193              	.L8:
 194              	.LCFI5:
 195              		.cfi_def_cfa_offset 0
 196              		.cfi_restore 4
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 197              		.loc 1 212 0
 198 0062 0220     		movs	r0, #2
 199              	.LVL16:
 200 0064 7047     		bx	lr
 201              	.LVL17:
 202              	.L7:
 203              	.LCFI6:
 204              		.cfi_def_cfa_offset 4
 205              		.cfi_offset 4, -4
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 206              		.loc 1 246 0
 207 0066 5DF8044B 		ldr	r4, [sp], #4
 208              	.LCFI7:
 209              		.cfi_restore 4
ARM GAS  /tmp/ccUVFA1p.s 			page 9


 210              		.cfi_def_cfa_offset 0
 211 006a 7047     		bx	lr
 212              	.L12:
 213              		.align	2
 214              	.L11:
 215 006c 00040140 		.word	1073808384
 216              		.cfi_endproc
 217              	.LFE124:
 219              		.section	.text.HAL_RTCEx_DeactivateTimeStamp,"ax",%progbits
 220              		.align	2
 221              		.global	HAL_RTCEx_DeactivateTimeStamp
 222              		.thumb
 223              		.thumb_func
 225              	HAL_RTCEx_DeactivateTimeStamp:
 226              	.LFB125:
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Deactivate TimeStamp.
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTimeStamp(RTC_HandleTypeDef *hrtc)
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 227              		.loc 1 254 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 232              	.LVL18:
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 233              		.loc 1 258 0
 234 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 235 0002 012B     		cmp	r3, #1
 236 0004 1DD0     		beq	.L15
 237              		.loc 1 258 0 is_stmt 0 discriminator 2
 238 0006 0122     		movs	r2, #1
 239 0008 0277     		strb	r2, [r0, #28]
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 240              		.loc 1 260 0 is_stmt 1 discriminator 2
 241 000a 0223     		movs	r3, #2
 242 000c 4377     		strb	r3, [r0, #29]
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 243              		.loc 1 263 0 discriminator 2
 244 000e 0368     		ldr	r3, [r0]
 245 0010 CA21     		movs	r1, #202
 246 0012 5962     		str	r1, [r3, #36]
 247 0014 0368     		ldr	r3, [r0]
 248 0016 5321     		movs	r1, #83
 249 0018 5962     		str	r1, [r3, #36]
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
ARM GAS  /tmp/ccUVFA1p.s 			page 10


 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_DISABLE_IT(hrtc, RTC_IT_TS);
 250              		.loc 1 266 0 discriminator 2
 251 001a 0168     		ldr	r1, [r0]
 252 001c 8B68     		ldr	r3, [r1, #8]
 253 001e 23F40043 		bic	r3, r3, #32768
 254 0022 8B60     		str	r3, [r1, #8]
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 255              		.loc 1 269 0 discriminator 2
 256 0024 0168     		ldr	r1, [r0]
 257 0026 8B68     		ldr	r3, [r1, #8]
 258 0028 23F40063 		bic	r3, r3, #2048
 259 002c 23F00803 		bic	r3, r3, #8
 260              	.LVL19:
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 261              		.loc 1 272 0 discriminator 2
 262 0030 8B60     		str	r3, [r1, #8]
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 263              		.loc 1 275 0 discriminator 2
 264 0032 0368     		ldr	r3, [r0]
 265              	.LVL20:
 266 0034 FF21     		movs	r1, #255
 267              	.LVL21:
 268 0036 5962     		str	r1, [r3, #36]
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 269              		.loc 1 277 0 discriminator 2
 270 0038 4277     		strb	r2, [r0, #29]
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 271              		.loc 1 280 0 discriminator 2
 272 003a 0023     		movs	r3, #0
 273 003c 0377     		strb	r3, [r0, #28]
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 274              		.loc 1 282 0 discriminator 2
 275 003e 1846     		mov	r0, r3
 276              	.LVL22:
 277 0040 7047     		bx	lr
 278              	.LVL23:
 279              	.L15:
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 280              		.loc 1 258 0
 281 0042 0220     		movs	r0, #2
 282              	.LVL24:
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 283              		.loc 1 283 0
 284 0044 7047     		bx	lr
 285              		.cfi_endproc
 286              	.LFE125:
 288 0046 00BF     		.section	.text.HAL_RTCEx_GetTimeStamp,"ax",%progbits
ARM GAS  /tmp/ccUVFA1p.s 			page 11


 289              		.align	2
 290              		.global	HAL_RTCEx_GetTimeStamp
 291              		.thumb
 292              		.thumb_func
 294              	HAL_RTCEx_GetTimeStamp:
 295              	.LFB126:
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Get the RTC TimeStamp value.
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  sTimeStamp Pointer to Time structure
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  sTimeStampDate Pointer to Date structure  
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  Format specifies the format of the entered parameters.
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_GetTimeStamp(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef* sTimeStamp, RTC_
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 296              		.loc 1 297 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              	.LVL25:
 301 0000 70B5     		push	{r4, r5, r6, lr}
 302              	.LCFI8:
 303              		.cfi_def_cfa_offset 16
 304              		.cfi_offset 4, -16
 305              		.cfi_offset 5, -12
 306              		.cfi_offset 6, -8
 307              		.cfi_offset 14, -4
 308 0002 0646     		mov	r6, r0
 309 0004 0C46     		mov	r4, r1
 310 0006 1546     		mov	r5, r2
 311              	.LVL26:
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmptime = 0U, tmpdate = 0U;
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_FORMAT(Format));
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the TimeStamp time and date registers values */
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmptime = (uint32_t)(hrtc->Instance->TSTR & RTC_TR_RESERVED_MASK);
 312              		.loc 1 304 0
 313 0008 0168     		ldr	r1, [r0]
 314              	.LVL27:
 315 000a 0A6B     		ldr	r2, [r1, #48]
 316              	.LVL28:
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmpdate = (uint32_t)(hrtc->Instance->TSDR & RTC_DR_RESERVED_MASK);
 317              		.loc 1 305 0
 318 000c 496B     		ldr	r1, [r1, #52]
 319              	.LVL29:
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Fill the Time structure fields with the read parameters */
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   sTimeStamp->Hours = (uint8_t)((tmptime & (RTC_TR_HT | RTC_TR_HU)) >> 16U);
 320              		.loc 1 308 0
 321 000e C2F30540 		ubfx	r0, r2, #16, #6
ARM GAS  /tmp/ccUVFA1p.s 			page 12


 322              	.LVL30:
 323 0012 2070     		strb	r0, [r4]
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   sTimeStamp->Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8U);
 324              		.loc 1 309 0
 325 0014 C2F30620 		ubfx	r0, r2, #8, #7
 326 0018 6070     		strb	r0, [r4, #1]
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   sTimeStamp->Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
 327              		.loc 1 310 0
 328 001a 02F07F00 		and	r0, r2, #127
 329 001e A070     		strb	r0, [r4, #2]
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   sTimeStamp->TimeFormat = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16U);
 330              		.loc 1 311 0
 331 0020 02F48002 		and	r2, r2, #4194304
 332              	.LVL31:
 333 0024 120C     		lsrs	r2, r2, #16
 334 0026 E270     		strb	r2, [r4, #3]
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   sTimeStamp->SubSeconds = (uint32_t) hrtc->Instance->TSSSR;
 335              		.loc 1 312 0
 336 0028 3268     		ldr	r2, [r6]
 337 002a 926B     		ldr	r2, [r2, #56]
 338 002c 6260     		str	r2, [r4, #4]
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Fill the Date structure fields with the read parameters */
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   sTimeStampDate->Year = 0U;
 339              		.loc 1 315 0
 340 002e 0022     		movs	r2, #0
 341 0030 EA70     		strb	r2, [r5, #3]
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   sTimeStampDate->Month = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> 8U);
 342              		.loc 1 316 0
 343 0032 C1F30422 		ubfx	r2, r1, #8, #5
 344 0036 6A70     		strb	r2, [r5, #1]
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   sTimeStampDate->Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
 345              		.loc 1 317 0
 346 0038 01F03F02 		and	r2, r1, #63
 347 003c AA70     		strb	r2, [r5, #2]
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   sTimeStampDate->WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13U);
 348              		.loc 1 318 0
 349 003e C1F34231 		ubfx	r1, r1, #13, #3
 350              	.LVL32:
 351 0042 2970     		strb	r1, [r5]
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the input parameters format */
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(Format == RTC_FORMAT_BIN)
 352              		.loc 1 321 0
 353 0044 BBB9     		cbnz	r3, .L17
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Convert the TimeStamp structure parameters to Binary format */
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     sTimeStamp->Hours = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Hours);
 354              		.loc 1 324 0
 355 0046 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 356 0048 FFF7FEFF 		bl	RTC_Bcd2ToByte
 357              	.LVL33:
 358 004c 2070     		strb	r0, [r4]
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     sTimeStamp->Minutes = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Minutes);
 359              		.loc 1 325 0
 360 004e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 361 0050 FFF7FEFF 		bl	RTC_Bcd2ToByte
ARM GAS  /tmp/ccUVFA1p.s 			page 13


 362              	.LVL34:
 363 0054 6070     		strb	r0, [r4, #1]
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     sTimeStamp->Seconds = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Seconds);
 364              		.loc 1 326 0
 365 0056 A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 366 0058 FFF7FEFF 		bl	RTC_Bcd2ToByte
 367              	.LVL35:
 368 005c A070     		strb	r0, [r4, #2]
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Convert the DateTimeStamp structure parameters to Binary format */
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     sTimeStampDate->Month = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Month);
 369              		.loc 1 329 0
 370 005e 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 371 0060 FFF7FEFF 		bl	RTC_Bcd2ToByte
 372              	.LVL36:
 373 0064 6870     		strb	r0, [r5, #1]
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     sTimeStampDate->Date = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Date);
 374              		.loc 1 330 0
 375 0066 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 376 0068 FFF7FEFF 		bl	RTC_Bcd2ToByte
 377              	.LVL37:
 378 006c A870     		strb	r0, [r5, #2]
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     sTimeStampDate->WeekDay = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->WeekDay);
 379              		.loc 1 331 0
 380 006e 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 381 0070 FFF7FEFF 		bl	RTC_Bcd2ToByte
 382              	.LVL38:
 383 0074 2870     		strb	r0, [r5]
 384              	.L17:
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the TIMESTAMP Flag */
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 385              		.loc 1 335 0
 386 0076 3268     		ldr	r2, [r6]
 387 0078 D368     		ldr	r3, [r2, #12]
 388 007a DBB2     		uxtb	r3, r3
 389 007c 63F40863 		orn	r3, r3, #2176
 390 0080 D360     		str	r3, [r2, #12]
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 391              		.loc 1 338 0
 392 0082 0020     		movs	r0, #0
 393 0084 70BD     		pop	{r4, r5, r6, pc}
 394              		.cfi_endproc
 395              	.LFE126:
 397 0086 00BF     		.section	.text.HAL_RTCEx_SetTamper,"ax",%progbits
 398              		.align	2
 399              		.global	HAL_RTCEx_SetTamper
 400              		.thumb
 401              		.thumb_func
 403              	HAL_RTCEx_SetTamper:
 404              	.LFB127:
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Set Tamper
ARM GAS  /tmp/ccUVFA1p.s 			page 14


 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @note   By calling this API we disable the tamper interrupt for all tampers. 
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper(RTC_HandleTypeDef *hrtc, RTC_TamperTypeDef* sTamper)
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 405              		.loc 1 348 0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409              		@ link register save eliminated.
 410              	.LVL39:
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 411              		.loc 1 361 0
 412 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 413 0002 012B     		cmp	r3, #1
 414 0004 2CD0     		beq	.L22
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 415              		.loc 1 348 0 discriminator 2
 416 0006 10B4     		push	{r4}
 417              	.LCFI9:
 418              		.cfi_def_cfa_offset 4
 419              		.cfi_offset 4, -4
 420              		.loc 1 361 0 discriminator 2
 421 0008 0123     		movs	r3, #1
 422 000a 0377     		strb	r3, [r0, #28]
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 423              		.loc 1 363 0 discriminator 2
 424 000c 0223     		movs	r3, #2
 425 000e 4377     		strb	r3, [r0, #29]
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(sTamper->Trigger != RTC_TAMPERTRIGGER_RISINGEDGE)
 426              		.loc 1 365 0 discriminator 2
 427 0010 4B68     		ldr	r3, [r1, #4]
 428 0012 13B1     		cbz	r3, .L21
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     sTamper->Trigger = (uint32_t)(sTamper->Tamper << 1U);
 429              		.loc 1 367 0
 430 0014 0B68     		ldr	r3, [r1]
 431 0016 5B00     		lsls	r3, r3, #1
 432 0018 4B60     		str	r3, [r1, #4]
 433              	.L21:
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
ARM GAS  /tmp/ccUVFA1p.s 			page 15


 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmpreg = ((uint32_t)sTamper->Tamper | (uint32_t)sTamper->Trigger | (uint32_t)sTamper->Filter |\
 434              		.loc 1 370 0
 435 001a 0B68     		ldr	r3, [r1]
 436 001c 4A68     		ldr	r2, [r1, #4]
 437 001e 43EA0204 		orr	r4, r3, r2
 438 0022 8A68     		ldr	r2, [r1, #8]
 439 0024 1443     		orrs	r4, r4, r2
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 440              		.loc 1 371 0
 441 0026 CA68     		ldr	r2, [r1, #12]
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 442              		.loc 1 370 0
 443 0028 1443     		orrs	r4, r4, r2
 444              		.loc 1 371 0
 445 002a 0A69     		ldr	r2, [r1, #16]
 446 002c 1443     		orrs	r4, r4, r2
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->TamperPullUp | sTamper->TimeStampOnTamperDetection);
 447              		.loc 1 372 0
 448 002e 4A69     		ldr	r2, [r1, #20]
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 449              		.loc 1 371 0
 450 0030 1443     		orrs	r4, r4, r2
 451              		.loc 1 372 0
 452 0032 8A69     		ldr	r2, [r1, #24]
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 453              		.loc 1 370 0
 454 0034 2243     		orrs	r2, r2, r4
 455              	.LVL40:
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->TAFCR &= (uint32_t)~((uint32_t)sTamper->Tamper | (uint32_t)(sTamper->Tamper << 1U
 456              		.loc 1 374 0
 457 0036 0468     		ldr	r4, [r0]
 458 0038 216C     		ldr	r1, [r4, #64]
 459              	.LVL41:
 460 003a 43EA4303 		orr	r3, r3, r3, lsl #1
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAFCR_TAMPFREQ | (uint32_t)RTC_TAFCR_TAMPFLT |
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAFCR_TAMPPUDIS | (uint32_t)RTC_TAFCR_TAMPIE);
 461              		.loc 1 376 0
 462 003e 43F47F43 		orr	r3, r3, #65280
 463 0042 43F08403 		orr	r3, r3, #132
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAFCR_TAMPFREQ | (uint32_t)RTC_TAFCR_TAMPFLT |
 464              		.loc 1 374 0
 465 0046 21EA0303 		bic	r3, r1, r3
 466 004a 2364     		str	r3, [r4, #64]
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->TAFCR |= tmpreg;
 467              		.loc 1 378 0
 468 004c 0168     		ldr	r1, [r0]
 469 004e 0B6C     		ldr	r3, [r1, #64]
 470 0050 1343     		orrs	r3, r3, r2
 471 0052 0B64     		str	r3, [r1, #64]
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 472              		.loc 1 380 0
 473 0054 0123     		movs	r3, #1
 474 0056 4377     		strb	r3, [r0, #29]
ARM GAS  /tmp/ccUVFA1p.s 			page 16


 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 475              		.loc 1 383 0
 476 0058 0023     		movs	r3, #0
 477 005a 0377     		strb	r3, [r0, #28]
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 478              		.loc 1 385 0
 479 005c 1846     		mov	r0, r3
 480              	.LVL42:
 481 005e 01E0     		b	.L20
 482              	.LVL43:
 483              	.L22:
 484              	.LCFI10:
 485              		.cfi_def_cfa_offset 0
 486              		.cfi_restore 4
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 487              		.loc 1 361 0
 488 0060 0220     		movs	r0, #2
 489              	.LVL44:
 490 0062 7047     		bx	lr
 491              	.LVL45:
 492              	.L20:
 493              	.LCFI11:
 494              		.cfi_def_cfa_offset 4
 495              		.cfi_offset 4, -4
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 496              		.loc 1 386 0
 497 0064 5DF8044B 		ldr	r4, [sp], #4
 498              	.LCFI12:
 499              		.cfi_restore 4
 500              		.cfi_def_cfa_offset 0
 501 0068 7047     		bx	lr
 502              		.cfi_endproc
 503              	.LFE127:
 505 006a 00BF     		.section	.text.HAL_RTCEx_SetTamper_IT,"ax",%progbits
 506              		.align	2
 507              		.global	HAL_RTCEx_SetTamper_IT
 508              		.thumb
 509              		.thumb_func
 511              	HAL_RTCEx_SetTamper_IT:
 512              	.LFB128:
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Set Tamper with interrupt.
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @note   By calling this API we force the tamper interrupt for all tampers.
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to RTC Tamper.
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper_IT(RTC_HandleTypeDef *hrtc, RTC_TamperTypeDef* sTamper)
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 513              		.loc 1 396 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccUVFA1p.s 			page 17


 517              		@ link register save eliminated.
 518              	.LVL46:
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper)); 
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 519              		.loc 1 409 0
 520 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 521 0002 012B     		cmp	r3, #1
 522 0004 3AD0     		beq	.L28
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 523              		.loc 1 396 0 discriminator 2
 524 0006 10B4     		push	{r4}
 525              	.LCFI13:
 526              		.cfi_def_cfa_offset 4
 527              		.cfi_offset 4, -4
 528              		.loc 1 409 0 discriminator 2
 529 0008 0123     		movs	r3, #1
 530 000a 0377     		strb	r3, [r0, #28]
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 531              		.loc 1 411 0 discriminator 2
 532 000c 0223     		movs	r3, #2
 533 000e 4377     		strb	r3, [r0, #29]
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the tamper trigger */
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(sTamper->Trigger != RTC_TAMPERTRIGGER_RISINGEDGE)
 534              		.loc 1 414 0 discriminator 2
 535 0010 4B68     		ldr	r3, [r1, #4]
 536 0012 13B1     		cbz	r3, .L27
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     sTamper->Trigger = (uint32_t) (sTamper->Tamper<<1U);
 537              		.loc 1 416 0
 538 0014 0B68     		ldr	r3, [r1]
 539 0016 5B00     		lsls	r3, r3, #1
 540 0018 4B60     		str	r3, [r1, #4]
 541              	.L27:
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmpreg = ((uint32_t)sTamper->Tamper | (uint32_t)sTamper->Trigger | (uint32_t)sTamper->Filter |\
 542              		.loc 1 419 0
 543 001a 0B68     		ldr	r3, [r1]
 544 001c 4A68     		ldr	r2, [r1, #4]
 545 001e 43EA0204 		orr	r4, r3, r2
 546 0022 8A68     		ldr	r2, [r1, #8]
 547 0024 1443     		orrs	r4, r4, r2
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 548              		.loc 1 420 0
ARM GAS  /tmp/ccUVFA1p.s 			page 18


 549 0026 CA68     		ldr	r2, [r1, #12]
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 550              		.loc 1 419 0
 551 0028 1443     		orrs	r4, r4, r2
 552              		.loc 1 420 0
 553 002a 0A69     		ldr	r2, [r1, #16]
 554 002c 1443     		orrs	r4, r4, r2
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->TamperPullUp | sTamper->TimeStampOnTamperDetection);
 555              		.loc 1 421 0
 556 002e 4A69     		ldr	r2, [r1, #20]
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 557              		.loc 1 420 0
 558 0030 1443     		orrs	r4, r4, r2
 559              		.loc 1 421 0
 560 0032 8A69     		ldr	r2, [r1, #24]
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 561              		.loc 1 419 0
 562 0034 2243     		orrs	r2, r2, r4
 563              	.LVL47:
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->TAFCR &= (uint32_t)~((uint32_t)sTamper->Tamper | (uint32_t)(sTamper->Tamper << 1U
 564              		.loc 1 423 0
 565 0036 0468     		ldr	r4, [r0]
 566 0038 216C     		ldr	r1, [r4, #64]
 567              	.LVL48:
 568 003a 43EA4303 		orr	r3, r3, r3, lsl #1
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAFCR_TAMPFREQ | (uint32_t)RTC_TAFCR_TAMPFLT |
 569              		.loc 1 424 0
 570 003e 43F47F43 		orr	r3, r3, #65280
 571 0042 43F08003 		orr	r3, r3, #128
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAFCR_TAMPFREQ | (uint32_t)RTC_TAFCR_TAMPFLT |
 572              		.loc 1 423 0
 573 0046 21EA0303 		bic	r3, r1, r3
 574 004a 2364     		str	r3, [r4, #64]
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAFCR_TAMPPUDIS);
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->TAFCR |= tmpreg;
 575              		.loc 1 427 0
 576 004c 0168     		ldr	r1, [r0]
 577 004e 0B6C     		ldr	r3, [r1, #64]
 578 0050 1343     		orrs	r3, r3, r2
 579 0052 0B64     		str	r3, [r1, #64]
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the Tamper Interrupt in the RTC_TAFCR */
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->TAFCR |= (uint32_t)RTC_TAFCR_TAMPIE;
 580              		.loc 1 430 0
 581 0054 0268     		ldr	r2, [r0]
 582              	.LVL49:
 583 0056 136C     		ldr	r3, [r2, #64]
 584 0058 43F00403 		orr	r3, r3, #4
 585 005c 1364     		str	r3, [r2, #64]
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* RTC Tamper Interrupt Configuration: EXTI configuration */
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 586              		.loc 1 433 0
 587 005e 0A4B     		ldr	r3, .L31
 588 0060 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccUVFA1p.s 			page 19


 589 0062 42F40022 		orr	r2, r2, #524288
 590 0066 1A60     		str	r2, [r3]
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
 591              		.loc 1 435 0
 592 0068 9A68     		ldr	r2, [r3, #8]
 593 006a 42F40022 		orr	r2, r2, #524288
 594 006e 9A60     		str	r2, [r3, #8]
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 595              		.loc 1 437 0
 596 0070 0123     		movs	r3, #1
 597 0072 4377     		strb	r3, [r0, #29]
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 598              		.loc 1 440 0
 599 0074 0023     		movs	r3, #0
 600 0076 0377     		strb	r3, [r0, #28]
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 601              		.loc 1 442 0
 602 0078 1846     		mov	r0, r3
 603              	.LVL50:
 604 007a 01E0     		b	.L26
 605              	.LVL51:
 606              	.L28:
 607              	.LCFI14:
 608              		.cfi_def_cfa_offset 0
 609              		.cfi_restore 4
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 610              		.loc 1 409 0
 611 007c 0220     		movs	r0, #2
 612              	.LVL52:
 613 007e 7047     		bx	lr
 614              	.LVL53:
 615              	.L26:
 616              	.LCFI15:
 617              		.cfi_def_cfa_offset 4
 618              		.cfi_offset 4, -4
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 619              		.loc 1 443 0
 620 0080 5DF8044B 		ldr	r4, [sp], #4
 621              	.LCFI16:
 622              		.cfi_restore 4
 623              		.cfi_def_cfa_offset 0
 624 0084 7047     		bx	lr
 625              	.L32:
 626 0086 00BF     		.align	2
 627              	.L31:
 628 0088 00040140 		.word	1073808384
 629              		.cfi_endproc
 630              	.LFE128:
 632              		.section	.text.HAL_RTCEx_DeactivateTamper,"ax",%progbits
 633              		.align	2
 634              		.global	HAL_RTCEx_DeactivateTamper
 635              		.thumb
ARM GAS  /tmp/ccUVFA1p.s 			page 20


 636              		.thumb_func
 638              	HAL_RTCEx_DeactivateTamper:
 639              	.LFB129:
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Deactivate Tamper.
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  Tamper Selected tamper pin.
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be any combination of RTC_TAMPER_1, RTC_TAMPER_2 and RTC_TAMPER_3 (
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @note   (*) RTC_TAMPER_3 not present on all the devices
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTamper(RTC_HandleTypeDef *hrtc, uint32_t Tamper)
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 640              		.loc 1 454 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 645              	.LVL54:
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper));
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 646              		.loc 1 458 0
 647 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 648 0002 012B     		cmp	r3, #1
 649 0004 0ED0     		beq	.L35
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper));
 650              		.loc 1 454 0 discriminator 2
 651 0006 10B4     		push	{r4}
 652              	.LCFI17:
 653              		.cfi_def_cfa_offset 4
 654              		.cfi_offset 4, -4
 655              		.loc 1 458 0 discriminator 2
 656 0008 0122     		movs	r2, #1
 657 000a 0277     		strb	r2, [r0, #28]
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 658              		.loc 1 460 0 discriminator 2
 659 000c 0223     		movs	r3, #2
 660 000e 4377     		strb	r3, [r0, #29]
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the selected Tamper pin */
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->TAFCR &= (uint32_t)~Tamper;
 661              		.loc 1 463 0 discriminator 2
 662 0010 0468     		ldr	r4, [r0]
 663 0012 236C     		ldr	r3, [r4, #64]
 664 0014 23EA0101 		bic	r1, r3, r1
 665              	.LVL55:
 666 0018 2164     		str	r1, [r4, #64]
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 667              		.loc 1 465 0 discriminator 2
 668 001a 4277     		strb	r2, [r0, #29]
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
ARM GAS  /tmp/ccUVFA1p.s 			page 21


 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 669              		.loc 1 468 0 discriminator 2
 670 001c 0023     		movs	r3, #0
 671 001e 0377     		strb	r3, [r0, #28]
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 672              		.loc 1 470 0 discriminator 2
 673 0020 1846     		mov	r0, r3
 674              	.LVL56:
 675 0022 01E0     		b	.L34
 676              	.LVL57:
 677              	.L35:
 678              	.LCFI18:
 679              		.cfi_def_cfa_offset 0
 680              		.cfi_restore 4
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 681              		.loc 1 458 0
 682 0024 0220     		movs	r0, #2
 683              	.LVL58:
 684 0026 7047     		bx	lr
 685              	.LVL59:
 686              	.L34:
 687              	.LCFI19:
 688              		.cfi_def_cfa_offset 4
 689              		.cfi_offset 4, -4
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 690              		.loc 1 471 0
 691 0028 5DF8044B 		ldr	r4, [sp], #4
 692              	.LCFI20:
 693              		.cfi_restore 4
 694              		.cfi_def_cfa_offset 0
 695 002c 7047     		bx	lr
 696              		.cfi_endproc
 697              	.LFE129:
 699 002e 00BF     		.section	.text.HAL_RTCEx_TimeStampEventCallback,"ax",%progbits
 700              		.align	2
 701              		.weak	HAL_RTCEx_TimeStampEventCallback
 702              		.thumb
 703              		.thumb_func
 705              	HAL_RTCEx_TimeStampEventCallback:
 706              	.LFB131:
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Handle TimeStamp interrupt request.
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval None
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** void HAL_RTCEx_TamperTimeStampIRQHandler(RTC_HandleTypeDef *hrtc)
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {  
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the TimeStamp interrupt source enable status */
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(__HAL_RTC_TIMESTAMP_GET_IT_SOURCE(hrtc, RTC_IT_TS) != RESET)
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Get the pending status of the TIMESTAMP Interrupt */
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) != RESET)
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* TIMESTAMP callback */ 
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       HAL_RTCEx_TimeStampEventCallback(hrtc);
ARM GAS  /tmp/ccUVFA1p.s 			page 22


 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP interrupt pending bit */
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc,RTC_FLAG_TSF);
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the Tamper interrupts source enable status */
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP))
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    /* Get the pending status of the Tamper1 Interrupt */
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F) != RESET)
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Tamper1 callback */ 
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper1EventCallback(hrtc);
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Clear the Tamper1 interrupt pending bit */
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP1F);
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the Tamper interrupts source enable status */
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP))
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    /* Get the pending status of the Tamper2 Interrupt */
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F) != RESET)
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Tamper2 callback */ 
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper2EventCallback(hrtc);
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Clear the Tamper2 interrupt pending bit */
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER3_SUPPORT)
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the Tamper interrupts source enable status */
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP))
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    /* Get the pending status of the Tamper3 Interrupt */
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F) != RESET)
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Tamper3 callback */
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper3EventCallback(hrtc);
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Clear the Tamper3 interrupt pending bit */
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER3_SUPPORT */
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccUVFA1p.s 			page 23


 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  TimeStamp callback. 
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval None
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_TimeStampEventCallback(RTC_HandleTypeDef *hrtc)
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 707              		.loc 1 551 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 711              		@ link register save eliminated.
 712              	.LVL60:
 713 0000 7047     		bx	lr
 714              		.cfi_endproc
 715              	.LFE131:
 717 0002 00BF     		.section	.text.HAL_RTCEx_Tamper1EventCallback,"ax",%progbits
 718              		.align	2
 719              		.weak	HAL_RTCEx_Tamper1EventCallback
 720              		.thumb
 721              		.thumb_func
 723              	HAL_RTCEx_Tamper1EventCallback:
 724              	.LFB132:
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             the HAL_RTCEx_TimeStampEventCallback could be implemented in the user file
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Tamper 1 callback. 
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval None
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper1EventCallback(RTC_HandleTypeDef *hrtc)
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 725              		.loc 1 566 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              		@ link register save eliminated.
 730              	.LVL61:
 731 0000 7047     		bx	lr
 732              		.cfi_endproc
 733              	.LFE132:
 735 0002 00BF     		.section	.text.HAL_RTCEx_Tamper2EventCallback,"ax",%progbits
 736              		.align	2
 737              		.weak	HAL_RTCEx_Tamper2EventCallback
 738              		.thumb
 739              		.thumb_func
 741              	HAL_RTCEx_Tamper2EventCallback:
 742              	.LFB133:
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccUVFA1p.s 			page 24


 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper1EventCallback could be implemented in the user file
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    */
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Tamper 2 callback. 
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval None
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper2EventCallback(RTC_HandleTypeDef *hrtc)
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 743              		.loc 1 581 0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 748              	.LVL62:
 749 0000 7047     		bx	lr
 750              		.cfi_endproc
 751              	.LFE133:
 753 0002 00BF     		.section	.text.HAL_RTCEx_Tamper3EventCallback,"ax",%progbits
 754              		.align	2
 755              		.weak	HAL_RTCEx_Tamper3EventCallback
 756              		.thumb
 757              		.thumb_func
 759              	HAL_RTCEx_Tamper3EventCallback:
 760              	.LFB134:
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper2EventCallback could be implemented in the user file
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    */
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER3_SUPPORT)
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Tamper 3 callback. 
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval None
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper3EventCallback(RTC_HandleTypeDef *hrtc)
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 761              		.loc 1 597 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765              		@ link register save eliminated.
 766              	.LVL63:
 767 0000 7047     		bx	lr
 768              		.cfi_endproc
 769              	.LFE134:
 771 0002 00BF     		.section	.text.HAL_RTCEx_TamperTimeStampIRQHandler,"ax",%progbits
 772              		.align	2
 773              		.global	HAL_RTCEx_TamperTimeStampIRQHandler
 774              		.thumb
ARM GAS  /tmp/ccUVFA1p.s 			page 25


 775              		.thumb_func
 777              	HAL_RTCEx_TamperTimeStampIRQHandler:
 778              	.LFB130:
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the TimeStamp interrupt source enable status */
 779              		.loc 1 479 0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 0
 782              		@ frame_needed = 0, uses_anonymous_args = 0
 783              	.LVL64:
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the TimeStamp interrupt source enable status */
 784              		.loc 1 479 0
 785 0000 10B5     		push	{r4, lr}
 786              	.LCFI21:
 787              		.cfi_def_cfa_offset 8
 788              		.cfi_offset 4, -8
 789              		.cfi_offset 14, -4
 790 0002 0446     		mov	r4, r0
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 791              		.loc 1 481 0
 792 0004 0368     		ldr	r3, [r0]
 793 0006 9A68     		ldr	r2, [r3, #8]
 794 0008 12F4004F 		tst	r2, #32768
 795 000c 0BD0     		beq	.L43
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 796              		.loc 1 484 0
 797 000e DB68     		ldr	r3, [r3, #12]
 798 0010 13F4006F 		tst	r3, #2048
 799 0014 07D0     		beq	.L43
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
 800              		.loc 1 487 0
 801 0016 FFF7FEFF 		bl	HAL_RTCEx_TimeStampEventCallback
 802              	.LVL65:
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 803              		.loc 1 490 0
 804 001a 2268     		ldr	r2, [r4]
 805 001c D368     		ldr	r3, [r2, #12]
 806 001e DBB2     		uxtb	r3, r3
 807 0020 63F40863 		orn	r3, r3, #2176
 808 0024 D360     		str	r3, [r2, #12]
 809              	.L43:
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 810              		.loc 1 495 0
 811 0026 2368     		ldr	r3, [r4]
 812 0028 1A6C     		ldr	r2, [r3, #64]
 813 002a 12F0040F 		tst	r2, #4
 814 002e 0CD0     		beq	.L44
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 815              		.loc 1 498 0
 816 0030 DB68     		ldr	r3, [r3, #12]
 817 0032 13F4005F 		tst	r3, #8192
 818 0036 08D0     		beq	.L44
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
 819              		.loc 1 501 0
 820 0038 2046     		mov	r0, r4
 821 003a FFF7FEFF 		bl	HAL_RTCEx_Tamper1EventCallback
 822              	.LVL66:
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
ARM GAS  /tmp/ccUVFA1p.s 			page 26


 823              		.loc 1 504 0
 824 003e 2268     		ldr	r2, [r4]
 825 0040 D368     		ldr	r3, [r2, #12]
 826 0042 DBB2     		uxtb	r3, r3
 827 0044 63F40253 		orn	r3, r3, #8320
 828 0048 D360     		str	r3, [r2, #12]
 829              	.L44:
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 830              		.loc 1 509 0
 831 004a 2368     		ldr	r3, [r4]
 832 004c 1A6C     		ldr	r2, [r3, #64]
 833 004e 12F0040F 		tst	r2, #4
 834 0052 0CD0     		beq	.L45
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 835              		.loc 1 512 0
 836 0054 DB68     		ldr	r3, [r3, #12]
 837 0056 13F4804F 		tst	r3, #16384
 838 005a 08D0     		beq	.L45
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
 839              		.loc 1 515 0
 840 005c 2046     		mov	r0, r4
 841 005e FFF7FEFF 		bl	HAL_RTCEx_Tamper2EventCallback
 842              	.LVL67:
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 843              		.loc 1 518 0
 844 0062 2268     		ldr	r2, [r4]
 845 0064 D368     		ldr	r3, [r2, #12]
 846 0066 DBB2     		uxtb	r3, r3
 847 0068 63F48143 		orn	r3, r3, #16512
 848 006c D360     		str	r3, [r2, #12]
 849              	.L45:
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 850              		.loc 1 524 0
 851 006e 2368     		ldr	r3, [r4]
 852 0070 1A6C     		ldr	r2, [r3, #64]
 853 0072 12F0040F 		tst	r2, #4
 854 0076 12D0     		beq	.L46
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 855              		.loc 1 527 0
 856 0078 DB68     		ldr	r3, [r3, #12]
 857 007a 13F4004F 		tst	r3, #32768
 858 007e 0ED0     		beq	.L46
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 859              		.loc 1 530 0
 860 0080 2046     		mov	r0, r4
 861 0082 FFF7FEFF 		bl	HAL_RTCEx_Tamper3EventCallback
 862              	.LVL68:
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 863              		.loc 1 533 0
 864 0086 2268     		ldr	r2, [r4]
 865 0088 D368     		ldr	r3, [r2, #12]
 866 008a DBB2     		uxtb	r3, r3
 867 008c 43F07F43 		orr	r3, r3, #-16777216
 868 0090 43F47F03 		orr	r3, r3, #16711680
 869 0094 43F4FE43 		orr	r3, r3, #32512
 870 0098 43F07F03 		orr	r3, r3, #127
 871 009c D360     		str	r3, [r2, #12]
ARM GAS  /tmp/ccUVFA1p.s 			page 27


 872              	.L46:
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 873              		.loc 1 539 0
 874 009e 4FF40022 		mov	r2, #524288
 875 00a2 024B     		ldr	r3, .L48
 876 00a4 5A61     		str	r2, [r3, #20]
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 877              		.loc 1 542 0
 878 00a6 0123     		movs	r3, #1
 879 00a8 6377     		strb	r3, [r4, #29]
 880 00aa 10BD     		pop	{r4, pc}
 881              	.LVL69:
 882              	.L49:
 883              		.align	2
 884              	.L48:
 885 00ac 00040140 		.word	1073808384
 886              		.cfi_endproc
 887              	.LFE130:
 889              		.section	.text.HAL_RTCEx_PollForTimeStampEvent,"ax",%progbits
 890              		.align	2
 891              		.global	HAL_RTCEx_PollForTimeStampEvent
 892              		.thumb
 893              		.thumb_func
 895              	HAL_RTCEx_PollForTimeStampEvent:
 896              	.LFB135:
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper3EventCallback could be implemented in the user file
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    */
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER3_SUPPORT */
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Handle TimeStamp polling request.
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTimeStampEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 897              		.loc 1 614 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
 900              		@ frame_needed = 0, uses_anonymous_args = 0
 901              	.LVL70:
 902 0000 70B5     		push	{r4, r5, r6, lr}
 903              	.LCFI22:
 904              		.cfi_def_cfa_offset 16
 905              		.cfi_offset 4, -16
 906              		.cfi_offset 5, -12
 907              		.cfi_offset 6, -8
 908              		.cfi_offset 14, -4
 909 0002 0446     		mov	r4, r0
 910 0004 0D46     		mov	r5, r1
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
ARM GAS  /tmp/ccUVFA1p.s 			page 28


 911              		.loc 1 615 0
 912 0006 FFF7FEFF 		bl	HAL_GetTick
 913              	.LVL71:
 914 000a 0646     		mov	r6, r0
 915              	.LVL72:
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   while(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) == RESET)
 916              		.loc 1 617 0
 917 000c 18E0     		b	.L54
 918              	.LVL73:
 919              	.L56:
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSOVF) != RESET)
 920              		.loc 1 619 0
 921 000e DA68     		ldr	r2, [r3, #12]
 922 0010 12F4805F 		tst	r2, #4096
 923 0014 08D0     		beq	.L52
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP OverRun Flag */
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSOVF);
 924              		.loc 1 622 0
 925 0016 DA68     		ldr	r2, [r3, #12]
 926 0018 D2B2     		uxtb	r2, r2
 927 001a 62F48452 		orn	r2, r2, #4224
 928 001e DA60     		str	r2, [r3, #12]
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Change TIMESTAMP state */
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 929              		.loc 1 625 0
 930 0020 0423     		movs	r3, #4
 931 0022 6377     		strb	r3, [r4, #29]
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       return HAL_ERROR;
 932              		.loc 1 627 0
 933 0024 0120     		movs	r0, #1
 934 0026 70BD     		pop	{r4, r5, r6, pc}
 935              	.LVL74:
 936              	.L52:
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 937              		.loc 1 630 0
 938 0028 B5F1FF3F 		cmp	r5, #-1
 939 002c 08D0     		beq	.L54
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 940              		.loc 1 632 0
 941 002e 25B1     		cbz	r5, .L55
 942              		.loc 1 632 0 is_stmt 0 discriminator 1
 943 0030 FFF7FEFF 		bl	HAL_GetTick
 944              	.LVL75:
 945 0034 801B     		subs	r0, r0, r6
 946 0036 A842     		cmp	r0, r5
 947 0038 02D9     		bls	.L54
 948              	.L55:
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
ARM GAS  /tmp/ccUVFA1p.s 			page 29


 949              		.loc 1 634 0 is_stmt 1
 950 003a 0320     		movs	r0, #3
 951 003c 6077     		strb	r0, [r4, #29]
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 952              		.loc 1 635 0
 953 003e 70BD     		pop	{r4, r5, r6, pc}
 954              	.LVL76:
 955              	.L54:
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 956              		.loc 1 617 0
 957 0040 2368     		ldr	r3, [r4]
 958 0042 DA68     		ldr	r2, [r3, #12]
 959 0044 12F4006F 		tst	r2, #2048
 960 0048 E1D0     		beq	.L56
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 961              		.loc 1 641 0
 962 004a 0123     		movs	r3, #1
 963 004c 6377     		strb	r3, [r4, #29]
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 964              		.loc 1 643 0
 965 004e 0020     		movs	r0, #0
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 966              		.loc 1 644 0
 967 0050 70BD     		pop	{r4, r5, r6, pc}
 968              		.cfi_endproc
 969              	.LFE135:
 971              		.section	.text.HAL_RTCEx_PollForTamper1Event,"ax",%progbits
 972              		.align	2
 973              		.global	HAL_RTCEx_PollForTamper1Event
 974              		.thumb
 975              		.thumb_func
 977              	HAL_RTCEx_PollForTamper1Event:
 978              	.LFB136:
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Handle Tamper 1 Polling.
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper1Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {  
 979              		.loc 1 653 0
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 0
 982              		@ frame_needed = 0, uses_anonymous_args = 0
 983              	.LVL77:
 984 0000 70B5     		push	{r4, r5, r6, lr}
 985              	.LCFI23:
 986              		.cfi_def_cfa_offset 16
 987              		.cfi_offset 4, -16
ARM GAS  /tmp/ccUVFA1p.s 			page 30


 988              		.cfi_offset 5, -12
 989              		.cfi_offset 6, -8
 990              		.cfi_offset 14, -4
 991 0002 0446     		mov	r4, r0
 992 0004 0D46     		mov	r5, r1
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 993              		.loc 1 654 0
 994 0006 FFF7FEFF 		bl	HAL_GetTick
 995              	.LVL78:
 996 000a 0646     		mov	r6, r0
 997              	.LVL79:
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc,RTC_FLAG_TAMP1F)== RESET)
 998              		.loc 1 657 0
 999 000c 0BE0     		b	.L60
 1000              	.LVL80:
 1001              	.L63:
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1002              		.loc 1 659 0
 1003 000e B5F1FF3F 		cmp	r5, #-1
 1004 0012 08D0     		beq	.L60
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 1005              		.loc 1 661 0
 1006 0014 25B1     		cbz	r5, .L61
 1007              		.loc 1 661 0 is_stmt 0 discriminator 1
 1008 0016 FFF7FEFF 		bl	HAL_GetTick
 1009              	.LVL81:
 1010 001a 801B     		subs	r0, r0, r6
 1011 001c A842     		cmp	r0, r5
 1012 001e 02D9     		bls	.L60
 1013              	.L61:
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1014              		.loc 1 663 0 is_stmt 1
 1015 0020 0320     		movs	r0, #3
 1016 0022 6077     		strb	r0, [r4, #29]
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1017              		.loc 1 664 0
 1018 0024 70BD     		pop	{r4, r5, r6, pc}
 1019              	.LVL82:
 1020              	.L60:
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 1021              		.loc 1 657 0
 1022 0026 2368     		ldr	r3, [r4]
 1023 0028 DA68     		ldr	r2, [r3, #12]
 1024 002a 12F4005F 		tst	r2, #8192
 1025 002e EED0     		beq	.L63
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP1F);
 1026              		.loc 1 670 0
ARM GAS  /tmp/ccUVFA1p.s 			page 31


 1027 0030 DA68     		ldr	r2, [r3, #12]
 1028 0032 D2B2     		uxtb	r2, r2
 1029 0034 62F40252 		orn	r2, r2, #8320
 1030 0038 DA60     		str	r2, [r3, #12]
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1031              		.loc 1 673 0
 1032 003a 0123     		movs	r3, #1
 1033 003c 6377     		strb	r3, [r4, #29]
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 1034              		.loc 1 675 0
 1035 003e 0020     		movs	r0, #0
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1036              		.loc 1 676 0
 1037 0040 70BD     		pop	{r4, r5, r6, pc}
 1038              		.cfi_endproc
 1039              	.LFE136:
 1041 0042 00BF     		.section	.text.HAL_RTCEx_PollForTamper2Event,"ax",%progbits
 1042              		.align	2
 1043              		.global	HAL_RTCEx_PollForTamper2Event
 1044              		.thumb
 1045              		.thumb_func
 1047              	HAL_RTCEx_PollForTamper2Event:
 1048              	.LFB137:
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Handle Tamper 2 Polling.
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper2Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {  
 1049              		.loc 1 685 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 1053              	.LVL83:
 1054 0000 70B5     		push	{r4, r5, r6, lr}
 1055              	.LCFI24:
 1056              		.cfi_def_cfa_offset 16
 1057              		.cfi_offset 4, -16
 1058              		.cfi_offset 5, -12
 1059              		.cfi_offset 6, -8
 1060              		.cfi_offset 14, -4
 1061 0002 0446     		mov	r4, r0
 1062 0004 0D46     		mov	r5, r1
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 1063              		.loc 1 686 0
 1064 0006 FFF7FEFF 		bl	HAL_GetTick
 1065              	.LVL84:
 1066 000a 0646     		mov	r6, r0
 1067              	.LVL85:
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
ARM GAS  /tmp/ccUVFA1p.s 			page 32


 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc,RTC_FLAG_TAMP2F) == RESET)
 1068              		.loc 1 689 0
 1069 000c 0BE0     		b	.L67
 1070              	.LVL86:
 1071              	.L70:
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1072              		.loc 1 691 0
 1073 000e B5F1FF3F 		cmp	r5, #-1
 1074 0012 08D0     		beq	.L67
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 1075              		.loc 1 693 0
 1076 0014 25B1     		cbz	r5, .L68
 1077              		.loc 1 693 0 is_stmt 0 discriminator 1
 1078 0016 FFF7FEFF 		bl	HAL_GetTick
 1079              	.LVL87:
 1080 001a 801B     		subs	r0, r0, r6
 1081 001c A842     		cmp	r0, r5
 1082 001e 02D9     		bls	.L67
 1083              	.L68:
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1084              		.loc 1 695 0 is_stmt 1
 1085 0020 0320     		movs	r0, #3
 1086 0022 6077     		strb	r0, [r4, #29]
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1087              		.loc 1 696 0
 1088 0024 70BD     		pop	{r4, r5, r6, pc}
 1089              	.LVL88:
 1090              	.L67:
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 1091              		.loc 1 689 0
 1092 0026 2368     		ldr	r3, [r4]
 1093 0028 DA68     		ldr	r2, [r3, #12]
 1094 002a 12F4804F 		tst	r2, #16384
 1095 002e EED0     		beq	.L70
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP2F);
 1096              		.loc 1 702 0
 1097 0030 DA68     		ldr	r2, [r3, #12]
 1098 0032 D2B2     		uxtb	r2, r2
 1099 0034 62F48142 		orn	r2, r2, #16512
 1100 0038 DA60     		str	r2, [r3, #12]
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1101              		.loc 1 705 0
 1102 003a 0123     		movs	r3, #1
 1103 003c 6377     		strb	r3, [r4, #29]
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 1104              		.loc 1 707 0
ARM GAS  /tmp/ccUVFA1p.s 			page 33


 1105 003e 0020     		movs	r0, #0
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1106              		.loc 1 708 0
 1107 0040 70BD     		pop	{r4, r5, r6, pc}
 1108              		.cfi_endproc
 1109              	.LFE137:
 1111 0042 00BF     		.section	.text.HAL_RTCEx_PollForTamper3Event,"ax",%progbits
 1112              		.align	2
 1113              		.global	HAL_RTCEx_PollForTamper3Event
 1114              		.thumb
 1115              		.thumb_func
 1117              	HAL_RTCEx_PollForTamper3Event:
 1118              	.LFB138:
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER3_SUPPORT)
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Handle Tamper 3 Polling.
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper3Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {  
 1119              		.loc 1 718 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 0
 1122              		@ frame_needed = 0, uses_anonymous_args = 0
 1123              	.LVL89:
 1124 0000 70B5     		push	{r4, r5, r6, lr}
 1125              	.LCFI25:
 1126              		.cfi_def_cfa_offset 16
 1127              		.cfi_offset 4, -16
 1128              		.cfi_offset 5, -12
 1129              		.cfi_offset 6, -8
 1130              		.cfi_offset 14, -4
 1131 0002 0446     		mov	r4, r0
 1132 0004 0D46     		mov	r5, r1
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 1133              		.loc 1 719 0
 1134 0006 FFF7FEFF 		bl	HAL_GetTick
 1135              	.LVL90:
 1136 000a 0646     		mov	r6, r0
 1137              	.LVL91:
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc,RTC_FLAG_TAMP3F) == RESET)
 1138              		.loc 1 722 0
 1139 000c 0BE0     		b	.L74
 1140              	.LVL92:
 1141              	.L77:
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1142              		.loc 1 724 0
 1143 000e B5F1FF3F 		cmp	r5, #-1
 1144 0012 08D0     		beq	.L74
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
ARM GAS  /tmp/ccUVFA1p.s 			page 34


 1145              		.loc 1 726 0
 1146 0014 25B1     		cbz	r5, .L75
 1147              		.loc 1 726 0 is_stmt 0 discriminator 1
 1148 0016 FFF7FEFF 		bl	HAL_GetTick
 1149              	.LVL93:
 1150 001a 801B     		subs	r0, r0, r6
 1151 001c A842     		cmp	r0, r5
 1152 001e 02D9     		bls	.L74
 1153              	.L75:
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1154              		.loc 1 728 0 is_stmt 1
 1155 0020 0320     		movs	r0, #3
 1156 0022 6077     		strb	r0, [r4, #29]
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1157              		.loc 1 729 0
 1158 0024 70BD     		pop	{r4, r5, r6, pc}
 1159              	.LVL94:
 1160              	.L74:
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 1161              		.loc 1 722 0
 1162 0026 2368     		ldr	r3, [r4]
 1163 0028 DA68     		ldr	r2, [r3, #12]
 1164 002a 12F4004F 		tst	r2, #32768
 1165 002e EED0     		beq	.L77
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP3F);
 1166              		.loc 1 735 0
 1167 0030 DA68     		ldr	r2, [r3, #12]
 1168 0032 D2B2     		uxtb	r2, r2
 1169 0034 42F07F42 		orr	r2, r2, #-16777216
 1170 0038 42F47F02 		orr	r2, r2, #16711680
 1171 003c 42F4FE42 		orr	r2, r2, #32512
 1172 0040 42F07F02 		orr	r2, r2, #127
 1173 0044 DA60     		str	r2, [r3, #12]
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1174              		.loc 1 738 0
 1175 0046 0123     		movs	r3, #1
 1176 0048 6377     		strb	r3, [r4, #29]
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 1177              		.loc 1 740 0
 1178 004a 0020     		movs	r0, #0
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1179              		.loc 1 741 0
 1180 004c 70BD     		pop	{r4, r5, r6, pc}
 1181              		.cfi_endproc
 1182              	.LFE138:
 1184 004e 00BF     		.section	.text.HAL_RTCEx_SetWakeUpTimer,"ax",%progbits
 1185              		.align	2
 1186              		.global	HAL_RTCEx_SetWakeUpTimer
ARM GAS  /tmp/ccUVFA1p.s 			page 35


 1187              		.thumb
 1188              		.thumb_func
 1190              	HAL_RTCEx_SetWakeUpTimer:
 1191              	.LFB139:
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER3_SUPPORT */
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @}
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group2
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief    RTC Wake-up functions
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** @verbatim   
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  ===============================================================================
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                         ##### RTC Wake-up functions #####
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  ===============================================================================  
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure Wake-up feature
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** @endverbatim
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @{
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Set wake up timer.
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock  
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint32_
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 1192              		.loc 1 770 0
 1193              		.cfi_startproc
 1194              		@ args = 0, pretend = 0, frame = 0
 1195              		@ frame_needed = 0, uses_anonymous_args = 0
 1196              	.LVL95:
 1197 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1198              	.LCFI26:
 1199              		.cfi_def_cfa_offset 24
 1200              		.cfi_offset 3, -24
 1201              		.cfi_offset 4, -20
 1202              		.cfi_offset 5, -16
 1203              		.cfi_offset 6, -12
 1204              		.cfi_offset 7, -8
 1205              		.cfi_offset 14, -4
 1206              	.LVL96:
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1207              		.loc 1 778 0
ARM GAS  /tmp/ccUVFA1p.s 			page 36


 1208 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1209 0004 012B     		cmp	r3, #1
 1210 0006 5BD0     		beq	.L86
 1211 0008 1546     		mov	r5, r2
 1212 000a 0E46     		mov	r6, r1
 1213 000c 0446     		mov	r4, r0
 1214              		.loc 1 778 0 is_stmt 0 discriminator 2
 1215 000e 0123     		movs	r3, #1
 1216 0010 0377     		strb	r3, [r0, #28]
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1217              		.loc 1 780 0 is_stmt 1 discriminator 2
 1218 0012 0223     		movs	r3, #2
 1219 0014 4377     		strb	r3, [r0, #29]
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1220              		.loc 1 783 0 discriminator 2
 1221 0016 0368     		ldr	r3, [r0]
 1222 0018 CA22     		movs	r2, #202
 1223              	.LVL97:
 1224 001a 5A62     		str	r2, [r3, #36]
 1225 001c 0368     		ldr	r3, [r0]
 1226 001e 5322     		movs	r2, #83
 1227 0020 5A62     		str	r2, [r3, #36]
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /*Check RTC WUTWF flag is reset only when wake up timer enabled*/
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if((hrtc->Instance->CR & RTC_CR_WUTE) != RESET){
 1228              		.loc 1 786 0 discriminator 2
 1229 0022 0368     		ldr	r3, [r0]
 1230 0024 9B68     		ldr	r3, [r3, #8]
 1231 0026 13F4806F 		tst	r3, #1024
 1232 002a 16D0     		beq	.L81
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
 1233              		.loc 1 787 0
 1234 002c FFF7FEFF 		bl	HAL_GetTick
 1235              	.LVL98:
 1236 0030 0746     		mov	r7, r0
 1237              	.LVL99:
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    /* Wait till RTC WUTWF flag is reset and if Time out is reached exit */
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == SET)
 1238              		.loc 1 790 0
 1239 0032 0DE0     		b	.L82
 1240              	.LVL100:
 1241              	.L83:
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    {
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 1242              		.loc 1 792 0
 1243 0034 FFF7FEFF 		bl	HAL_GetTick
 1244              	.LVL101:
 1245 0038 C01B     		subs	r0, r0, r7
 1246 003a B0F57A7F 		cmp	r0, #1000
 1247 003e 07D9     		bls	.L82
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        /* Enable the write protection for RTC registers */
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
ARM GAS  /tmp/ccUVFA1p.s 			page 37


 1248              		.loc 1 795 0
 1249 0040 2368     		ldr	r3, [r4]
 1250 0042 FF22     		movs	r2, #255
 1251 0044 5A62     		str	r2, [r3, #36]
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1252              		.loc 1 797 0
 1253 0046 0320     		movs	r0, #3
 1254 0048 6077     		strb	r0, [r4, #29]
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        /* Process Unlocked */ 
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        __HAL_UNLOCK(hrtc);
 1255              		.loc 1 800 0
 1256 004a 0023     		movs	r3, #0
 1257 004c 2377     		strb	r3, [r4, #28]
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        return HAL_TIMEOUT;
 1258              		.loc 1 802 0
 1259 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1260              	.LVL102:
 1261              	.L82:
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    {
 1262              		.loc 1 790 0
 1263 0050 2368     		ldr	r3, [r4]
 1264 0052 DB68     		ldr	r3, [r3, #12]
 1265 0054 13F0040F 		tst	r3, #4
 1266 0058 ECD1     		bne	.L83
 1267              	.LVL103:
 1268              	.L81:
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 1269              		.loc 1 807 0
 1270 005a 2268     		ldr	r2, [r4]
 1271 005c 9368     		ldr	r3, [r2, #8]
 1272 005e 23F48063 		bic	r3, r3, #1024
 1273 0062 9360     		str	r3, [r2, #8]
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****      
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 1274              		.loc 1 809 0
 1275 0064 FFF7FEFF 		bl	HAL_GetTick
 1276              	.LVL104:
 1277 0068 0746     		mov	r7, r0
 1278              	.LVL105:
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == RESET)
 1279              		.loc 1 812 0
 1280 006a 0DE0     		b	.L84
 1281              	.LVL106:
 1282              	.L85:
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 1283              		.loc 1 814 0
 1284 006c FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccUVFA1p.s 			page 38


 1285              	.LVL107:
 1286 0070 C01B     		subs	r0, r0, r7
 1287 0072 B0F57A7F 		cmp	r0, #1000
 1288 0076 07D9     		bls	.L84
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1289              		.loc 1 817 0
 1290 0078 2368     		ldr	r3, [r4]
 1291 007a FF22     		movs	r2, #255
 1292 007c 5A62     		str	r2, [r3, #36]
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1293              		.loc 1 819 0
 1294 007e 0320     		movs	r0, #3
 1295 0080 6077     		strb	r0, [r4, #29]
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Process Unlocked */
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 1296              		.loc 1 822 0
 1297 0082 0023     		movs	r3, #0
 1298 0084 2377     		strb	r3, [r4, #28]
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 1299              		.loc 1 824 0
 1300 0086 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1301              	.LVL108:
 1302              	.L84:
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 1303              		.loc 1 812 0
 1304 0088 2368     		ldr	r3, [r4]
 1305 008a D868     		ldr	r0, [r3, #12]
 1306 008c 10F0040F 		tst	r0, #4
 1307 0090 ECD0     		beq	.L85
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_WUCKSEL;
 1308              		.loc 1 829 0
 1309 0092 9A68     		ldr	r2, [r3, #8]
 1310 0094 22F00702 		bic	r2, r2, #7
 1311 0098 9A60     		str	r2, [r3, #8]
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the clock source */
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)WakeUpClock;
 1312              		.loc 1 832 0
 1313 009a 2368     		ldr	r3, [r4]
 1314 009c 9A68     		ldr	r2, [r3, #8]
 1315 009e 1543     		orrs	r5, r5, r2
 1316              	.LVL109:
 1317 00a0 9D60     		str	r5, [r3, #8]
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 1318              		.loc 1 835 0
 1319 00a2 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccUVFA1p.s 			page 39


 1320 00a4 5E61     		str	r6, [r3, #20]
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    /* Enable the Wakeup Timer */
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
 1321              		.loc 1 838 0
 1322 00a6 2268     		ldr	r2, [r4]
 1323 00a8 9368     		ldr	r3, [r2, #8]
 1324 00aa 43F48063 		orr	r3, r3, #1024
 1325 00ae 9360     		str	r3, [r2, #8]
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1326              		.loc 1 841 0
 1327 00b0 2368     		ldr	r3, [r4]
 1328 00b2 FF22     		movs	r2, #255
 1329 00b4 5A62     		str	r2, [r3, #36]
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1330              		.loc 1 843 0
 1331 00b6 0123     		movs	r3, #1
 1332 00b8 6377     		strb	r3, [r4, #29]
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1333              		.loc 1 846 0
 1334 00ba 0020     		movs	r0, #0
 1335 00bc 2077     		strb	r0, [r4, #28]
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 1336              		.loc 1 848 0
 1337 00be F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1338              	.LVL110:
 1339              	.L86:
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 1340              		.loc 1 778 0
 1341 00c0 0220     		movs	r0, #2
 1342              	.LVL111:
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1343              		.loc 1 849 0
 1344 00c2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1345              		.cfi_endproc
 1346              	.LFE139:
 1348              		.section	.text.HAL_RTCEx_SetWakeUpTimer_IT,"ax",%progbits
 1349              		.align	2
 1350              		.global	HAL_RTCEx_SetWakeUpTimer_IT
 1351              		.thumb
 1352              		.thumb_func
 1354              	HAL_RTCEx_SetWakeUpTimer_IT:
 1355              	.LFB140:
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Set wake up timer with interrupt.
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock  
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
ARM GAS  /tmp/ccUVFA1p.s 			page 40


 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer_IT(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 1356              		.loc 1 859 0
 1357              		.cfi_startproc
 1358              		@ args = 0, pretend = 0, frame = 0
 1359              		@ frame_needed = 0, uses_anonymous_args = 0
 1360              	.LVL112:
 1361 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1362              	.LCFI27:
 1363              		.cfi_def_cfa_offset 24
 1364              		.cfi_offset 3, -24
 1365              		.cfi_offset 4, -20
 1366              		.cfi_offset 5, -16
 1367              		.cfi_offset 6, -12
 1368              		.cfi_offset 7, -8
 1369              		.cfi_offset 14, -4
 1370              	.LVL113:
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1371              		.loc 1 867 0
 1372 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1373 0004 012B     		cmp	r3, #1
 1374 0006 6FD0     		beq	.L95
 1375 0008 1546     		mov	r5, r2
 1376 000a 0E46     		mov	r6, r1
 1377 000c 0446     		mov	r4, r0
 1378              		.loc 1 867 0 is_stmt 0 discriminator 2
 1379 000e 0123     		movs	r3, #1
 1380 0010 0377     		strb	r3, [r0, #28]
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1381              		.loc 1 869 0 is_stmt 1 discriminator 2
 1382 0012 0223     		movs	r3, #2
 1383 0014 4377     		strb	r3, [r0, #29]
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1384              		.loc 1 872 0 discriminator 2
 1385 0016 0368     		ldr	r3, [r0]
 1386 0018 CA22     		movs	r2, #202
 1387              	.LVL114:
 1388 001a 5A62     		str	r2, [r3, #36]
 1389 001c 0368     		ldr	r3, [r0]
 1390 001e 5322     		movs	r2, #83
 1391 0020 5A62     		str	r2, [r3, #36]
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /*Check RTC WUTWF flag is reset only when wake up timer enabled*/
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if((hrtc->Instance->CR & RTC_CR_WUTE) != RESET){
 1392              		.loc 1 875 0 discriminator 2
 1393 0022 0368     		ldr	r3, [r0]
 1394 0024 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccUVFA1p.s 			page 41


 1395 0026 13F4806F 		tst	r3, #1024
 1396 002a 16D0     		beq	.L90
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
 1397              		.loc 1 876 0
 1398 002c FFF7FEFF 		bl	HAL_GetTick
 1399              	.LVL115:
 1400 0030 0746     		mov	r7, r0
 1401              	.LVL116:
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    /* Wait till RTC WUTWF flag is reset and if Time out is reached exit */
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == SET)
 1402              		.loc 1 879 0
 1403 0032 0DE0     		b	.L91
 1404              	.LVL117:
 1405              	.L92:
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    {
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 1406              		.loc 1 881 0
 1407 0034 FFF7FEFF 		bl	HAL_GetTick
 1408              	.LVL118:
 1409 0038 C01B     		subs	r0, r0, r7
 1410 003a B0F57A7F 		cmp	r0, #1000
 1411 003e 07D9     		bls	.L91
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        /* Enable the write protection for RTC registers */
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1412              		.loc 1 884 0
 1413 0040 2368     		ldr	r3, [r4]
 1414 0042 FF22     		movs	r2, #255
 1415 0044 5A62     		str	r2, [r3, #36]
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1416              		.loc 1 886 0
 1417 0046 0320     		movs	r0, #3
 1418 0048 6077     		strb	r0, [r4, #29]
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        /* Process Unlocked */ 
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        __HAL_UNLOCK(hrtc);
 1419              		.loc 1 889 0
 1420 004a 0023     		movs	r3, #0
 1421 004c 2377     		strb	r3, [r4, #28]
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        return HAL_TIMEOUT;
 1422              		.loc 1 891 0
 1423 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1424              	.LVL119:
 1425              	.L91:
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    {
 1426              		.loc 1 879 0
 1427 0050 2368     		ldr	r3, [r4]
 1428 0052 DB68     		ldr	r3, [r3, #12]
 1429 0054 13F0040F 		tst	r3, #4
 1430 0058 ECD1     		bne	.L92
 1431              	.LVL120:
 1432              	.L90:
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
ARM GAS  /tmp/ccUVFA1p.s 			page 42


 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the Wake-Up timer */
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 1433              		.loc 1 897 0
 1434 005a 2268     		ldr	r2, [r4]
 1435 005c 9368     		ldr	r3, [r2, #8]
 1436 005e 23F48063 		bic	r3, r3, #1024
 1437 0062 9360     		str	r3, [r2, #8]
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear flag Wake-Up */
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 1438              		.loc 1 900 0
 1439 0064 2268     		ldr	r2, [r4]
 1440 0066 D368     		ldr	r3, [r2, #12]
 1441 0068 DBB2     		uxtb	r3, r3
 1442 006a 63F49063 		orn	r3, r3, #1152
 1443 006e D360     		str	r3, [r2, #12]
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 1444              		.loc 1 902 0
 1445 0070 FFF7FEFF 		bl	HAL_GetTick
 1446              	.LVL121:
 1447 0074 0746     		mov	r7, r0
 1448              	.LVL122:
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == RESET)
 1449              		.loc 1 905 0
 1450 0076 0DE0     		b	.L93
 1451              	.LVL123:
 1452              	.L94:
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 1453              		.loc 1 907 0
 1454 0078 FFF7FEFF 		bl	HAL_GetTick
 1455              	.LVL124:
 1456 007c C01B     		subs	r0, r0, r7
 1457 007e B0F57A7F 		cmp	r0, #1000
 1458 0082 07D9     		bls	.L93
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1459              		.loc 1 910 0
 1460 0084 2368     		ldr	r3, [r4]
 1461 0086 FF22     		movs	r2, #255
 1462 0088 5A62     		str	r2, [r3, #36]
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1463              		.loc 1 912 0
 1464 008a 0320     		movs	r0, #3
 1465 008c 6077     		strb	r0, [r4, #29]
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Process Unlocked */
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 1466              		.loc 1 915 0
 1467 008e 0023     		movs	r3, #0
ARM GAS  /tmp/ccUVFA1p.s 			page 43


 1468 0090 2377     		strb	r3, [r4, #28]
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 1469              		.loc 1 917 0
 1470 0092 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1471              	.LVL125:
 1472              	.L93:
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 1473              		.loc 1 905 0
 1474 0094 2368     		ldr	r3, [r4]
 1475 0096 D868     		ldr	r0, [r3, #12]
 1476 0098 10F0040F 		tst	r0, #4
 1477 009c ECD0     		beq	.L94
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 1478              		.loc 1 922 0
 1479 009e 5E61     		str	r6, [r3, #20]
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_WUCKSEL;
 1480              		.loc 1 925 0
 1481 00a0 2268     		ldr	r2, [r4]
 1482 00a2 9368     		ldr	r3, [r2, #8]
 1483 00a4 23F00703 		bic	r3, r3, #7
 1484 00a8 9360     		str	r3, [r2, #8]
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the clock source */
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)WakeUpClock;
 1485              		.loc 1 928 0
 1486 00aa 2368     		ldr	r3, [r4]
 1487 00ac 9A68     		ldr	r2, [r3, #8]
 1488 00ae 1543     		orrs	r5, r5, r2
 1489              	.LVL126:
 1490 00b0 9D60     		str	r5, [r3, #8]
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* RTC WakeUpTimer Interrupt Configuration: EXTI configuration */
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_IT();
 1491              		.loc 1 931 0
 1492 00b2 0E4B     		ldr	r3, .L97
 1493 00b4 1A68     		ldr	r2, [r3]
 1494 00b6 42F48012 		orr	r2, r2, #1048576
 1495 00ba 1A60     		str	r2, [r3]
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_RISING_EDGE();
 1496              		.loc 1 933 0
 1497 00bc 9A68     		ldr	r2, [r3, #8]
 1498 00be 42F48012 		orr	r2, r2, #1048576
 1499 00c2 9A60     		str	r2, [r3, #8]
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the Interrupt in the RTC_CR register */
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE_IT(hrtc,RTC_IT_WUT);
 1500              		.loc 1 936 0
 1501 00c4 2268     		ldr	r2, [r4]
 1502 00c6 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/ccUVFA1p.s 			page 44


 1503 00c8 43F48043 		orr	r3, r3, #16384
 1504 00cc 9360     		str	r3, [r2, #8]
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the Wakeup Timer */
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
 1505              		.loc 1 939 0
 1506 00ce 2268     		ldr	r2, [r4]
 1507 00d0 9368     		ldr	r3, [r2, #8]
 1508 00d2 43F48063 		orr	r3, r3, #1024
 1509 00d6 9360     		str	r3, [r2, #8]
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1510              		.loc 1 942 0
 1511 00d8 2368     		ldr	r3, [r4]
 1512 00da FF22     		movs	r2, #255
 1513 00dc 5A62     		str	r2, [r3, #36]
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1514              		.loc 1 944 0
 1515 00de 0123     		movs	r3, #1
 1516 00e0 6377     		strb	r3, [r4, #29]
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1517              		.loc 1 947 0
 1518 00e2 0020     		movs	r0, #0
 1519 00e4 2077     		strb	r0, [r4, #28]
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 1520              		.loc 1 949 0
 1521 00e6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1522              	.LVL127:
 1523              	.L95:
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 1524              		.loc 1 867 0
 1525 00e8 0220     		movs	r0, #2
 1526              	.LVL128:
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1527              		.loc 1 950 0
 1528 00ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1529              	.L98:
 1530              		.align	2
 1531              	.L97:
 1532 00ec 00040140 		.word	1073808384
 1533              		.cfi_endproc
 1534              	.LFE140:
 1536              		.section	.text.HAL_RTCEx_DeactivateWakeUpTimer,"ax",%progbits
 1537              		.align	2
 1538              		.global	HAL_RTCEx_DeactivateWakeUpTimer
 1539              		.thumb
 1540              		.thumb_func
 1542              	HAL_RTCEx_DeactivateWakeUpTimer:
 1543              	.LFB141:
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Deactivate wake up timer counter.
ARM GAS  /tmp/ccUVFA1p.s 			page 45


 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle 
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_DeactivateWakeUpTimer(RTC_HandleTypeDef *hrtc)
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 1544              		.loc 1 958 0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 0
 1547              		@ frame_needed = 0, uses_anonymous_args = 0
 1548              	.LVL129:
 1549 0000 38B5     		push	{r3, r4, r5, lr}
 1550              	.LCFI28:
 1551              		.cfi_def_cfa_offset 16
 1552              		.cfi_offset 3, -16
 1553              		.cfi_offset 4, -12
 1554              		.cfi_offset 5, -8
 1555              		.cfi_offset 14, -4
 1556              	.LVL130:
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1557              		.loc 1 962 0
 1558 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1559 0004 012B     		cmp	r3, #1
 1560 0006 32D0     		beq	.L103
 1561 0008 0446     		mov	r4, r0
 1562              		.loc 1 962 0 is_stmt 0 discriminator 2
 1563 000a 0123     		movs	r3, #1
 1564 000c 0377     		strb	r3, [r0, #28]
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1565              		.loc 1 964 0 is_stmt 1 discriminator 2
 1566 000e 0223     		movs	r3, #2
 1567 0010 4377     		strb	r3, [r0, #29]
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1568              		.loc 1 967 0 discriminator 2
 1569 0012 0368     		ldr	r3, [r0]
 1570 0014 CA22     		movs	r2, #202
 1571 0016 5A62     		str	r2, [r3, #36]
 1572 0018 0368     		ldr	r3, [r0]
 1573 001a 5322     		movs	r2, #83
 1574 001c 5A62     		str	r2, [r3, #36]
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the Wakeup Timer */
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 1575              		.loc 1 970 0 discriminator 2
 1576 001e 0268     		ldr	r2, [r0]
 1577 0020 9368     		ldr	r3, [r2, #8]
 1578 0022 23F48063 		bic	r3, r3, #1024
 1579 0026 9360     		str	r3, [r2, #8]
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE_IT(hrtc,RTC_IT_WUT);
 1580              		.loc 1 973 0 discriminator 2
ARM GAS  /tmp/ccUVFA1p.s 			page 46


 1581 0028 0268     		ldr	r2, [r0]
 1582 002a 9368     		ldr	r3, [r2, #8]
 1583 002c 23F48043 		bic	r3, r3, #16384
 1584 0030 9360     		str	r3, [r2, #8]
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 1585              		.loc 1 975 0 discriminator 2
 1586 0032 FFF7FEFF 		bl	HAL_GetTick
 1587              	.LVL131:
 1588 0036 0546     		mov	r5, r0
 1589              	.LVL132:
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == RESET)
 1590              		.loc 1 977 0 discriminator 2
 1591 0038 0DE0     		b	.L101
 1592              	.LVL133:
 1593              	.L102:
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 1594              		.loc 1 979 0
 1595 003a FFF7FEFF 		bl	HAL_GetTick
 1596              	.LVL134:
 1597 003e 401B     		subs	r0, r0, r5
 1598 0040 B0F57A7F 		cmp	r0, #1000
 1599 0044 07D9     		bls	.L101
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1600              		.loc 1 982 0
 1601 0046 2368     		ldr	r3, [r4]
 1602 0048 FF22     		movs	r2, #255
 1603 004a 5A62     		str	r2, [r3, #36]
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1604              		.loc 1 984 0
 1605 004c 0320     		movs	r0, #3
 1606 004e 6077     		strb	r0, [r4, #29]
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Process Unlocked */
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 1607              		.loc 1 987 0
 1608 0050 0023     		movs	r3, #0
 1609 0052 2377     		strb	r3, [r4, #28]
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 1610              		.loc 1 989 0
 1611 0054 38BD     		pop	{r3, r4, r5, pc}
 1612              	.LVL135:
 1613              	.L101:
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 1614              		.loc 1 977 0
 1615 0056 2368     		ldr	r3, [r4]
 1616 0058 DA68     		ldr	r2, [r3, #12]
 1617 005a 12F0040F 		tst	r2, #4
 1618 005e ECD0     		beq	.L102
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
ARM GAS  /tmp/ccUVFA1p.s 			page 47


 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1619              		.loc 1 994 0
 1620 0060 FF22     		movs	r2, #255
 1621 0062 5A62     		str	r2, [r3, #36]
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1622              		.loc 1 996 0
 1623 0064 0123     		movs	r3, #1
 1624 0066 6377     		strb	r3, [r4, #29]
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1625              		.loc 1 999 0
 1626 0068 0020     		movs	r0, #0
 1627 006a 2077     		strb	r0, [r4, #28]
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 1628              		.loc 1 1001 0
 1629 006c 38BD     		pop	{r3, r4, r5, pc}
 1630              	.LVL136:
 1631              	.L103:
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 1632              		.loc 1 962 0
 1633 006e 0220     		movs	r0, #2
 1634              	.LVL137:
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1635              		.loc 1 1002 0
 1636 0070 38BD     		pop	{r3, r4, r5, pc}
 1637              		.cfi_endproc
 1638              	.LFE141:
 1640 0072 00BF     		.section	.text.HAL_RTCEx_GetWakeUpTimer,"ax",%progbits
 1641              		.align	2
 1642              		.global	HAL_RTCEx_GetWakeUpTimer
 1643              		.thumb
 1644              		.thumb_func
 1646              	HAL_RTCEx_GetWakeUpTimer:
 1647              	.LFB142:
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Get wake up timer counter.
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle 
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval Counter value
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_GetWakeUpTimer(RTC_HandleTypeDef *hrtc)
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 1648              		.loc 1 1010 0
 1649              		.cfi_startproc
 1650              		@ args = 0, pretend = 0, frame = 0
 1651              		@ frame_needed = 0, uses_anonymous_args = 0
 1652              		@ link register save eliminated.
 1653              	.LVL138:
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the counter value */
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return ((uint32_t)(hrtc->Instance->WUTR & RTC_WUTR_WUT));
 1654              		.loc 1 1012 0
 1655 0000 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccUVFA1p.s 			page 48


 1656 0002 5869     		ldr	r0, [r3, #20]
 1657              	.LVL139:
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1658              		.loc 1 1013 0
 1659 0004 80B2     		uxth	r0, r0
 1660 0006 7047     		bx	lr
 1661              		.cfi_endproc
 1662              	.LFE142:
 1664              		.section	.text.HAL_RTCEx_WakeUpTimerEventCallback,"ax",%progbits
 1665              		.align	2
 1666              		.weak	HAL_RTCEx_WakeUpTimerEventCallback
 1667              		.thumb
 1668              		.thumb_func
 1670              	HAL_RTCEx_WakeUpTimerEventCallback:
 1671              	.LFB144:
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Handle Wake Up Timer interrupt request.
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval None
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** void HAL_RTCEx_WakeUpTimerIRQHandler(RTC_HandleTypeDef *hrtc)
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the pending status of the WAKEUPTIMER Interrupt */
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) != RESET)
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* WAKEUPTIMER callback */
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     HAL_RTCEx_WakeUpTimerEventCallback(hrtc);
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Clear the WAKEUPTIMER interrupt pending bit */
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the EXTI's line Flag for RTC WakeUpTimer */
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_CLEAR_FLAG();
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Wake Up Timer callback.
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval None
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_WakeUpTimerEventCallback(RTC_HandleTypeDef *hrtc)
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 1672              		.loc 1 1045 0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 0
 1675              		@ frame_needed = 0, uses_anonymous_args = 0
 1676              		@ link register save eliminated.
 1677              	.LVL140:
 1678 0000 7047     		bx	lr
 1679              		.cfi_endproc
 1680              	.LFE144:
 1682 0002 00BF     		.section	.text.HAL_RTCEx_WakeUpTimerIRQHandler,"ax",%progbits
ARM GAS  /tmp/ccUVFA1p.s 			page 49


 1683              		.align	2
 1684              		.global	HAL_RTCEx_WakeUpTimerIRQHandler
 1685              		.thumb
 1686              		.thumb_func
 1688              	HAL_RTCEx_WakeUpTimerIRQHandler:
 1689              	.LFB143:
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the pending status of the WAKEUPTIMER Interrupt */
 1690              		.loc 1 1021 0
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 0
 1693              		@ frame_needed = 0, uses_anonymous_args = 0
 1694              	.LVL141:
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the pending status of the WAKEUPTIMER Interrupt */
 1695              		.loc 1 1021 0
 1696 0000 10B5     		push	{r4, lr}
 1697              	.LCFI29:
 1698              		.cfi_def_cfa_offset 8
 1699              		.cfi_offset 4, -8
 1700              		.cfi_offset 14, -4
 1701 0002 0446     		mov	r4, r0
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 1702              		.loc 1 1023 0
 1703 0004 0368     		ldr	r3, [r0]
 1704 0006 DB68     		ldr	r3, [r3, #12]
 1705 0008 13F4806F 		tst	r3, #1024
 1706 000c 07D0     		beq	.L108
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     
 1707              		.loc 1 1026 0
 1708 000e FFF7FEFF 		bl	HAL_RTCEx_WakeUpTimerEventCallback
 1709              	.LVL142:
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 1710              		.loc 1 1029 0
 1711 0012 2268     		ldr	r2, [r4]
 1712 0014 D368     		ldr	r3, [r2, #12]
 1713 0016 DBB2     		uxtb	r3, r3
 1714 0018 63F49063 		orn	r3, r3, #1152
 1715 001c D360     		str	r3, [r2, #12]
 1716              	.L108:
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
 1717              		.loc 1 1033 0
 1718 001e 4FF48012 		mov	r2, #1048576
 1719 0022 024B     		ldr	r3, .L110
 1720 0024 5A61     		str	r2, [r3, #20]
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1721              		.loc 1 1036 0
 1722 0026 0123     		movs	r3, #1
 1723 0028 6377     		strb	r3, [r4, #29]
 1724 002a 10BD     		pop	{r4, pc}
 1725              	.LVL143:
 1726              	.L111:
 1727              		.align	2
 1728              	.L110:
 1729 002c 00040140 		.word	1073808384
 1730              		.cfi_endproc
 1731              	.LFE143:
 1733              		.section	.text.HAL_RTCEx_PollForWakeUpTimerEvent,"ax",%progbits
 1734              		.align	2
ARM GAS  /tmp/ccUVFA1p.s 			page 50


 1735              		.global	HAL_RTCEx_PollForWakeUpTimerEvent
 1736              		.thumb
 1737              		.thumb_func
 1739              	HAL_RTCEx_PollForWakeUpTimerEvent:
 1740              	.LFB145:
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             the HAL_RTCEx_WakeUpTimerEventCallback could be implemented in the user file
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    */
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  * @brief  Handle Wake Up Timer Polling.
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForWakeUpTimerEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 1741              		.loc 1 1061 0
 1742              		.cfi_startproc
 1743              		@ args = 0, pretend = 0, frame = 0
 1744              		@ frame_needed = 0, uses_anonymous_args = 0
 1745              	.LVL144:
 1746 0000 70B5     		push	{r4, r5, r6, lr}
 1747              	.LCFI30:
 1748              		.cfi_def_cfa_offset 16
 1749              		.cfi_offset 4, -16
 1750              		.cfi_offset 5, -12
 1751              		.cfi_offset 6, -8
 1752              		.cfi_offset 14, -4
 1753 0002 0446     		mov	r4, r0
 1754 0004 0D46     		mov	r5, r1
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 1755              		.loc 1 1062 0
 1756 0006 FFF7FEFF 		bl	HAL_GetTick
 1757              	.LVL145:
 1758 000a 0646     		mov	r6, r0
 1759              	.LVL146:
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) == RESET)
 1760              		.loc 1 1064 0
 1761 000c 0BE0     		b	.L114
 1762              	.LVL147:
 1763              	.L117:
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1764              		.loc 1 1066 0
 1765 000e B5F1FF3F 		cmp	r5, #-1
 1766 0012 08D0     		beq	.L114
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 1767              		.loc 1 1068 0
 1768 0014 25B1     		cbz	r5, .L115
 1769              		.loc 1 1068 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccUVFA1p.s 			page 51


 1770 0016 FFF7FEFF 		bl	HAL_GetTick
 1771              	.LVL148:
 1772 001a 801B     		subs	r0, r0, r6
 1773 001c A842     		cmp	r0, r5
 1774 001e 02D9     		bls	.L114
 1775              	.L115:
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1776              		.loc 1 1070 0 is_stmt 1
 1777 0020 0320     		movs	r0, #3
 1778 0022 6077     		strb	r0, [r4, #29]
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1779              		.loc 1 1072 0
 1780 0024 70BD     		pop	{r4, r5, r6, pc}
 1781              	.LVL149:
 1782              	.L114:
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 1783              		.loc 1 1064 0
 1784 0026 2368     		ldr	r3, [r4]
 1785 0028 DA68     		ldr	r2, [r3, #12]
 1786 002a 12F4806F 		tst	r2, #1024
 1787 002e EED0     		beq	.L117
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the WAKEUPTIMER Flag */
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 1788              		.loc 1 1078 0
 1789 0030 DA68     		ldr	r2, [r3, #12]
 1790 0032 D2B2     		uxtb	r2, r2
 1791 0034 62F49062 		orn	r2, r2, #1152
 1792 0038 DA60     		str	r2, [r3, #12]
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1793              		.loc 1 1081 0
 1794 003a 0123     		movs	r3, #1
 1795 003c 6377     		strb	r3, [r4, #29]
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 1796              		.loc 1 1083 0
 1797 003e 0020     		movs	r0, #0
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1798              		.loc 1 1084 0
 1799 0040 70BD     		pop	{r4, r5, r6, pc}
 1800              		.cfi_endproc
 1801              	.LFE145:
 1803 0042 00BF     		.section	.text.HAL_RTCEx_BKUPWrite,"ax",%progbits
 1804              		.align	2
 1805              		.global	HAL_RTCEx_BKUPWrite
 1806              		.thumb
 1807              		.thumb_func
 1809              	HAL_RTCEx_BKUPWrite:
 1810              	.LFB146:
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccUVFA1p.s 			page 52


1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @}
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group3
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief    Extended Peripheral Control functions
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** @verbatim   
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  ===============================================================================
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****               ##### Extended Peripheral Control functions #####
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  ===============================================================================  
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     [..]
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     This subsection provides functions allowing to
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Write a data in a specified RTC Backup data register
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Read a data in a specified RTC Backup data register
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Set the Coarse calibration parameters.
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Deactivate the Coarse calibration parameters
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Set the Smooth calibration parameters.
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Configure the Synchronization Shift Control Settings.
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Enable the RTC reference clock detection.
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Disable the RTC reference clock detection.
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Enable the Bypass Shadow feature.
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Disable the Bypass Shadow feature.
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** @endverbatim
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @{
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Write a data in a specified RTC Backup data register.
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle 
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to 
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *                                 specify the register.
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  Data Data to be written in the specified RTC Backup data register.                     
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval None
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** void HAL_RTCEx_BKUPWrite(RTC_HandleTypeDef *hrtc, uint32_t BackupRegister, uint32_t Data)
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 1811              		.loc 1 1127 0
 1812              		.cfi_startproc
 1813              		@ args = 0, pretend = 0, frame = 0
 1814              		@ frame_needed = 0, uses_anonymous_args = 0
 1815              		@ link register save eliminated.
 1816              	.LVL150:
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmp = 0U;
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmp = (uint32_t)&(hrtc->Instance->BKP0R);
 1817              		.loc 1 1133 0
 1818 0000 0368     		ldr	r3, [r0]
 1819 0002 5033     		adds	r3, r3, #80
ARM GAS  /tmp/ccUVFA1p.s 			page 53


 1820              	.LVL151:
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4U);
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Write the specified register */
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
 1821              		.loc 1 1137 0
 1822 0004 43F82120 		str	r2, [r3, r1, lsl #2]
 1823 0008 7047     		bx	lr
 1824              		.cfi_endproc
 1825              	.LFE146:
 1827 000a 00BF     		.section	.text.HAL_RTCEx_BKUPRead,"ax",%progbits
 1828              		.align	2
 1829              		.global	HAL_RTCEx_BKUPRead
 1830              		.thumb
 1831              		.thumb_func
 1833              	HAL_RTCEx_BKUPRead:
 1834              	.LFB147:
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Reads data from the specified RTC Backup data Register.
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle 
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to 
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *                                 specify the register.                   
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval Read value
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_BKUPRead(RTC_HandleTypeDef *hrtc, uint32_t BackupRegister)
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 1835              		.loc 1 1149 0
 1836              		.cfi_startproc
 1837              		@ args = 0, pretend = 0, frame = 0
 1838              		@ frame_needed = 0, uses_anonymous_args = 0
 1839              		@ link register save eliminated.
 1840              	.LVL152:
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmp = 0U;
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmp = (uint32_t)&(hrtc->Instance->BKP0R);
 1841              		.loc 1 1155 0
 1842 0000 0368     		ldr	r3, [r0]
 1843 0002 5033     		adds	r3, r3, #80
 1844              	.LVL153:
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4U);
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Read the specified register */
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return (*(__IO uint32_t *)tmp);
 1845              		.loc 1 1159 0
 1846 0004 53F82100 		ldr	r0, [r3, r1, lsl #2]
 1847              	.LVL154:
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1848              		.loc 1 1160 0
 1849 0008 7047     		bx	lr
 1850              		.cfi_endproc
 1851              	.LFE147:
ARM GAS  /tmp/ccUVFA1p.s 			page 54


 1853 000a 00BF     		.section	.text.HAL_RTCEx_SetSmoothCalib,"ax",%progbits
 1854              		.align	2
 1855              		.global	HAL_RTCEx_SetSmoothCalib
 1856              		.thumb
 1857              		.thumb_func
 1859              	HAL_RTCEx_SetSmoothCalib:
 1860              	.LFB148:
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Set the Smooth calibration parameters.
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle  
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  SmoothCalibPeriod Select the Smooth Calibration Period.
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be can be one of the following values :
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_32SEC: The smooth calibration period is 32s.
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_16SEC: The smooth calibration period is 16s.
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_8SEC: The smooth calibration period is 8s.
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  SmoothCalibPlusPulses Select to Set or reset the CALP bit.
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_SET: Add one RTCCLK pulse every 2*11 pulses.
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_RESET: No RTCCLK pulses are added.
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  SmoothCalibMinusPulsesValue Select the value of CALM[8:0] bits.
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x000001FF.
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @note   To deactivate the smooth calibration, the field SmoothCalibPlusPulses 
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *         must be equal to SMOOTHCALIB_PLUSPULSES_RESET and the field 
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *         SmoothCalibMinusPulsesValue mut be equal to 0.
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSmoothCalib(RTC_HandleTypeDef* hrtc, uint32_t SmoothCalibPeriod, uin
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 1861              		.loc 1 1182 0
 1862              		.cfi_startproc
 1863              		@ args = 0, pretend = 0, frame = 0
 1864              		@ frame_needed = 0, uses_anonymous_args = 0
 1865              	.LVL155:
 1866 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1867              	.LCFI31:
 1868              		.cfi_def_cfa_offset 24
 1869              		.cfi_offset 4, -24
 1870              		.cfi_offset 5, -20
 1871              		.cfi_offset 6, -16
 1872              		.cfi_offset 7, -12
 1873              		.cfi_offset 8, -8
 1874              		.cfi_offset 14, -4
 1875              	.LVL156:
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PERIOD(SmoothCalibPeriod));
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PLUS(SmoothCalibPlusPulses));
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_MINUS(SmoothCalibMinusPulsesValue));
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1876              		.loc 1 1191 0
 1877 0004 047F     		ldrb	r4, [r0, #28]	@ zero_extendqisi2
 1878 0006 012C     		cmp	r4, #1
 1879 0008 38D0     		beq	.L126
ARM GAS  /tmp/ccUVFA1p.s 			page 55


 1880 000a 1D46     		mov	r5, r3
 1881 000c 1646     		mov	r6, r2
 1882 000e 0F46     		mov	r7, r1
 1883 0010 0446     		mov	r4, r0
 1884              		.loc 1 1191 0 is_stmt 0 discriminator 2
 1885 0012 0123     		movs	r3, #1
 1886              	.LVL157:
 1887 0014 0377     		strb	r3, [r0, #28]
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1888              		.loc 1 1193 0 is_stmt 1 discriminator 2
 1889 0016 0223     		movs	r3, #2
 1890 0018 4377     		strb	r3, [r0, #29]
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1891              		.loc 1 1196 0 discriminator 2
 1892 001a 0368     		ldr	r3, [r0]
 1893 001c CA22     		movs	r2, #202
 1894              	.LVL158:
 1895 001e 5A62     		str	r2, [r3, #36]
 1896 0020 0368     		ldr	r3, [r0]
 1897 0022 5322     		movs	r2, #83
 1898 0024 5A62     		str	r2, [r3, #36]
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* check if a calibration is pending*/
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if((hrtc->Instance->ISR & RTC_ISR_RECALPF) != RESET)
 1899              		.loc 1 1199 0 discriminator 2
 1900 0026 0368     		ldr	r3, [r0]
 1901 0028 DB68     		ldr	r3, [r3, #12]
 1902 002a 13F4803F 		tst	r3, #65536
 1903 002e 18D0     		beq	.L123
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
 1904              		.loc 1 1201 0
 1905 0030 FFF7FEFF 		bl	HAL_GetTick
 1906              	.LVL159:
 1907 0034 8046     		mov	r8, r0
 1908              	.LVL160:
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* check if a calibration is pending*/
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     while((hrtc->Instance->ISR & RTC_ISR_RECALPF) != RESET)
 1909              		.loc 1 1204 0
 1910 0036 0FE0     		b	.L124
 1911              	.LVL161:
 1912              	.L125:
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 1913              		.loc 1 1206 0
 1914 0038 FFF7FEFF 		bl	HAL_GetTick
 1915              	.LVL162:
 1916 003c C8EB0000 		rsb	r0, r8, r0
 1917 0040 B0F57A7F 		cmp	r0, #1000
 1918 0044 08D9     		bls	.L124
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
ARM GAS  /tmp/ccUVFA1p.s 			page 56


 1919              		.loc 1 1209 0
 1920 0046 2368     		ldr	r3, [r4]
 1921 0048 FF22     		movs	r2, #255
 1922 004a 5A62     		str	r2, [r3, #36]
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         /* Change RTC state */
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1923              		.loc 1 1212 0
 1924 004c 0320     		movs	r0, #3
 1925 004e 6077     		strb	r0, [r4, #29]
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         /* Process Unlocked */
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 1926              		.loc 1 1215 0
 1927 0050 0023     		movs	r3, #0
 1928 0052 2377     		strb	r3, [r4, #28]
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1929              		.loc 1 1217 0
 1930 0054 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1931              	.LVL163:
 1932              	.L124:
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 1933              		.loc 1 1204 0
 1934 0058 2068     		ldr	r0, [r4]
 1935 005a C068     		ldr	r0, [r0, #12]
 1936 005c 10F4803F 		tst	r0, #65536
 1937 0060 EAD1     		bne	.L125
 1938              	.LVL164:
 1939              	.L123:
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the Smooth calibration settings */
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CALR = (uint32_t)((uint32_t)SmoothCalibPeriod | (uint32_t)SmoothCalibPlusPulses |
 1940              		.loc 1 1223 0
 1941 0062 2368     		ldr	r3, [r4]
 1942 0064 3E43     		orrs	r6, r6, r7
 1943              	.LVL165:
 1944 0066 3543     		orrs	r5, r5, r6
 1945              	.LVL166:
 1946 0068 DD63     		str	r5, [r3, #60]
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1947              		.loc 1 1226 0
 1948 006a 2368     		ldr	r3, [r4]
 1949 006c FF22     		movs	r2, #255
 1950 006e 5A62     		str	r2, [r3, #36]
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1951              		.loc 1 1229 0
 1952 0070 0123     		movs	r3, #1
 1953 0072 6377     		strb	r3, [r4, #29]
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccUVFA1p.s 			page 57


1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1954              		.loc 1 1232 0
 1955 0074 0020     		movs	r0, #0
 1956 0076 2077     		strb	r0, [r4, #28]
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 1957              		.loc 1 1234 0
 1958 0078 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1959              	.LVL167:
 1960              	.L126:
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 1961              		.loc 1 1191 0
 1962 007c 0220     		movs	r0, #2
 1963              	.LVL168:
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1964              		.loc 1 1235 0
 1965 007e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1966              		.cfi_endproc
 1967              	.LFE148:
 1969 0082 00BF     		.section	.text.HAL_RTCEx_SetSynchroShift,"ax",%progbits
 1970              		.align	2
 1971              		.global	HAL_RTCEx_SetSynchroShift
 1972              		.thumb
 1973              		.thumb_func
 1975              	HAL_RTCEx_SetSynchroShift:
 1976              	.LFB149:
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Configure the Synchronization Shift Control Settings.
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @note   When REFCKON is set, firmware must not write to Shift control register. 
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle    
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  ShiftAdd1S: Select to add or not 1 second to the time calendar.
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values :
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_SET: Add one second to the clock calendar. 
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_RESET: No effect.
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  ShiftSubFS Select the number of Second Fractions to substitute.
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x7FFF.
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSynchroShift(RTC_HandleTypeDef* hrtc, uint32_t ShiftAdd1S, uint32_t 
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 1977              		.loc 1 1250 0
 1978              		.cfi_startproc
 1979              		@ args = 0, pretend = 0, frame = 0
 1980              		@ frame_needed = 0, uses_anonymous_args = 0
 1981              	.LVL169:
 1982 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1983              	.LCFI32:
 1984              		.cfi_def_cfa_offset 24
 1985              		.cfi_offset 3, -24
 1986              		.cfi_offset 4, -20
 1987              		.cfi_offset 5, -16
 1988              		.cfi_offset 6, -12
 1989              		.cfi_offset 7, -8
 1990              		.cfi_offset 14, -4
 1991              	.LVL170:
ARM GAS  /tmp/ccUVFA1p.s 			page 58


1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_ADD1S(ShiftAdd1S));
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_SUBFS(ShiftSubFS));
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1992              		.loc 1 1258 0
 1993 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1994 0004 012B     		cmp	r3, #1
 1995 0006 4CD0     		beq	.L134
 1996 0008 1646     		mov	r6, r2
 1997 000a 0F46     		mov	r7, r1
 1998 000c 0446     		mov	r4, r0
 1999              		.loc 1 1258 0 is_stmt 0 discriminator 2
 2000 000e 0123     		movs	r3, #1
 2001 0010 0377     		strb	r3, [r0, #28]
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2002              		.loc 1 1260 0 is_stmt 1 discriminator 2
 2003 0012 0223     		movs	r3, #2
 2004 0014 4377     		strb	r3, [r0, #29]
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2005              		.loc 1 1263 0 discriminator 2
 2006 0016 0368     		ldr	r3, [r0]
 2007 0018 CA22     		movs	r2, #202
 2008              	.LVL171:
 2009 001a 5A62     		str	r2, [r3, #36]
 2010 001c 0368     		ldr	r3, [r0]
 2011 001e 5322     		movs	r2, #83
 2012 0020 5A62     		str	r2, [r3, #36]
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
 2013              		.loc 1 1265 0 discriminator 2
 2014 0022 FFF7FEFF 		bl	HAL_GetTick
 2015              	.LVL172:
 2016 0026 0546     		mov	r5, r0
 2017              	.LVL173:
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Wait until the shift is completed*/
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     while((hrtc->Instance->ISR & RTC_ISR_SHPF) != RESET)
 2018              		.loc 1 1268 0 discriminator 2
 2019 0028 0DE0     		b	.L130
 2020              	.LVL174:
 2021              	.L131:
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 2022              		.loc 1 1270 0
 2023 002a FFF7FEFF 		bl	HAL_GetTick
 2024              	.LVL175:
 2025 002e 401B     		subs	r0, r0, r5
 2026 0030 B0F57A7F 		cmp	r0, #1000
 2027 0034 07D9     		bls	.L130
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
ARM GAS  /tmp/ccUVFA1p.s 			page 59


1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2028              		.loc 1 1273 0
 2029 0036 2368     		ldr	r3, [r4]
 2030 0038 FF22     		movs	r2, #255
 2031 003a 5A62     		str	r2, [r3, #36]
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2032              		.loc 1 1275 0
 2033 003c 0320     		movs	r0, #3
 2034 003e 6077     		strb	r0, [r4, #29]
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         /* Process Unlocked */
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 2035              		.loc 1 1278 0
 2036 0040 0023     		movs	r3, #0
 2037 0042 2377     		strb	r3, [r4, #28]
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2038              		.loc 1 1280 0
 2039 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2040              	.LVL176:
 2041              	.L130:
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 2042              		.loc 1 1268 0
 2043 0046 2368     		ldr	r3, [r4]
 2044 0048 D868     		ldr	r0, [r3, #12]
 2045 004a 10F0080F 		tst	r0, #8
 2046 004e ECD1     		bne	.L131
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Check if the reference clock detection is disabled */
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if((hrtc->Instance->CR & RTC_CR_REFCKON) == RESET)
 2047              		.loc 1 1285 0
 2048 0050 9A68     		ldr	r2, [r3, #8]
 2049 0052 12F0100F 		tst	r2, #16
 2050 0056 14D1     		bne	.L132
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Configure the Shift settings */
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       hrtc->Instance->SHIFTR = (uint32_t)(uint32_t)(ShiftSubFS) | (uint32_t)(ShiftAdd1S);
 2051              		.loc 1 1288 0
 2052 0058 46EA0701 		orr	r1, r6, r7
 2053 005c D962     		str	r1, [r3, #44]
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* If  RTC_CR_BYPSHAD bit = 0U, wait for synchro else this check is not needed */
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 2054              		.loc 1 1291 0
 2055 005e 2368     		ldr	r3, [r4]
 2056 0060 9B68     		ldr	r3, [r3, #8]
 2057 0062 13F0200F 		tst	r3, #32
 2058 0066 14D1     		bne	.L133
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 2059              		.loc 1 1293 0
 2060 0068 2046     		mov	r0, r4
 2061 006a FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
ARM GAS  /tmp/ccUVFA1p.s 			page 60


 2062              	.LVL177:
 2063 006e 80B1     		cbz	r0, .L133
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         {
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****           /* Enable the write protection for RTC registers */
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****           __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2064              		.loc 1 1296 0
 2065 0070 2368     		ldr	r3, [r4]
 2066 0072 FF22     		movs	r2, #255
 2067 0074 5A62     		str	r2, [r3, #36]
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****           hrtc->State = HAL_RTC_STATE_ERROR;
 2068              		.loc 1 1298 0
 2069 0076 0423     		movs	r3, #4
 2070 0078 6377     		strb	r3, [r4, #29]
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****           /* Process Unlocked */
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****           __HAL_UNLOCK(hrtc);
 2071              		.loc 1 1301 0
 2072 007a 0023     		movs	r3, #0
 2073 007c 2377     		strb	r3, [r4, #28]
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****           return HAL_ERROR;
 2074              		.loc 1 1303 0
 2075 007e 0120     		movs	r0, #1
 2076 0080 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2077              	.LVL178:
 2078              	.L132:
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         }
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     else
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2079              		.loc 1 1310 0
 2080 0082 FF22     		movs	r2, #255
 2081 0084 5A62     		str	r2, [r3, #36]
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Change RTC state */
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 2082              		.loc 1 1313 0
 2083 0086 0423     		movs	r3, #4
 2084 0088 6377     		strb	r3, [r4, #29]
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Process Unlocked */
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 2085              		.loc 1 1316 0
 2086 008a 0023     		movs	r3, #0
 2087 008c 2377     		strb	r3, [r4, #28]
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       return HAL_ERROR;
 2088              		.loc 1 1318 0
 2089 008e 0120     		movs	r0, #1
 2090 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2091              	.LVL179:
 2092              	.L133:
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
ARM GAS  /tmp/ccUVFA1p.s 			page 61


1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2093              		.loc 1 1322 0
 2094 0092 2368     		ldr	r3, [r4]
 2095 0094 FF22     		movs	r2, #255
 2096 0096 5A62     		str	r2, [r3, #36]
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2097              		.loc 1 1325 0
 2098 0098 0123     		movs	r3, #1
 2099 009a 6377     		strb	r3, [r4, #29]
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2100              		.loc 1 1328 0
 2101 009c 0020     		movs	r0, #0
 2102 009e 2077     		strb	r0, [r4, #28]
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 2103              		.loc 1 1330 0
 2104 00a0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2105              	.LVL180:
 2106              	.L134:
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 2107              		.loc 1 1258 0
 2108 00a2 0220     		movs	r0, #2
 2109              	.LVL181:
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2110              		.loc 1 1331 0
 2111 00a4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2112              		.cfi_endproc
 2113              	.LFE149:
 2115 00a6 00BF     		.section	.text.HAL_RTCEx_SetCalibrationOutPut,"ax",%progbits
 2116              		.align	2
 2117              		.global	HAL_RTCEx_SetCalibrationOutPut
 2118              		.thumb
 2119              		.thumb_func
 2121              	HAL_RTCEx_SetCalibrationOutPut:
 2122              	.LFB150:
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  CalibOutput Select the Calibration output Selection .
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_512HZ: A signal has a regular waveform at 512Hz. 
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_1HZ: A signal has a regular waveform at 1Hz.
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetCalibrationOutPut(RTC_HandleTypeDef* hrtc, uint32_t CalibOutput)
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 2123              		.loc 1 1343 0
 2124              		.cfi_startproc
 2125              		@ args = 0, pretend = 0, frame = 0
 2126              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccUVFA1p.s 			page 62


 2127              		@ link register save eliminated.
 2128              	.LVL182:
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_CALIB_OUTPUT(CalibOutput));
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2129              		.loc 1 1348 0
 2130 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 2131 0002 012B     		cmp	r3, #1
 2132 0004 20D0     		beq	.L138
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
 2133              		.loc 1 1343 0 discriminator 2
 2134 0006 10B4     		push	{r4}
 2135              	.LCFI33:
 2136              		.cfi_def_cfa_offset 4
 2137              		.cfi_offset 4, -4
 2138              		.loc 1 1348 0 discriminator 2
 2139 0008 0122     		movs	r2, #1
 2140 000a 0277     		strb	r2, [r0, #28]
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2141              		.loc 1 1350 0 discriminator 2
 2142 000c 0223     		movs	r3, #2
 2143 000e 4377     		strb	r3, [r0, #29]
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2144              		.loc 1 1353 0 discriminator 2
 2145 0010 0368     		ldr	r3, [r0]
 2146 0012 CA24     		movs	r4, #202
 2147 0014 5C62     		str	r4, [r3, #36]
 2148 0016 0368     		ldr	r3, [r0]
 2149 0018 5324     		movs	r4, #83
 2150 001a 5C62     		str	r4, [r3, #36]
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear flags before config */
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_COSEL;
 2151              		.loc 1 1356 0 discriminator 2
 2152 001c 0468     		ldr	r4, [r0]
 2153 001e A368     		ldr	r3, [r4, #8]
 2154 0020 23F40023 		bic	r3, r3, #524288
 2155 0024 A360     		str	r3, [r4, #8]
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the RTC_CR register */
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)CalibOutput;
 2156              		.loc 1 1359 0 discriminator 2
 2157 0026 0368     		ldr	r3, [r0]
 2158 0028 9C68     		ldr	r4, [r3, #8]
 2159 002a 2143     		orrs	r1, r1, r4
 2160              	.LVL183:
 2161 002c 9960     		str	r1, [r3, #8]
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_ENABLE(hrtc);
 2162              		.loc 1 1361 0 discriminator 2
 2163 002e 0168     		ldr	r1, [r0]
 2164 0030 8B68     		ldr	r3, [r1, #8]
ARM GAS  /tmp/ccUVFA1p.s 			page 63


 2165 0032 43F40003 		orr	r3, r3, #8388608
 2166 0036 8B60     		str	r3, [r1, #8]
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2167              		.loc 1 1364 0 discriminator 2
 2168 0038 0368     		ldr	r3, [r0]
 2169 003a FF21     		movs	r1, #255
 2170 003c 5962     		str	r1, [r3, #36]
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2171              		.loc 1 1367 0 discriminator 2
 2172 003e 4277     		strb	r2, [r0, #29]
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2173              		.loc 1 1370 0 discriminator 2
 2174 0040 0023     		movs	r3, #0
 2175 0042 0377     		strb	r3, [r0, #28]
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 2176              		.loc 1 1372 0 discriminator 2
 2177 0044 1846     		mov	r0, r3
 2178              	.LVL184:
 2179 0046 01E0     		b	.L137
 2180              	.LVL185:
 2181              	.L138:
 2182              	.LCFI34:
 2183              		.cfi_def_cfa_offset 0
 2184              		.cfi_restore 4
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 2185              		.loc 1 1348 0
 2186 0048 0220     		movs	r0, #2
 2187              	.LVL186:
 2188 004a 7047     		bx	lr
 2189              	.LVL187:
 2190              	.L137:
 2191              	.LCFI35:
 2192              		.cfi_def_cfa_offset 4
 2193              		.cfi_offset 4, -4
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2194              		.loc 1 1373 0
 2195 004c 5DF8044B 		ldr	r4, [sp], #4
 2196              	.LCFI36:
 2197              		.cfi_restore 4
 2198              		.cfi_def_cfa_offset 0
 2199 0050 7047     		bx	lr
 2200              		.cfi_endproc
 2201              	.LFE150:
 2203 0052 00BF     		.section	.text.HAL_RTCEx_DeactivateCalibrationOutPut,"ax",%progbits
 2204              		.align	2
 2205              		.global	HAL_RTCEx_DeactivateCalibrationOutPut
 2206              		.thumb
 2207              		.thumb_func
 2209              	HAL_RTCEx_DeactivateCalibrationOutPut:
 2210              	.LFB151:
ARM GAS  /tmp/ccUVFA1p.s 			page 64


1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateCalibrationOutPut(RTC_HandleTypeDef* hrtc)
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 2211              		.loc 1 1381 0
 2212              		.cfi_startproc
 2213              		@ args = 0, pretend = 0, frame = 0
 2214              		@ frame_needed = 0, uses_anonymous_args = 0
 2215              		@ link register save eliminated.
 2216              	.LVL188:
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2217              		.loc 1 1383 0
 2218 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 2219 0002 012B     		cmp	r3, #1
 2220 0004 16D0     		beq	.L143
 2221              		.loc 1 1383 0 is_stmt 0 discriminator 2
 2222 0006 0122     		movs	r2, #1
 2223 0008 0277     		strb	r2, [r0, #28]
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2224              		.loc 1 1385 0 is_stmt 1 discriminator 2
 2225 000a 0223     		movs	r3, #2
 2226 000c 4377     		strb	r3, [r0, #29]
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2227              		.loc 1 1388 0 discriminator 2
 2228 000e 0368     		ldr	r3, [r0]
 2229 0010 CA21     		movs	r1, #202
 2230 0012 5962     		str	r1, [r3, #36]
 2231 0014 0368     		ldr	r3, [r0]
 2232 0016 5321     		movs	r1, #83
 2233 0018 5962     		str	r1, [r3, #36]
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_DISABLE(hrtc);
 2234              		.loc 1 1390 0 discriminator 2
 2235 001a 0168     		ldr	r1, [r0]
 2236 001c 8B68     		ldr	r3, [r1, #8]
 2237 001e 23F40003 		bic	r3, r3, #8388608
 2238 0022 8B60     		str	r3, [r1, #8]
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2239              		.loc 1 1393 0 discriminator 2
 2240 0024 0368     		ldr	r3, [r0]
 2241 0026 FF21     		movs	r1, #255
 2242 0028 5962     		str	r1, [r3, #36]
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2243              		.loc 1 1396 0 discriminator 2
 2244 002a 4277     		strb	r2, [r0, #29]
ARM GAS  /tmp/ccUVFA1p.s 			page 65


1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2245              		.loc 1 1399 0 discriminator 2
 2246 002c 0023     		movs	r3, #0
 2247 002e 0377     		strb	r3, [r0, #28]
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 2248              		.loc 1 1401 0 discriminator 2
 2249 0030 1846     		mov	r0, r3
 2250              	.LVL189:
 2251 0032 7047     		bx	lr
 2252              	.LVL190:
 2253              	.L143:
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 2254              		.loc 1 1383 0
 2255 0034 0220     		movs	r0, #2
 2256              	.LVL191:
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2257              		.loc 1 1402 0
 2258 0036 7047     		bx	lr
 2259              		.cfi_endproc
 2260              	.LFE151:
 2262              		.section	.text.HAL_RTCEx_SetRefClock,"ax",%progbits
 2263              		.align	2
 2264              		.global	HAL_RTCEx_SetRefClock
 2265              		.thumb
 2266              		.thumb_func
 2268              	HAL_RTCEx_SetRefClock:
 2269              	.LFB152:
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Enable the RTC reference clock detection.
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetRefClock(RTC_HandleTypeDef* hrtc)
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 2270              		.loc 1 1410 0
 2271              		.cfi_startproc
 2272              		@ args = 0, pretend = 0, frame = 0
 2273              		@ frame_needed = 0, uses_anonymous_args = 0
 2274              	.LVL192:
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2275              		.loc 1 1412 0
 2276 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 2277 0002 012B     		cmp	r3, #1
 2278 0004 2AD0     		beq	.L147
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
 2279              		.loc 1 1410 0 discriminator 2
 2280 0006 10B5     		push	{r4, lr}
 2281              	.LCFI37:
 2282              		.cfi_def_cfa_offset 8
 2283              		.cfi_offset 4, -8
 2284              		.cfi_offset 14, -4
 2285 0008 0446     		mov	r4, r0
ARM GAS  /tmp/ccUVFA1p.s 			page 66


 2286              		.loc 1 1412 0 discriminator 2
 2287 000a 0123     		movs	r3, #1
 2288 000c 0377     		strb	r3, [r0, #28]
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2289              		.loc 1 1414 0 discriminator 2
 2290 000e 0223     		movs	r3, #2
 2291 0010 4377     		strb	r3, [r0, #29]
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2292              		.loc 1 1417 0 discriminator 2
 2293 0012 0368     		ldr	r3, [r0]
 2294 0014 CA22     		movs	r2, #202
 2295 0016 5A62     		str	r2, [r3, #36]
 2296 0018 0368     		ldr	r3, [r0]
 2297 001a 5322     		movs	r2, #83
 2298 001c 5A62     		str	r2, [r3, #36]
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Set Initialization mode */
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 2299              		.loc 1 1420 0 discriminator 2
 2300 001e FFF7FEFF 		bl	RTC_EnterInitMode
 2301              	.LVL193:
 2302 0022 0346     		mov	r3, r0
 2303 0024 40B1     		cbz	r0, .L146
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Enable the write protection for RTC registers */
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2304              		.loc 1 1423 0
 2305 0026 2368     		ldr	r3, [r4]
 2306 0028 FF22     		movs	r2, #255
 2307 002a 5A62     		str	r2, [r3, #36]
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Set RTC state*/
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 2308              		.loc 1 1426 0
 2309 002c 0423     		movs	r3, #4
 2310 002e 6377     		strb	r3, [r4, #29]
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Process Unlocked */
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     __HAL_UNLOCK(hrtc);
 2311              		.loc 1 1429 0
 2312 0030 0023     		movs	r3, #0
 2313 0032 2377     		strb	r3, [r4, #28]
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     return HAL_ERROR;
 2314              		.loc 1 1431 0
 2315 0034 0123     		movs	r3, #1
 2316 0036 14E0     		b	.L145
 2317              	.L146:
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   else
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_ENABLE(hrtc);
 2318              		.loc 1 1435 0
 2319 0038 2168     		ldr	r1, [r4]
ARM GAS  /tmp/ccUVFA1p.s 			page 67


 2320 003a 8A68     		ldr	r2, [r1, #8]
 2321 003c 42F01002 		orr	r2, r2, #16
 2322 0040 8A60     		str	r2, [r1, #8]
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 2323              		.loc 1 1438 0
 2324 0042 2168     		ldr	r1, [r4]
 2325 0044 CA68     		ldr	r2, [r1, #12]
 2326 0046 22F08002 		bic	r2, r2, #128
 2327 004a CA60     		str	r2, [r1, #12]
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2328              		.loc 1 1442 0
 2329 004c 2268     		ldr	r2, [r4]
 2330 004e FF21     		movs	r1, #255
 2331 0050 5162     		str	r1, [r2, #36]
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    /* Change RTC state */
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2332              		.loc 1 1445 0
 2333 0052 0122     		movs	r2, #1
 2334 0054 6277     		strb	r2, [r4, #29]
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2335              		.loc 1 1448 0
 2336 0056 0022     		movs	r2, #0
 2337 0058 2277     		strb	r2, [r4, #28]
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 2338              		.loc 1 1450 0
 2339 005a 02E0     		b	.L145
 2340              	.LVL194:
 2341              	.L147:
 2342              	.LCFI38:
 2343              		.cfi_def_cfa_offset 0
 2344              		.cfi_restore 4
 2345              		.cfi_restore 14
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 2346              		.loc 1 1412 0
 2347 005c 0223     		movs	r3, #2
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2348              		.loc 1 1451 0
 2349 005e 1846     		mov	r0, r3
 2350              	.LVL195:
 2351 0060 7047     		bx	lr
 2352              	.LVL196:
 2353              	.L145:
 2354              	.LCFI39:
 2355              		.cfi_def_cfa_offset 8
 2356              		.cfi_offset 4, -8
 2357              		.cfi_offset 14, -4
 2358 0062 1846     		mov	r0, r3
 2359 0064 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccUVFA1p.s 			page 68


 2360              		.cfi_endproc
 2361              	.LFE152:
 2363              		.section	.text.HAL_RTCEx_DeactivateRefClock,"ax",%progbits
 2364              		.align	2
 2365              		.global	HAL_RTCEx_DeactivateRefClock
 2366              		.thumb
 2367              		.thumb_func
 2369              	HAL_RTCEx_DeactivateRefClock:
 2370              	.LFB153:
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Disable the RTC reference clock detection.
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateRefClock(RTC_HandleTypeDef* hrtc)
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 2371              		.loc 1 1459 0
 2372              		.cfi_startproc
 2373              		@ args = 0, pretend = 0, frame = 0
 2374              		@ frame_needed = 0, uses_anonymous_args = 0
 2375              	.LVL197:
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2376              		.loc 1 1461 0
 2377 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 2378 0002 012B     		cmp	r3, #1
 2379 0004 2AD0     		beq	.L153
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
 2380              		.loc 1 1459 0 discriminator 2
 2381 0006 10B5     		push	{r4, lr}
 2382              	.LCFI40:
 2383              		.cfi_def_cfa_offset 8
 2384              		.cfi_offset 4, -8
 2385              		.cfi_offset 14, -4
 2386 0008 0446     		mov	r4, r0
 2387              		.loc 1 1461 0 discriminator 2
 2388 000a 0123     		movs	r3, #1
 2389 000c 0377     		strb	r3, [r0, #28]
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2390              		.loc 1 1463 0 discriminator 2
 2391 000e 0223     		movs	r3, #2
 2392 0010 4377     		strb	r3, [r0, #29]
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2393              		.loc 1 1466 0 discriminator 2
 2394 0012 0368     		ldr	r3, [r0]
 2395 0014 CA22     		movs	r2, #202
 2396 0016 5A62     		str	r2, [r3, #36]
 2397 0018 0368     		ldr	r3, [r0]
 2398 001a 5322     		movs	r2, #83
 2399 001c 5A62     		str	r2, [r3, #36]
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Set Initialization mode */
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
ARM GAS  /tmp/ccUVFA1p.s 			page 69


 2400              		.loc 1 1469 0 discriminator 2
 2401 001e FFF7FEFF 		bl	RTC_EnterInitMode
 2402              	.LVL198:
 2403 0022 0346     		mov	r3, r0
 2404 0024 40B1     		cbz	r0, .L152
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Enable the write protection for RTC registers */
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2405              		.loc 1 1472 0
 2406 0026 2368     		ldr	r3, [r4]
 2407 0028 FF22     		movs	r2, #255
 2408 002a 5A62     		str	r2, [r3, #36]
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Set RTC state*/
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 2409              		.loc 1 1475 0
 2410 002c 0423     		movs	r3, #4
 2411 002e 6377     		strb	r3, [r4, #29]
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Process Unlocked */
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     __HAL_UNLOCK(hrtc);
 2412              		.loc 1 1478 0
 2413 0030 0023     		movs	r3, #0
 2414 0032 2377     		strb	r3, [r4, #28]
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     return HAL_ERROR;
 2415              		.loc 1 1480 0
 2416 0034 0123     		movs	r3, #1
 2417 0036 14E0     		b	.L151
 2418              	.L152:
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   else
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_DISABLE(hrtc);
 2419              		.loc 1 1484 0
 2420 0038 2168     		ldr	r1, [r4]
 2421 003a 8A68     		ldr	r2, [r1, #8]
 2422 003c 22F01002 		bic	r2, r2, #16
 2423 0040 8A60     		str	r2, [r1, #8]
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 2424              		.loc 1 1487 0
 2425 0042 2168     		ldr	r1, [r4]
 2426 0044 CA68     		ldr	r2, [r1, #12]
 2427 0046 22F08002 		bic	r2, r2, #128
 2428 004a CA60     		str	r2, [r1, #12]
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2429              		.loc 1 1491 0
 2430 004c 2268     		ldr	r2, [r4]
 2431 004e FF21     		movs	r1, #255
 2432 0050 5162     		str	r1, [r2, #36]
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
ARM GAS  /tmp/ccUVFA1p.s 			page 70


1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2433              		.loc 1 1494 0
 2434 0052 0122     		movs	r2, #1
 2435 0054 6277     		strb	r2, [r4, #29]
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2436              		.loc 1 1497 0
 2437 0056 0022     		movs	r2, #0
 2438 0058 2277     		strb	r2, [r4, #28]
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 2439              		.loc 1 1499 0
 2440 005a 02E0     		b	.L151
 2441              	.LVL199:
 2442              	.L153:
 2443              	.LCFI41:
 2444              		.cfi_def_cfa_offset 0
 2445              		.cfi_restore 4
 2446              		.cfi_restore 14
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 2447              		.loc 1 1461 0
 2448 005c 0223     		movs	r3, #2
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2449              		.loc 1 1500 0
 2450 005e 1846     		mov	r0, r3
 2451              	.LVL200:
 2452 0060 7047     		bx	lr
 2453              	.LVL201:
 2454              	.L151:
 2455              	.LCFI42:
 2456              		.cfi_def_cfa_offset 8
 2457              		.cfi_offset 4, -8
 2458              		.cfi_offset 14, -4
 2459 0062 1846     		mov	r0, r3
 2460 0064 10BD     		pop	{r4, pc}
 2461              		.cfi_endproc
 2462              	.LFE153:
 2464              		.section	.text.HAL_RTCEx_EnableBypassShadow,"ax",%progbits
 2465              		.align	2
 2466              		.global	HAL_RTCEx_EnableBypassShadow
 2467              		.thumb
 2468              		.thumb_func
 2470              	HAL_RTCEx_EnableBypassShadow:
 2471              	.LFB154:
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Enable the Bypass Shadow feature.
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken 
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_EnableBypassShadow(RTC_HandleTypeDef* hrtc)
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 2472              		.loc 1 1510 0
 2473              		.cfi_startproc
ARM GAS  /tmp/ccUVFA1p.s 			page 71


 2474              		@ args = 0, pretend = 0, frame = 0
 2475              		@ frame_needed = 0, uses_anonymous_args = 0
 2476              		@ link register save eliminated.
 2477              	.LVL202:
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2478              		.loc 1 1512 0
 2479 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 2480 0002 012B     		cmp	r3, #1
 2481 0004 16D0     		beq	.L158
 2482              		.loc 1 1512 0 is_stmt 0 discriminator 2
 2483 0006 0122     		movs	r2, #1
 2484 0008 0277     		strb	r2, [r0, #28]
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2485              		.loc 1 1514 0 is_stmt 1 discriminator 2
 2486 000a 0223     		movs	r3, #2
 2487 000c 4377     		strb	r3, [r0, #29]
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2488              		.loc 1 1517 0 discriminator 2
 2489 000e 0368     		ldr	r3, [r0]
 2490 0010 CA21     		movs	r1, #202
 2491 0012 5962     		str	r1, [r3, #36]
 2492 0014 0368     		ldr	r3, [r0]
 2493 0016 5321     		movs	r1, #83
 2494 0018 5962     		str	r1, [r3, #36]
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Set the BYPSHAD bit */
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint8_t)RTC_CR_BYPSHAD;
 2495              		.loc 1 1520 0 discriminator 2
 2496 001a 0168     		ldr	r1, [r0]
 2497 001c 8B68     		ldr	r3, [r1, #8]
 2498 001e 43F02003 		orr	r3, r3, #32
 2499 0022 8B60     		str	r3, [r1, #8]
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2500              		.loc 1 1523 0 discriminator 2
 2501 0024 0368     		ldr	r3, [r0]
 2502 0026 FF21     		movs	r1, #255
 2503 0028 5962     		str	r1, [r3, #36]
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2504              		.loc 1 1526 0 discriminator 2
 2505 002a 4277     		strb	r2, [r0, #29]
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2506              		.loc 1 1529 0 discriminator 2
 2507 002c 0023     		movs	r3, #0
 2508 002e 0377     		strb	r3, [r0, #28]
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 2509              		.loc 1 1531 0 discriminator 2
ARM GAS  /tmp/ccUVFA1p.s 			page 72


 2510 0030 1846     		mov	r0, r3
 2511              	.LVL203:
 2512 0032 7047     		bx	lr
 2513              	.LVL204:
 2514              	.L158:
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 2515              		.loc 1 1512 0
 2516 0034 0220     		movs	r0, #2
 2517              	.LVL205:
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2518              		.loc 1 1532 0
 2519 0036 7047     		bx	lr
 2520              		.cfi_endproc
 2521              	.LFE154:
 2523              		.section	.text.HAL_RTCEx_DisableBypassShadow,"ax",%progbits
 2524              		.align	2
 2525              		.global	HAL_RTCEx_DisableBypassShadow
 2526              		.thumb
 2527              		.thumb_func
 2529              	HAL_RTCEx_DisableBypassShadow:
 2530              	.LFB155:
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Disable the Bypass Shadow feature.
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DisableBypassShadow(RTC_HandleTypeDef* hrtc)
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 2531              		.loc 1 1542 0
 2532              		.cfi_startproc
 2533              		@ args = 0, pretend = 0, frame = 0
 2534              		@ frame_needed = 0, uses_anonymous_args = 0
 2535              		@ link register save eliminated.
 2536              	.LVL206:
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2537              		.loc 1 1544 0
 2538 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 2539 0002 012B     		cmp	r3, #1
 2540 0004 16D0     		beq	.L161
 2541              		.loc 1 1544 0 is_stmt 0 discriminator 2
 2542 0006 0122     		movs	r2, #1
 2543 0008 0277     		strb	r2, [r0, #28]
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2544              		.loc 1 1546 0 is_stmt 1 discriminator 2
 2545 000a 0223     		movs	r3, #2
 2546 000c 4377     		strb	r3, [r0, #29]
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2547              		.loc 1 1549 0 discriminator 2
 2548 000e 0368     		ldr	r3, [r0]
 2549 0010 CA21     		movs	r1, #202
ARM GAS  /tmp/ccUVFA1p.s 			page 73


 2550 0012 5962     		str	r1, [r3, #36]
 2551 0014 0368     		ldr	r3, [r0]
 2552 0016 5321     		movs	r1, #83
 2553 0018 5962     		str	r1, [r3, #36]
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Reset the BYPSHAD bit */
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= ((uint8_t)~RTC_CR_BYPSHAD);
 2554              		.loc 1 1552 0 discriminator 2
 2555 001a 0168     		ldr	r1, [r0]
 2556 001c 8B68     		ldr	r3, [r1, #8]
 2557 001e 03F0DF03 		and	r3, r3, #223
 2558 0022 8B60     		str	r3, [r1, #8]
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2559              		.loc 1 1555 0 discriminator 2
 2560 0024 0368     		ldr	r3, [r0]
 2561 0026 FF21     		movs	r1, #255
 2562 0028 5962     		str	r1, [r3, #36]
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2563              		.loc 1 1558 0 discriminator 2
 2564 002a 4277     		strb	r2, [r0, #29]
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2565              		.loc 1 1561 0 discriminator 2
 2566 002c 0023     		movs	r3, #0
 2567 002e 0377     		strb	r3, [r0, #28]
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 2568              		.loc 1 1563 0 discriminator 2
 2569 0030 1846     		mov	r0, r3
 2570              	.LVL207:
 2571 0032 7047     		bx	lr
 2572              	.LVL208:
 2573              	.L161:
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 2574              		.loc 1 1544 0
 2575 0034 0220     		movs	r0, #2
 2576              	.LVL209:
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2577              		.loc 1 1564 0
 2578 0036 7047     		bx	lr
 2579              		.cfi_endproc
 2580              	.LFE155:
 2582              		.section	.text.HAL_RTCEx_AlarmBEventCallback,"ax",%progbits
 2583              		.align	2
 2584              		.weak	HAL_RTCEx_AlarmBEventCallback
 2585              		.thumb
 2586              		.thumb_func
 2588              	HAL_RTCEx_AlarmBEventCallback:
 2589              	.LFB156:
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @}
ARM GAS  /tmp/ccUVFA1p.s 			page 74


1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group4 Extended features functions
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief    Extended features functions
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** @verbatim   
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  ===============================================================================
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                  ##### Extended features functions #####
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  ===============================================================================  
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     [..]  This section provides functions allowing to:
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) RTC Alram B callback
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) RTC Poll for Alarm B request
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** @endverbatim
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @{
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Alarm B callback.
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval None
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_AlarmBEventCallback(RTC_HandleTypeDef *hrtc)
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 2590              		.loc 1 1591 0
 2591              		.cfi_startproc
 2592              		@ args = 0, pretend = 0, frame = 0
 2593              		@ frame_needed = 0, uses_anonymous_args = 0
 2594              		@ link register save eliminated.
 2595              	.LVL210:
 2596 0000 7047     		bx	lr
 2597              		.cfi_endproc
 2598              	.LFE156:
 2600 0002 00BF     		.section	.text.HAL_RTCEx_PollForAlarmBEvent,"ax",%progbits
 2601              		.align	2
 2602              		.global	HAL_RTCEx_PollForAlarmBEvent
 2603              		.thumb
 2604              		.thumb_func
 2606              	HAL_RTCEx_PollForAlarmBEvent:
 2607              	.LFB157:
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             the HAL_RTCEx_AlarmBEventCallback could be implemented in the user file
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    */
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  This function handles AlarmB Polling request.
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForAlarmBEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {  
 2608              		.loc 1 1607 0
ARM GAS  /tmp/ccUVFA1p.s 			page 75


 2609              		.cfi_startproc
 2610              		@ args = 0, pretend = 0, frame = 0
 2611              		@ frame_needed = 0, uses_anonymous_args = 0
 2612              	.LVL211:
 2613              		.loc 1 1607 0
 2614 0000 70B5     		push	{r4, r5, r6, lr}
 2615              	.LCFI43:
 2616              		.cfi_def_cfa_offset 16
 2617              		.cfi_offset 4, -16
 2618              		.cfi_offset 5, -12
 2619              		.cfi_offset 6, -8
 2620              		.cfi_offset 14, -4
 2621 0002 0446     		mov	r4, r0
 2622 0004 0D46     		mov	r5, r1
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 2623              		.loc 1 1608 0
 2624 0006 FFF7FEFF 		bl	HAL_GetTick
 2625              	.LVL212:
 2626 000a 0646     		mov	r6, r0
 2627              	.LVL213:
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) == RESET)
 2628              		.loc 1 1610 0
 2629 000c 0BE0     		b	.L165
 2630              	.LVL214:
 2631              	.L168:
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 2632              		.loc 1 1612 0
 2633 000e B5F1FF3F 		cmp	r5, #-1
 2634 0012 08D0     		beq	.L165
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 2635              		.loc 1 1614 0
 2636 0014 25B1     		cbz	r5, .L166
 2637              		.loc 1 1614 0 is_stmt 0 discriminator 1
 2638 0016 FFF7FEFF 		bl	HAL_GetTick
 2639              	.LVL215:
 2640 001a 801B     		subs	r0, r0, r6
 2641 001c A842     		cmp	r0, r5
 2642 001e 02D9     		bls	.L165
 2643              	.L166:
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2644              		.loc 1 1616 0 is_stmt 1
 2645 0020 0320     		movs	r0, #3
 2646 0022 6077     		strb	r0, [r4, #29]
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2647              		.loc 1 1617 0
 2648 0024 70BD     		pop	{r4, r5, r6, pc}
 2649              	.LVL216:
 2650              	.L165:
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 2651              		.loc 1 1610 0
 2652 0026 2368     		ldr	r3, [r4]
 2653 0028 DA68     		ldr	r2, [r3, #12]
 2654 002a 12F4007F 		tst	r2, #512
ARM GAS  /tmp/ccUVFA1p.s 			page 76


 2655 002e EED0     		beq	.L168
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the Alarm Flag */
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
 2656              		.loc 1 1623 0
 2657 0030 DA68     		ldr	r2, [r3, #12]
 2658 0032 D2B2     		uxtb	r2, r2
 2659 0034 62F42072 		orn	r2, r2, #640
 2660 0038 DA60     		str	r2, [r3, #12]
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 2661              		.loc 1 1626 0
 2662 003a 0123     		movs	r3, #1
 2663 003c 6377     		strb	r3, [r4, #29]
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK; 
 2664              		.loc 1 1628 0
 2665 003e 0020     		movs	r0, #0
1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2666              		.loc 1 1629 0
 2667 0040 70BD     		pop	{r4, r5, r6, pc}
 2668              		.cfi_endproc
 2669              	.LFE157:
 2671              		.text
 2672              	.Letext0:
 2673              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2674              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2675              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 2676              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 2677              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2678              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rtc.h"
 2679              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rtc_ex.h"
 2680              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 2681              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccUVFA1p.s 			page 77


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_rtc_ex.c
     /tmp/ccUVFA1p.s:21     .text.HAL_RTCEx_SetTimeStamp:0000000000000000 $t
     /tmp/ccUVFA1p.s:26     .text.HAL_RTCEx_SetTimeStamp:0000000000000000 HAL_RTCEx_SetTimeStamp
     /tmp/ccUVFA1p.s:113    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000000 $t
     /tmp/ccUVFA1p.s:118    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000000 HAL_RTCEx_SetTimeStamp_IT
     /tmp/ccUVFA1p.s:215    .text.HAL_RTCEx_SetTimeStamp_IT:000000000000006c $d
     /tmp/ccUVFA1p.s:220    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000000 $t
     /tmp/ccUVFA1p.s:225    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000000 HAL_RTCEx_DeactivateTimeStamp
     /tmp/ccUVFA1p.s:289    .text.HAL_RTCEx_GetTimeStamp:0000000000000000 $t
     /tmp/ccUVFA1p.s:294    .text.HAL_RTCEx_GetTimeStamp:0000000000000000 HAL_RTCEx_GetTimeStamp
     /tmp/ccUVFA1p.s:398    .text.HAL_RTCEx_SetTamper:0000000000000000 $t
     /tmp/ccUVFA1p.s:403    .text.HAL_RTCEx_SetTamper:0000000000000000 HAL_RTCEx_SetTamper
     /tmp/ccUVFA1p.s:506    .text.HAL_RTCEx_SetTamper_IT:0000000000000000 $t
     /tmp/ccUVFA1p.s:511    .text.HAL_RTCEx_SetTamper_IT:0000000000000000 HAL_RTCEx_SetTamper_IT
     /tmp/ccUVFA1p.s:628    .text.HAL_RTCEx_SetTamper_IT:0000000000000088 $d
     /tmp/ccUVFA1p.s:633    .text.HAL_RTCEx_DeactivateTamper:0000000000000000 $t
     /tmp/ccUVFA1p.s:638    .text.HAL_RTCEx_DeactivateTamper:0000000000000000 HAL_RTCEx_DeactivateTamper
     /tmp/ccUVFA1p.s:700    .text.HAL_RTCEx_TimeStampEventCallback:0000000000000000 $t
     /tmp/ccUVFA1p.s:705    .text.HAL_RTCEx_TimeStampEventCallback:0000000000000000 HAL_RTCEx_TimeStampEventCallback
     /tmp/ccUVFA1p.s:718    .text.HAL_RTCEx_Tamper1EventCallback:0000000000000000 $t
     /tmp/ccUVFA1p.s:723    .text.HAL_RTCEx_Tamper1EventCallback:0000000000000000 HAL_RTCEx_Tamper1EventCallback
     /tmp/ccUVFA1p.s:736    .text.HAL_RTCEx_Tamper2EventCallback:0000000000000000 $t
     /tmp/ccUVFA1p.s:741    .text.HAL_RTCEx_Tamper2EventCallback:0000000000000000 HAL_RTCEx_Tamper2EventCallback
     /tmp/ccUVFA1p.s:754    .text.HAL_RTCEx_Tamper3EventCallback:0000000000000000 $t
     /tmp/ccUVFA1p.s:759    .text.HAL_RTCEx_Tamper3EventCallback:0000000000000000 HAL_RTCEx_Tamper3EventCallback
     /tmp/ccUVFA1p.s:772    .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000000 $t
     /tmp/ccUVFA1p.s:777    .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000000 HAL_RTCEx_TamperTimeStampIRQHandler
     /tmp/ccUVFA1p.s:885    .text.HAL_RTCEx_TamperTimeStampIRQHandler:00000000000000ac $d
     /tmp/ccUVFA1p.s:890    .text.HAL_RTCEx_PollForTimeStampEvent:0000000000000000 $t
     /tmp/ccUVFA1p.s:895    .text.HAL_RTCEx_PollForTimeStampEvent:0000000000000000 HAL_RTCEx_PollForTimeStampEvent
     /tmp/ccUVFA1p.s:972    .text.HAL_RTCEx_PollForTamper1Event:0000000000000000 $t
     /tmp/ccUVFA1p.s:977    .text.HAL_RTCEx_PollForTamper1Event:0000000000000000 HAL_RTCEx_PollForTamper1Event
     /tmp/ccUVFA1p.s:1042   .text.HAL_RTCEx_PollForTamper2Event:0000000000000000 $t
     /tmp/ccUVFA1p.s:1047   .text.HAL_RTCEx_PollForTamper2Event:0000000000000000 HAL_RTCEx_PollForTamper2Event
     /tmp/ccUVFA1p.s:1112   .text.HAL_RTCEx_PollForTamper3Event:0000000000000000 $t
     /tmp/ccUVFA1p.s:1117   .text.HAL_RTCEx_PollForTamper3Event:0000000000000000 HAL_RTCEx_PollForTamper3Event
     /tmp/ccUVFA1p.s:1185   .text.HAL_RTCEx_SetWakeUpTimer:0000000000000000 $t
     /tmp/ccUVFA1p.s:1190   .text.HAL_RTCEx_SetWakeUpTimer:0000000000000000 HAL_RTCEx_SetWakeUpTimer
     /tmp/ccUVFA1p.s:1349   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000000 $t
     /tmp/ccUVFA1p.s:1354   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000000 HAL_RTCEx_SetWakeUpTimer_IT
     /tmp/ccUVFA1p.s:1532   .text.HAL_RTCEx_SetWakeUpTimer_IT:00000000000000ec $d
     /tmp/ccUVFA1p.s:1537   .text.HAL_RTCEx_DeactivateWakeUpTimer:0000000000000000 $t
     /tmp/ccUVFA1p.s:1542   .text.HAL_RTCEx_DeactivateWakeUpTimer:0000000000000000 HAL_RTCEx_DeactivateWakeUpTimer
     /tmp/ccUVFA1p.s:1641   .text.HAL_RTCEx_GetWakeUpTimer:0000000000000000 $t
     /tmp/ccUVFA1p.s:1646   .text.HAL_RTCEx_GetWakeUpTimer:0000000000000000 HAL_RTCEx_GetWakeUpTimer
     /tmp/ccUVFA1p.s:1665   .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 $t
     /tmp/ccUVFA1p.s:1670   .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 HAL_RTCEx_WakeUpTimerEventCallback
     /tmp/ccUVFA1p.s:1683   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000000 $t
     /tmp/ccUVFA1p.s:1688   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000000 HAL_RTCEx_WakeUpTimerIRQHandler
     /tmp/ccUVFA1p.s:1729   .text.HAL_RTCEx_WakeUpTimerIRQHandler:000000000000002c $d
     /tmp/ccUVFA1p.s:1734   .text.HAL_RTCEx_PollForWakeUpTimerEvent:0000000000000000 $t
     /tmp/ccUVFA1p.s:1739   .text.HAL_RTCEx_PollForWakeUpTimerEvent:0000000000000000 HAL_RTCEx_PollForWakeUpTimerEvent
     /tmp/ccUVFA1p.s:1804   .text.HAL_RTCEx_BKUPWrite:0000000000000000 $t
     /tmp/ccUVFA1p.s:1809   .text.HAL_RTCEx_BKUPWrite:0000000000000000 HAL_RTCEx_BKUPWrite
     /tmp/ccUVFA1p.s:1828   .text.HAL_RTCEx_BKUPRead:0000000000000000 $t
     /tmp/ccUVFA1p.s:1833   .text.HAL_RTCEx_BKUPRead:0000000000000000 HAL_RTCEx_BKUPRead
ARM GAS  /tmp/ccUVFA1p.s 			page 78


     /tmp/ccUVFA1p.s:1854   .text.HAL_RTCEx_SetSmoothCalib:0000000000000000 $t
     /tmp/ccUVFA1p.s:1859   .text.HAL_RTCEx_SetSmoothCalib:0000000000000000 HAL_RTCEx_SetSmoothCalib
     /tmp/ccUVFA1p.s:1970   .text.HAL_RTCEx_SetSynchroShift:0000000000000000 $t
     /tmp/ccUVFA1p.s:1975   .text.HAL_RTCEx_SetSynchroShift:0000000000000000 HAL_RTCEx_SetSynchroShift
     /tmp/ccUVFA1p.s:2116   .text.HAL_RTCEx_SetCalibrationOutPut:0000000000000000 $t
     /tmp/ccUVFA1p.s:2121   .text.HAL_RTCEx_SetCalibrationOutPut:0000000000000000 HAL_RTCEx_SetCalibrationOutPut
     /tmp/ccUVFA1p.s:2204   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000000000000000 $t
     /tmp/ccUVFA1p.s:2209   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000000000000000 HAL_RTCEx_DeactivateCalibrationOutPut
     /tmp/ccUVFA1p.s:2263   .text.HAL_RTCEx_SetRefClock:0000000000000000 $t
     /tmp/ccUVFA1p.s:2268   .text.HAL_RTCEx_SetRefClock:0000000000000000 HAL_RTCEx_SetRefClock
     /tmp/ccUVFA1p.s:2364   .text.HAL_RTCEx_DeactivateRefClock:0000000000000000 $t
     /tmp/ccUVFA1p.s:2369   .text.HAL_RTCEx_DeactivateRefClock:0000000000000000 HAL_RTCEx_DeactivateRefClock
     /tmp/ccUVFA1p.s:2465   .text.HAL_RTCEx_EnableBypassShadow:0000000000000000 $t
     /tmp/ccUVFA1p.s:2470   .text.HAL_RTCEx_EnableBypassShadow:0000000000000000 HAL_RTCEx_EnableBypassShadow
     /tmp/ccUVFA1p.s:2524   .text.HAL_RTCEx_DisableBypassShadow:0000000000000000 $t
     /tmp/ccUVFA1p.s:2529   .text.HAL_RTCEx_DisableBypassShadow:0000000000000000 HAL_RTCEx_DisableBypassShadow
     /tmp/ccUVFA1p.s:2583   .text.HAL_RTCEx_AlarmBEventCallback:0000000000000000 $t
     /tmp/ccUVFA1p.s:2588   .text.HAL_RTCEx_AlarmBEventCallback:0000000000000000 HAL_RTCEx_AlarmBEventCallback
     /tmp/ccUVFA1p.s:2601   .text.HAL_RTCEx_PollForAlarmBEvent:0000000000000000 $t
     /tmp/ccUVFA1p.s:2606   .text.HAL_RTCEx_PollForAlarmBEvent:0000000000000000 HAL_RTCEx_PollForAlarmBEvent
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RTC_Bcd2ToByte
HAL_GetTick
HAL_RTC_WaitForSynchro
RTC_EnterInitMode
