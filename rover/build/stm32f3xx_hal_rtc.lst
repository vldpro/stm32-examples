ARM GAS  /tmp/ccyGknj4.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_hal_rtc.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_RTC_MspInit,"ax",%progbits
  21              		.align	2
  22              		.weak	HAL_RTC_MspInit
  23              		.thumb
  24              		.thumb_func
  26              	HAL_RTC_MspInit:
  27              	.LFB125:
  28              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @file    stm32f3xx_hal_rtc.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief   RTC HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          functionalities of the Real-Time Clock (RTC) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *           + Initialization
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *           + Calendar (Time and Date) configuration
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *           + Alarms (Alarm A and Alarm B) configuration
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *           + WakeUp Timer configuration
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *           + TimeStamp configuration
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *           + Tampers configuration
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *           + Backup Data Registers configuration  
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *           + RTC Tamper and TimeStamp Pins Selection 
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *           + Interrupts and flags management
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   @verbatim
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================     
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                           ##### RTC Operating Condition #####
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] The real-time clock (RTC) and the RTC backup registers can be powered
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          from the VBAT voltage when the main VDD supply is powered off.
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          To retain the content of the RTC backup registers and supply the RTC 
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          when VDD is turned off, VBAT pin can be connected to an optional
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          standby voltage supplied by a battery or by another source.
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] To allow the RTC to operate even when the main digital supply (VDD) 
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          is turned off, the VBAT pin powers the following blocks:
ARM GAS  /tmp/ccyGknj4.s 			page 2


  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) The RTC
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) The LSE oscillator
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) PC13 to PC15 I/Os (when available)
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] When the backup domain is supplied by VDD (analog switch connected 
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          to VDD), the following functions are available:
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) PC14 and PC15 can be used as either GPIO or LSE pins
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) PC13 can be used as a GPIO or as the RTC_OUT pin
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] When the backup domain is supplied by VBAT (analog switch connected 
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          to VBAT because VDD is not present), the following functions are available:
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) PC14 and PC15 can be used as LSE pins only
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) PC13 can be used as the RTC_OUT pin 
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         ##### Backup Domain Reset #####
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] The backup domain reset sets all RTC registers and the RCC_BDCR 
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          register to their reset values. 
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          A backup domain reset is generated when one of the following events
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          occurs:
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) Software reset, triggered by setting the BDRST bit in the 
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                RCC Backup domain control register (RCC_BDCR).
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) VDD or VBAT power on, if both supplies have previously been
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                powered off.
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                    ##### Backup Domain Access #####
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===================================================================
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] After reset, the backup domain (RTC registers, RTC backup data 
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          registers and backup SRAM) is protected against possible unwanted write 
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          accesses.
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] To enable access to the RTC Domain and RTC registers, proceed as follows:
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) Enable the Power Controller (PWR) APB1 interface clock using the
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                __HAL_RCC_PWR_CLK_ENABLE() function.
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) Enable access to RTC domain using the HAL_PWR_EnableBkUpAccess() function.
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) Select the RTC clock source using the __HAL_RCC_RTC_CONFIG() function.
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) Enable RTC Clock using the __HAL_RCC_RTC_ENABLE() function.
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   ##### How to use RTC Driver #####
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===================================================================
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] 
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) Enable the RTC domain access (see description in the section above).
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour 
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             format using the HAL_RTC_Init() function.
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     *** Time and Date configuration ***
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     ===================================
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] 
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) To configure the RTC Calendar (Time and Date) use the HAL_RTC_SetTime() 
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             and HAL_RTC_SetDate() functions.
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) To read the RTC Calendar, use the HAL_RTC_GetTime() and HAL_RTC_GetDate() functions. 
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     *** Alarm configuration ***
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     ===========================
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..]
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) To configure the RTC Alarm use the HAL_RTC_SetAlarm() function. 
ARM GAS  /tmp/ccyGknj4.s 			page 3


  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             You can also configure the RTC Alarm with interrupt mode using the 
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             HAL_RTC_SetAlarm_IT() function.
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) To read the RTC Alarm, use the HAL_RTC_GetAlarm() function.
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     *** RTC Wakeup configuration ***
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     ================================
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] 
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) To configure the RTC Wakeup Clock source and Counter use the HAL_RTC_SetWakeUpTimer()
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             function. You can also configure the RTC Wakeup timer with interrupt mode 
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             using the HAL_RTC_SetWakeUpTimer_IT() function.
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) To read the RTC WakeUp Counter register, use the HAL_RTC_GetWakeUpTimer() 
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             function.
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     *** TimeStamp configuration ***
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     ===============================
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..]
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) Configure the RTC_AF trigger and enables the RTC TimeStamp using the 
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             HAL_RTC_SetTimeStamp() function. You can also configure the RTC TimeStamp with 
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             interrupt mode using the HAL_RTC_SetTimeStamp_IT() function.
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTC_GetTimeStamp()
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             function.
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     *** Tamper configuration ***
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     ============================
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..]
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) Enable the RTC Tamper and Configure the Tamper filter count, trigger Edge 
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             or Level according to the Tamper filter (if equal to 0 Edge else Level) 
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             value, sampling frequency, precharge or discharge and Pull-UP using the 
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             HAL_RTC_SetTamper() function. You can configure RTC Tamper with interrupt 
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             mode using HAL_RTC_SetTamper_IT() function.
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     *** Backup Data Registers configuration ***
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     ===========================================
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..]
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) To write to the RTC Backup Data registers, use the HAL_RTC_BKUPWrite()
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             function.  
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) To read the RTC Backup Data registers, use the HAL_RTC_BKUPRead()
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             function.
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****    
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   ##### RTC and low power modes #####
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===================================================================
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] The MCU can be woken up from a low power mode by an RTC alternate 
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          function.
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] The RTC alternate functions are the RTC alarms (Alarm A and Alarm B), 
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          RTC wakeup, RTC tamper event detection and RTC time stamp event detection.
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          These RTC alternate functions can wake up the system from the Stop and 
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          Standby low power modes.
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] The system can also wake up from low power modes without depending 
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          on an external interrupt (Auto-wakeup mode), by using the RTC alarm 
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          or the RTC wakeup events.
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] The RTC provides a programmable time base for waking up from the 
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          Stop or Standby mode at regular intervals.
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          Wakeup from STOP and Standby modes is possible only when the RTC clock source
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          is LSE or LSI.
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****      
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   @endverbatim
ARM GAS  /tmp/ccyGknj4.s 			page 4


 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   ******************************************************************************
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @attention
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * Redistribution and use in source and binary forms, with or without modification,
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * are permitted provided that the following conditions are met:
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *      this list of conditions and the following disclaimer.
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *      this list of conditions and the following disclaimer in the documentation
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *      and/or other materials provided with the distribution.
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *      may be used to endorse or promote products derived from this software
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *      without specific prior written permission.
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   ******************************************************************************  
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /* Includes ------------------------------------------------------------------*/
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** #include "stm32f3xx_hal.h"
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /** @addtogroup STM32F3xx_HAL_Driver
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @{
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /** @addtogroup RTC
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief RTC HAL module driver
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @{
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** #ifdef HAL_RTC_MODULE_ENABLED
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /* Private typedef -----------------------------------------------------------*/
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /* Private define ------------------------------------------------------------*/
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /* Private macro -------------------------------------------------------------*/
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /* Private variables ---------------------------------------------------------*/
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /* Exported functions ---------------------------------------------------------*/
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @{
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group1
ARM GAS  /tmp/ccyGknj4.s 			page 5


 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *  @brief    Initialization and Configuration functions 
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @verbatim    
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ##### Initialization and de-initialization functions #####
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****    [..] This section provides functions allowing to initialize and configure the 
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          RTC Prescaler (Synchronous and Asynchronous), RTC Hour format, disable 
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          RTC registers Write protection, enter and exit the RTC initialization mode, 
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          RTC registers synchronization check and reference clock detection enable.
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          (#) The RTC Prescaler is programmed to generate the RTC 1Hz time base. 
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              It is split into 2 programmable prescalers to minimize power consumption.
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              (++) A 7-bit asynchronous prescaler and a 15-bit synchronous prescaler.
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              (++) When both prescalers are used, it is recommended to configure the 
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  asynchronous prescaler to a high value to minimize power consumption.
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          (#) All RTC registers are Write protected. Writing to the RTC registers
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              is enabled by writing a key into the Write Protection register, RTC_WPR.
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          (#) To configure the RTC Calendar, user application should enter 
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              initialization mode. In this mode, the calendar counter is stopped 
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              and its value can be updated. When the initialization sequence is 
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              complete, the calendar restarts counting after 4 RTCCLK cycles.
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          (#) To read the calendar through the shadow registers after Calendar 
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              initialization, calendar update or after wakeup from low power modes 
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              the software must first clear the RSF flag. The software must then 
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              wait until it is set again before reading the calendar, which means 
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              that the calendar registers have been correctly copied into the 
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              RTC_TR and RTC_DR shadow registers.The HAL_RTC_WaitForSynchro() function 
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              implements the above software sequence (RSF clear and RSF check).
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @endverbatim
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @{
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Initialize the RTC according to the specified parameters 
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         in the RTC_InitTypeDef structure and initialize the associated handle.
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc RTC handle
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the RTC peripheral state */
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(hrtc == NULL)
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****      return HAL_ERROR;
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the parameters */
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_HOUR_FORMAT(hrtc->Init.HourFormat));
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ASYNCH_PREDIV(hrtc->Init.AsynchPrediv));
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_SYNCH_PREDIV(hrtc->Init.SynchPrediv));
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_OUTPUT(hrtc->Init.OutPut));
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_OUTPUT_POL(hrtc->Init.OutPutPolarity));
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_OUTPUT_TYPE(hrtc->Init.OutPutType));
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(hrtc->State == HAL_RTC_STATE_RESET)
ARM GAS  /tmp/ccyGknj4.s 			page 6


 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Allocate lock resource and initialize it */
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Lock = HAL_UNLOCKED;
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Initialize RTC MSP */
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     HAL_RTC_MspInit(hrtc);
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Set RTC state */  
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;  
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****        
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Set Initialization mode */
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set RTC state */
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     return HAL_ERROR;
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   } 
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   { 
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Clear RTC_CR FMT, OSEL and POL Bits */
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->CR &= ((uint32_t)~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL));
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set RTC_CR register */
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutP
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the RTC PRER */
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->PRER = (uint32_t)(hrtc->Init.SynchPrediv);
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16U);
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Exit Initialization mode */
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* If  CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_ERROR;
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->TAFCR &= (uint32_t)~RTC_TAFCR_ALARMOUTTYPE;
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->TAFCR |= (uint32_t)(hrtc->Init.OutPutType); 
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
ARM GAS  /tmp/ccyGknj4.s 			page 7


 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set RTC state */
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     return HAL_OK;
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  DeInitialize the RTC peripheral.
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc RTC handle
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @note   This function doesn't reset the RTC Backup Data registers.   
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeInit(RTC_HandleTypeDef *hrtc)
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the parameters */
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Set RTC state */
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY; 
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Set Initialization mode */
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set RTC state */
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     return HAL_ERROR;
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }  
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Reset TR, DR and CR registers */
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->TR = 0x00000000U;
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->DR = (RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0);
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->CR &= RTC_CR_WUCKSEL;
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till WUTWF flag is set and if Time out is reached exit */
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     while(((hrtc->Instance->ISR) & RTC_ISR_WUTWF) == (uint32_t)RESET)
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       { 
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
ARM GAS  /tmp/ccyGknj4.s 			page 8


 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Set RTC state */
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_TIMEOUT;
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       } 
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Reset all RTC CR register bits */
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->CR &= 0x00000000U;
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->WUTR = RTC_WUTR_WUT;
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->PRER = ((uint32_t)(RTC_PRER_PREDIV_A | 0x000000FFU));
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = 0x00000000U;        
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = 0x00000000U;
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->SHIFTR = 0x00000000U;
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->CALR = 0x00000000U;
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = 0x00000000U;
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = 0x00000000U;
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Reset ISR register and exit initialization mode */
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ISR = 0x00000000U;
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Reset Tamper and alternate functions configuration register */
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->TAFCR = 0x00000000U;
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* If  RTC_CR_BYPSHAD bit = 0U, wait for synchro else this check is not needed */
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_ERROR;
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }    
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* De-Initialize RTC MSP */
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   HAL_RTC_MspDeInit(hrtc);
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_RESET; 
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Release Lock */
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK;
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Initialize the RTC MSP.
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc RTC handle  
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval None
ARM GAS  /tmp/ccyGknj4.s 			page 9


 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** __weak void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
  29              		.loc 1 432 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE125:
  39 0002 00BF     		.section	.text.HAL_RTC_MspDeInit,"ax",%progbits
  40              		.align	2
  41              		.weak	HAL_RTC_MspDeInit
  42              		.thumb
  43              		.thumb_func
  45              	HAL_RTC_MspDeInit:
  46              	.LFB126:
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   UNUSED(hrtc);
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             the HAL_RTC_MspInit could be implemented in the user file
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****    */ 
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  DeInitialize the RTC MSP.
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc RTC handle 
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval None
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** __weak void HAL_RTC_MspDeInit(RTC_HandleTypeDef* hrtc)
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
  47              		.loc 1 447 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.LVL1:
  53 0000 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE126:
  57 0002 00BF     		.section	.text.HAL_RTC_DeactivateAlarm,"ax",%progbits
  58              		.align	2
  59              		.global	HAL_RTC_DeactivateAlarm
  60              		.thumb
  61              		.thumb_func
  63              	HAL_RTC_DeactivateAlarm:
  64              	.LFB133:
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   UNUSED(hrtc);
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             the HAL_RTC_MspDeInit could be implemented in the user file
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****    */ 
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
ARM GAS  /tmp/ccyGknj4.s 			page 10


 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @}
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group2
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *  @brief   RTC Time and Date functions
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @verbatim   
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ##### RTC Time and Date functions #####
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================  
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Time and Date features
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @endverbatim
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @{
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Set RTC current time.
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc RTC handle
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  sTime Pointer to Time structure
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tmpreg = 0U;
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  /* Check the parameters */
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_DAYLIGHT_SAVING(sTime->DayLightSaving));
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_STORE_OPERATION(sTime->StoreOperation));
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Process Locked */ 
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sTime->Hours));
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     } 
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       sTime->TimeFormat = 0x00U;
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sTime->Hours));
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sTime->Minutes));
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sTime->Seconds));
ARM GAS  /tmp/ccyGknj4.s 			page 11


 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16U) | \
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         (((uint32_t)sTime->TimeFormat) << 16U));  
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sTime->Hours);
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat)); 
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     } 
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       sTime->TimeFormat = 0x00U;
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sTime->Minutes)));
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sTime->Seconds)));
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sTime->Hours) << 16U) | \
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sTime->TimeFormat) << 16U));   
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Set Initialization mode */
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set RTC state */
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Process Unlocked */ 
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     return HAL_ERROR;
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   } 
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set the RTC_TR register */
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****      
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Clear the bits to be configured */
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->CR &= ((uint32_t)~RTC_CR_BCK);
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the RTC_CR register */
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Exit Initialization mode */
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ISR &= ((uint32_t)~RTC_ISR_INIT);
ARM GAS  /tmp/ccyGknj4.s 			page 12


 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* If  CR_BYPSHAD bit = 0U, wait for synchro else this check is not needed */
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {        
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Process Unlocked */ 
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_ERROR;
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****    hrtc->State = HAL_RTC_STATE_READY;
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****    __HAL_UNLOCK(hrtc); 
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****      
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****    return HAL_OK;
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Get RTC current time.
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc RTC handle
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  sTime Pointer to Time structure
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @note  You can use SubSeconds and SecondFraction (sTime structure fields returned) to convert S
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *        value in second fraction ratio with time unit following generic formula:
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *        Second fraction ratio * time_unit= [(SecondFraction-SubSeconds)/(SecondFraction+1)] * ti
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *        This conversion can be performed only if no shift operation is pending (ie. SHFP=0) when
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @note   Call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values 
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         in the higher-order calendar shadow registers.
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tmpreg = 0U;
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the parameters */
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Get subseconds structure field from the corresponding register*/
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sTime->SubSeconds = (uint32_t)(hrtc->Instance->SSR);
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Get SecondFraction structure field from the corresponding register field*/
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sTime->SecondFraction = (uint32_t)(hrtc->Instance->PRER & RTC_PRER_PREDIV_S);
ARM GAS  /tmp/ccyGknj4.s 			page 13


 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Get the TR register */
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   tmpreg = (uint32_t)(hrtc->Instance->TR & RTC_TR_RESERVED_MASK); 
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sTime->Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> 16U);
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8U);
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16U); 
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the input parameters format */
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Convert the time structure parameters to Binary format */
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sTime->Hours = (uint8_t)RTC_Bcd2ToByte(sTime->Hours);
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);  
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK;
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Set RTC current date.
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc RTC handle
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  sDate Pointer to date structure
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Format specifies the format of the entered parameters.
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t datetmpreg = 0U;
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  /* Check the parameters */
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  /* Process Locked */ 
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  __HAL_LOCK(hrtc);
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY; 
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if((Format == RTC_FORMAT_BIN) && ((sDate->Month & 0x10U) == 0x10U))
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_WEEKDAY(sDate->WeekDay));
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {   
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(sDate->Year));
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(sDate->Month));
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(sDate->Date)); 
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
ARM GAS  /tmp/ccyGknj4.s 			page 14


 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****    datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16U) | \
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ((uint32_t)sDate->WeekDay << 13U));   
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {   
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(sDate->Year)));
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(RTC_Bcd2ToByte(sDate->Month)));
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(RTC_Bcd2ToByte(sDate->Date)));
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     datetmpreg = ((((uint32_t)sDate->Year) << 16U) | \
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   ((uint32_t)sDate->Date) | \
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   (((uint32_t)sDate->WeekDay) << 13U));  
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Set Initialization mode */
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set RTC state*/
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Process Unlocked */ 
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     return HAL_ERROR;
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   } 
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set the RTC_DR register */
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->DR = (uint32_t)(datetmpreg & RTC_DR_RESERVED_MASK);
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Exit Initialization mode */
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ISR &= ((uint32_t)~RTC_ISR_INIT);
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* If  CR_BYPSHAD bit = 0U, wait for synchro else this check is not needed */
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       { 
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Process Unlocked */ 
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_ERROR;
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }
ARM GAS  /tmp/ccyGknj4.s 			page 15


 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY ;
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Process Unlocked */ 
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     return HAL_OK;    
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Get RTC current date.
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc RTC handle
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  sDate Pointer to Date structure
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN :  Binary data format 
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD :  BCD data format
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t datetmpreg = 0U;
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the parameters */
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****           
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Get the DR register */
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   datetmpreg = (uint32_t)(hrtc->Instance->DR & RTC_DR_RESERVED_MASK); 
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sDate->Year = (uint8_t)((datetmpreg & (RTC_DR_YT | RTC_DR_YU)) >> 16U);
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8U);
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sDate->Date = (uint8_t)(datetmpreg & (RTC_DR_DT | RTC_DR_DU));
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> 13U); 
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the input parameters format */
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {    
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Convert the date structure parameters to Binary format */
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sDate->Year = (uint8_t)RTC_Bcd2ToByte(sDate->Year);
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);  
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK;
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @}
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group3
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *  @brief   RTC Alarm functions
ARM GAS  /tmp/ccyGknj4.s 			page 16


 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @verbatim   
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ##### RTC Alarm functions #####
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================  
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Alarm feature
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @endverbatim
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @{
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm.
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc RTC handle
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  sAlarm Pointer to Alarm structure
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Form
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the parameters */
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Process Locked */ 
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     } 
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
ARM GAS  /tmp/ccyGknj4.s 			page 17


 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << 16U) | \
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask)); 
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     } 
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(tmpreg));    
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(tmpreg));      
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }  
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << 16U) | \
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));   
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Configure the Alarm A or Alarm B Sub Second registers */
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmS
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
ARM GAS  /tmp/ccyGknj4.s 			page 18


 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Configure the Alarm register */
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(sAlarm->Alarm == RTC_ALARM_A)
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */ 
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET)
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Process Unlocked */ 
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_TIMEOUT;
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }   
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = subsecondtmpreg;
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMA_ENABLE(hrtc);
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */ 
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRB);
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****        
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == RESET)
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Process Unlocked */ 
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_TIMEOUT;
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }  
ARM GAS  /tmp/ccyGknj4.s 			page 19


 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }    
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)tmpreg;
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = subsecondtmpreg;
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMB_ENABLE(hrtc); 
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);   
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Change RTC state */
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Process Unlocked */ 
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK;
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm with Interrupt.
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc RTC handle
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  sAlarm Pointer to Alarm structure
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         is disabled (Use the HAL_RTC_DeactivateAlarm()).   
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @note   The HAL_RTC_SetTime() must be called before enabling the Alarm feature.   
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm_IT(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t F
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the parameters */
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Process Locked */ 
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
ARM GAS  /tmp/ccyGknj4.s 			page 20


1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     } 
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << 16U) | \
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask)); 
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     } 
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(tmpreg));    
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(tmpreg));      
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << 16U) | \
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
ARM GAS  /tmp/ccyGknj4.s 			page 21


1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));     
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Configure the Alarm A or Alarm B Sub Second registers */
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmS
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Configure the Alarm register */
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(sAlarm->Alarm == RTC_ALARM_A)
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Clear flag alarm A */
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tickstart = HAL_GetTick();
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET)
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Process Unlocked */ 
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_TIMEOUT;
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }  
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = subsecondtmpreg;
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMA_ENABLE(hrtc);
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc,RTC_IT_ALRA);
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Clear flag alarm B */
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tickstart = HAL_GetTick();
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == RESET)
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
ARM GAS  /tmp/ccyGknj4.s 			page 22


1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Process Unlocked */ 
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_TIMEOUT;
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }  
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)tmpreg;
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = subsecondtmpreg;
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMB_ENABLE(hrtc);
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc, RTC_IT_ALRB);
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* RTC Alarm Interrupt Configuration: EXTI configuration */
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_IT();
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Process Unlocked */ 
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);  
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK;
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Deactivate the specified RTC Alarm.
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc RTC handle
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Alarm Specifies the Alarm.
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_ALARM_A :  AlarmA
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_ALARM_B :  AlarmB
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeactivateAlarm(RTC_HandleTypeDef *hrtc, uint32_t Alarm)
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
  65              		.loc 1 1188 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              	.LVL2:
  70              		.loc 1 1188 0
  71 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccyGknj4.s 			page 23


  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 16
  74              		.cfi_offset 3, -16
  75              		.cfi_offset 4, -12
  76              		.cfi_offset 5, -8
  77              		.cfi_offset 14, -4
  78              	.LVL3:
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the parameters */
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Process Locked */ 
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
  79              		.loc 1 1195 0
  80 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
  81 0004 012B     		cmp	r3, #1
  82 0006 58D0     		beq	.L11
  83 0008 0446     		mov	r4, r0
  84              		.loc 1 1195 0 is_stmt 0 discriminator 2
  85 000a 0123     		movs	r3, #1
  86 000c 0377     		strb	r3, [r0, #28]
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
  87              		.loc 1 1197 0 is_stmt 1 discriminator 2
  88 000e 0223     		movs	r3, #2
  89 0010 4377     		strb	r3, [r0, #29]
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
  90              		.loc 1 1200 0 discriminator 2
  91 0012 0368     		ldr	r3, [r0]
  92 0014 CA22     		movs	r2, #202
  93 0016 5A62     		str	r2, [r3, #36]
  94 0018 0368     		ldr	r3, [r0]
  95 001a 5322     		movs	r2, #83
  96 001c 5A62     		str	r2, [r3, #36]
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(Alarm == RTC_ALARM_A)
  97              		.loc 1 1202 0 discriminator 2
  98 001e B1F5807F 		cmp	r1, #256
  99 0022 21D1     		bne	.L5
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* AlarmA */
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
 100              		.loc 1 1205 0
 101 0024 0268     		ldr	r2, [r0]
 102 0026 9368     		ldr	r3, [r2, #8]
 103 0028 23F48073 		bic	r3, r3, #256
 104 002c 9360     		str	r3, [r2, #8]
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */ 
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
 105              		.loc 1 1208 0
 106 002e 0268     		ldr	r2, [r0]
 107 0030 9368     		ldr	r3, [r2, #8]
 108 0032 23F48053 		bic	r3, r3, #4096
ARM GAS  /tmp/ccyGknj4.s 			page 24


 109 0036 9360     		str	r3, [r2, #8]
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 110              		.loc 1 1210 0
 111 0038 FFF7FEFF 		bl	HAL_GetTick
 112              	.LVL4:
 113 003c 0546     		mov	r5, r0
 114              	.LVL5:
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET)
 115              		.loc 1 1213 0
 116 003e 0DE0     		b	.L6
 117              	.LVL6:
 118              	.L7:
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 119              		.loc 1 1215 0
 120 0040 FFF7FEFF 		bl	HAL_GetTick
 121              	.LVL7:
 122 0044 401B     		subs	r0, r0, r5
 123 0046 B0F57A7F 		cmp	r0, #1000
 124 004a 07D9     		bls	.L6
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       { 
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 125              		.loc 1 1218 0
 126 004c 2368     		ldr	r3, [r4]
 127 004e FF22     		movs	r2, #255
 128 0050 5A62     		str	r2, [r3, #36]
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
 129              		.loc 1 1220 0
 130 0052 0320     		movs	r0, #3
 131 0054 6077     		strb	r0, [r4, #29]
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Process Unlocked */ 
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 132              		.loc 1 1223 0
 133 0056 0023     		movs	r3, #0
 134 0058 2377     		strb	r3, [r4, #28]
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_TIMEOUT;
 135              		.loc 1 1225 0
 136 005a 38BD     		pop	{r3, r4, r5, pc}
 137              	.LVL8:
 138              	.L6:
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 139              		.loc 1 1213 0
 140 005c 2368     		ldr	r3, [r4]
 141 005e DB68     		ldr	r3, [r3, #12]
 142 0060 13F0010F 		tst	r3, #1
 143 0064 ECD0     		beq	.L7
 144 0066 20E0     		b	.L8
 145              	.LVL9:
 146              	.L5:
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }      
ARM GAS  /tmp/ccyGknj4.s 			page 25


1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* AlarmB */
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
 147              		.loc 1 1232 0
 148 0068 0268     		ldr	r2, [r0]
 149 006a 9368     		ldr	r3, [r2, #8]
 150 006c 23F40073 		bic	r3, r3, #512
 151 0070 9360     		str	r3, [r2, #8]
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */ 
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc,RTC_IT_ALRB);
 152              		.loc 1 1235 0
 153 0072 0268     		ldr	r2, [r0]
 154 0074 9368     		ldr	r3, [r2, #8]
 155 0076 23F40053 		bic	r3, r3, #8192
 156 007a 9360     		str	r3, [r2, #8]
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 157              		.loc 1 1237 0
 158 007c FFF7FEFF 		bl	HAL_GetTick
 159              	.LVL10:
 160 0080 0546     		mov	r5, r0
 161              	.LVL11:
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == RESET)
 162              		.loc 1 1240 0
 163 0082 0DE0     		b	.L9
 164              	.LVL12:
 165              	.L10:
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 166              		.loc 1 1242 0
 167 0084 FFF7FEFF 		bl	HAL_GetTick
 168              	.LVL13:
 169 0088 401B     		subs	r0, r0, r5
 170 008a B0F57A7F 		cmp	r0, #1000
 171 008e 07D9     		bls	.L9
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 172              		.loc 1 1245 0
 173 0090 2368     		ldr	r3, [r4]
 174 0092 FF22     		movs	r2, #255
 175 0094 5A62     		str	r2, [r3, #36]
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
 176              		.loc 1 1247 0
 177 0096 0320     		movs	r0, #3
 178 0098 6077     		strb	r0, [r4, #29]
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Process Unlocked */ 
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 179              		.loc 1 1250 0
ARM GAS  /tmp/ccyGknj4.s 			page 26


 180 009a 0023     		movs	r3, #0
 181 009c 2377     		strb	r3, [r4, #28]
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_TIMEOUT;
 182              		.loc 1 1252 0
 183 009e 38BD     		pop	{r3, r4, r5, pc}
 184              	.LVL14:
 185              	.L9:
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 186              		.loc 1 1240 0
 187 00a0 2368     		ldr	r3, [r4]
 188 00a2 DB68     		ldr	r3, [r3, #12]
 189 00a4 13F0020F 		tst	r3, #2
 190 00a8 ECD0     		beq	.L10
 191              	.L8:
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }    
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 192              		.loc 1 1257 0
 193 00aa 2368     		ldr	r3, [r4]
 194 00ac FF22     		movs	r2, #255
 195 00ae 5A62     		str	r2, [r3, #36]
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 196              		.loc 1 1259 0
 197 00b0 0123     		movs	r3, #1
 198 00b2 6377     		strb	r3, [r4, #29]
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Process Unlocked */ 
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);  
 199              		.loc 1 1262 0
 200 00b4 0020     		movs	r0, #0
 201 00b6 2077     		strb	r0, [r4, #28]
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK; 
 202              		.loc 1 1264 0
 203 00b8 38BD     		pop	{r3, r4, r5, pc}
 204              	.LVL15:
 205              	.L11:
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 206              		.loc 1 1195 0
 207 00ba 0220     		movs	r0, #2
 208              	.LVL16:
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 209              		.loc 1 1265 0
 210 00bc 38BD     		pop	{r3, r4, r5, pc}
 211              		.cfi_endproc
 212              	.LFE133:
 214 00be 00BF     		.section	.text.HAL_RTC_AlarmAEventCallback,"ax",%progbits
 215              		.align	2
 216              		.weak	HAL_RTC_AlarmAEventCallback
 217              		.thumb
 218              		.thumb_func
 220              	HAL_RTC_AlarmAEventCallback:
 221              	.LFB136:
ARM GAS  /tmp/ccyGknj4.s 			page 27


1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Get the RTC Alarm value and masks.
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc RTC handle
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  sAlarm Pointer to Date structure
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Alarm Specifies the Alarm.
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *             @arg RTC_ALARM_A: AlarmA
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *             @arg RTC_ALARM_B: AlarmB  
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Alar
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the parameters */
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(Alarm == RTC_ALARM_A)
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* AlarmA */
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sAlarm->Alarm = RTC_ALARM_A;
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tmpreg = (uint32_t)(hrtc->Instance->ALRMAR);
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR ) & RTC_ALRMASSR_SS);
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sAlarm->Alarm = RTC_ALARM_B;
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tmpreg = (uint32_t)(hrtc->Instance->ALRMBR);
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMBSSR) & RTC_ALRMBSSR_SS);
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Fill the structure with the read parameters */
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmTime.Hours = (uint32_t)((tmpreg & (RTC_ALRMAR_HT | RTC_ALRMAR_HU)) >> 16U);
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> 8U);
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU));
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmTime.TimeFormat = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16U);
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 24U);
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }  
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
ARM GAS  /tmp/ccyGknj4.s 			page 28


1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK;
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Handle Alarm interrupt request.
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc RTC handle
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval None
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** void HAL_RTC_AlarmIRQHandler(RTC_HandleTypeDef* hrtc)
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {  
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Get the AlarmA interrupt source enable status */
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA) != RESET)
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Get the pending status of the AlarmA Interrupt */
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) != RESET)
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       /* AlarmA callback */ 
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       HAL_RTC_AlarmAEventCallback(hrtc);
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       /* Clear the AlarmA interrupt pending bit */
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc,RTC_FLAG_ALRAF);
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Get the AlarmB interrupt source enable status */
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRB) != RESET)
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Get the pending status of the AlarmB Interrupt */
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) != RESET)
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       /* AlarmB callback */ 
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       HAL_RTCEx_AlarmBEventCallback(hrtc);
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       /* Clear the AlarmB interrupt pending bit */
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc,RTC_FLAG_ALRBF);
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Clear the EXTI's line Flag for RTC Alarm */
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_CLEAR_FLAG();
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Change RTC state */
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Alarm A callback.
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc RTC handle
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval None
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** __weak void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef *hrtc)
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 222              		.loc 1 1374 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              		@ link register save eliminated.
ARM GAS  /tmp/ccyGknj4.s 			page 29


 227              	.LVL17:
 228 0000 7047     		bx	lr
 229              		.cfi_endproc
 230              	.LFE136:
 232 0002 00BF     		.section	.text.HAL_RTC_AlarmIRQHandler,"ax",%progbits
 233              		.align	2
 234              		.global	HAL_RTC_AlarmIRQHandler
 235              		.thumb
 236              		.thumb_func
 238              	HAL_RTC_AlarmIRQHandler:
 239              	.LFB135:
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Get the AlarmA interrupt source enable status */
 240              		.loc 1 1332 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              	.LVL18:
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Get the AlarmA interrupt source enable status */
 245              		.loc 1 1332 0
 246 0000 10B5     		push	{r4, lr}
 247              	.LCFI1:
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 4, -8
 250              		.cfi_offset 14, -4
 251 0002 0446     		mov	r4, r0
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 252              		.loc 1 1334 0
 253 0004 0368     		ldr	r3, [r0]
 254 0006 9A68     		ldr	r2, [r3, #8]
 255 0008 12F4805F 		tst	r2, #4096
 256 000c 0BD0     		beq	.L15
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 257              		.loc 1 1337 0
 258 000e DB68     		ldr	r3, [r3, #12]
 259 0010 13F4807F 		tst	r3, #256
 260 0014 07D0     		beq	.L15
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       
 261              		.loc 1 1340 0
 262 0016 FFF7FEFF 		bl	HAL_RTC_AlarmAEventCallback
 263              	.LVL19:
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 264              		.loc 1 1343 0
 265 001a 2268     		ldr	r2, [r4]
 266 001c D368     		ldr	r3, [r2, #12]
 267 001e DBB2     		uxtb	r3, r3
 268 0020 63F4C073 		orn	r3, r3, #384
 269 0024 D360     		str	r3, [r2, #12]
 270              	.L15:
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 271              		.loc 1 1348 0
 272 0026 2368     		ldr	r3, [r4]
 273 0028 9A68     		ldr	r2, [r3, #8]
 274 002a 12F4005F 		tst	r2, #8192
 275 002e 0CD0     		beq	.L16
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 276              		.loc 1 1351 0
 277 0030 DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccyGknj4.s 			page 30


 278 0032 13F4007F 		tst	r3, #512
 279 0036 08D0     		beq	.L16
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       
 280              		.loc 1 1354 0
 281 0038 2046     		mov	r0, r4
 282 003a FFF7FEFF 		bl	HAL_RTCEx_AlarmBEventCallback
 283              	.LVL20:
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 284              		.loc 1 1357 0
 285 003e 2268     		ldr	r2, [r4]
 286 0040 D368     		ldr	r3, [r2, #12]
 287 0042 DBB2     		uxtb	r3, r3
 288 0044 63F42073 		orn	r3, r3, #640
 289 0048 D360     		str	r3, [r2, #12]
 290              	.L16:
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 291              		.loc 1 1362 0
 292 004a 4FF40032 		mov	r2, #131072
 293 004e 024B     		ldr	r3, .L18
 294 0050 5A61     		str	r2, [r3, #20]
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 295              		.loc 1 1365 0
 296 0052 0123     		movs	r3, #1
 297 0054 6377     		strb	r3, [r4, #29]
 298 0056 10BD     		pop	{r4, pc}
 299              	.LVL21:
 300              	.L19:
 301              		.align	2
 302              	.L18:
 303 0058 00040140 		.word	1073808384
 304              		.cfi_endproc
 305              	.LFE135:
 307              		.section	.text.HAL_RTC_PollForAlarmAEvent,"ax",%progbits
 308              		.align	2
 309              		.global	HAL_RTC_PollForAlarmAEvent
 310              		.thumb
 311              		.thumb_func
 313              	HAL_RTC_PollForAlarmAEvent:
 314              	.LFB137:
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   UNUSED(hrtc);
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             the HAL_RTC_AlarmAEventCallback could be implemented in the user file
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****    */
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Handle AlarmA Polling request.
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc RTC handle
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Timeout Timeout duration
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_PollForAlarmAEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {  
 315              		.loc 1 1390 0
 316              		.cfi_startproc
ARM GAS  /tmp/ccyGknj4.s 			page 31


 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              	.LVL22:
 320 0000 70B5     		push	{r4, r5, r6, lr}
 321              	.LCFI2:
 322              		.cfi_def_cfa_offset 16
 323              		.cfi_offset 4, -16
 324              		.cfi_offset 5, -12
 325              		.cfi_offset 6, -8
 326              		.cfi_offset 14, -4
 327 0002 0446     		mov	r4, r0
 328 0004 0D46     		mov	r5, r1
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = HAL_GetTick();   
 329              		.loc 1 1392 0
 330 0006 FFF7FEFF 		bl	HAL_GetTick
 331              	.LVL23:
 332 000a 0646     		mov	r6, r0
 333              	.LVL24:
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) == RESET)
 334              		.loc 1 1394 0
 335 000c 0BE0     		b	.L22
 336              	.LVL25:
 337              	.L25:
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if(Timeout != HAL_MAX_DELAY)
 338              		.loc 1 1396 0
 339 000e B5F1FF3F 		cmp	r5, #-1
 340 0012 08D0     		beq	.L22
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 341              		.loc 1 1398 0
 342 0014 25B1     		cbz	r5, .L23
 343              		.loc 1 1398 0 is_stmt 0 discriminator 1
 344 0016 FFF7FEFF 		bl	HAL_GetTick
 345              	.LVL26:
 346 001a 801B     		subs	r0, r0, r6
 347 001c A842     		cmp	r0, r5
 348 001e 02D9     		bls	.L22
 349              	.L23:
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 350              		.loc 1 1400 0 is_stmt 1
 351 0020 0320     		movs	r0, #3
 352 0022 6077     		strb	r0, [r4, #29]
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_TIMEOUT;
 353              		.loc 1 1401 0
 354 0024 70BD     		pop	{r4, r5, r6, pc}
 355              	.LVL27:
 356              	.L22:
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 357              		.loc 1 1394 0
 358 0026 2368     		ldr	r3, [r4]
 359 0028 DA68     		ldr	r2, [r3, #12]
 360 002a 12F4807F 		tst	r2, #256
 361 002e EED0     		beq	.L25
ARM GAS  /tmp/ccyGknj4.s 			page 32


1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Clear the Alarm interrupt pending bit */
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
 362              		.loc 1 1407 0
 363 0030 DA68     		ldr	r2, [r3, #12]
 364 0032 D2B2     		uxtb	r2, r2
 365 0034 62F4C072 		orn	r2, r2, #384
 366 0038 DA60     		str	r2, [r3, #12]
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Change RTC state */
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 367              		.loc 1 1410 0
 368 003a 0123     		movs	r3, #1
 369 003c 6377     		strb	r3, [r4, #29]
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK;  
 370              		.loc 1 1412 0
 371 003e 0020     		movs	r0, #0
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 372              		.loc 1 1413 0
 373 0040 70BD     		pop	{r4, r5, r6, pc}
 374              		.cfi_endproc
 375              	.LFE137:
 377 0042 00BF     		.section	.text.HAL_RTC_WaitForSynchro,"ax",%progbits
 378              		.align	2
 379              		.global	HAL_RTC_WaitForSynchro
 380              		.thumb
 381              		.thumb_func
 383              	HAL_RTC_WaitForSynchro:
 384              	.LFB138:
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @}
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /** @@addtogroup RTC_Exported_Functions_Group4 Peripheral Control functions 
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *  @brief   Peripheral Control functions 
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @verbatim   
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                      ##### Peripheral Control functions #####
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================  
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..]
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     This subsection provides functions allowing to
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       (+) Wait for RTC Time and Date Synchronization
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @endverbatim
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @{
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Wait until the RTC Time and Date registers (RTC_TR and RTC_DR) are
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         synchronized with RTC APB clock.
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @note   The RTC Resynchronization mode is write protected, use the 
ARM GAS  /tmp/ccyGknj4.s 			page 33


1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function. 
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @note   To read the calendar through the shadow registers after Calendar 
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         initialization, calendar update or after wakeup from low power modes 
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         the software must first clear the RSF flag. 
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         The software must then wait until it is set again before reading 
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         the calendar, which means that the calendar registers have been 
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         correctly copied into the RTC_TR and RTC_DR shadow registers.   
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc RTC handle
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef* hrtc)
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 385              		.loc 1 1449 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              	.LVL28:
 390 0000 38B5     		push	{r3, r4, r5, lr}
 391              	.LCFI3:
 392              		.cfi_def_cfa_offset 16
 393              		.cfi_offset 3, -16
 394              		.cfi_offset 4, -12
 395              		.cfi_offset 5, -8
 396              		.cfi_offset 14, -4
 397 0002 0446     		mov	r4, r0
 398              	.LVL29:
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Clear RSF flag */
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
 399              		.loc 1 1453 0
 400 0004 0268     		ldr	r2, [r0]
 401 0006 D368     		ldr	r3, [r2, #12]
 402 0008 23F0A003 		bic	r3, r3, #160
 403 000c D360     		str	r3, [r2, #12]
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   tickstart = HAL_GetTick();
 404              		.loc 1 1455 0
 405 000e FFF7FEFF 		bl	HAL_GetTick
 406              	.LVL30:
 407 0012 0546     		mov	r5, r0
 408              	.LVL31:
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Wait the registers to be synchronised */
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   while((hrtc->Instance->ISR & RTC_ISR_RSF) == (uint32_t)RESET)
 409              		.loc 1 1458 0
 410 0014 05E0     		b	.L28
 411              	.LVL32:
 412              	.L30:
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 413              		.loc 1 1460 0
 414 0016 FFF7FEFF 		bl	HAL_GetTick
 415              	.LVL33:
 416 001a 401B     		subs	r0, r0, r5
 417 001c B0F57A7F 		cmp	r0, #1000
 418 0020 06D8     		bhi	.L31
ARM GAS  /tmp/ccyGknj4.s 			page 34


 419              	.L28:
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 420              		.loc 1 1458 0
 421 0022 2368     		ldr	r3, [r4]
 422 0024 DB68     		ldr	r3, [r3, #12]
 423 0026 13F0200F 		tst	r3, #32
 424 002a F4D0     		beq	.L30
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {       
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       return HAL_TIMEOUT;
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     } 
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK;
 425              		.loc 1 1466 0
 426 002c 0020     		movs	r0, #0
 427 002e 38BD     		pop	{r3, r4, r5, pc}
 428              	.LVL34:
 429              	.L31:
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     } 
 430              		.loc 1 1462 0
 431 0030 0320     		movs	r0, #3
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 432              		.loc 1 1467 0
 433 0032 38BD     		pop	{r3, r4, r5, pc}
 434              		.cfi_endproc
 435              	.LFE138:
 437              		.section	.text.HAL_RTC_GetState,"ax",%progbits
 438              		.align	2
 439              		.global	HAL_RTC_GetState
 440              		.thumb
 441              		.thumb_func
 443              	HAL_RTC_GetState:
 444              	.LFB139:
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @}
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /** @@addtogroup RTC_Exported_Functions_Group5 Peripheral State functions
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *  @brief   Peripheral State functions 
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @verbatim   
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                      ##### Peripheral State functions #####
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================  
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..]
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     This subsection provides functions allowing to
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       (+) Get RTC state
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @endverbatim
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @{
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Return the RTC handle state.
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc RTC handle
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL state
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
ARM GAS  /tmp/ccyGknj4.s 			page 35


1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_RTCStateTypeDef HAL_RTC_GetState(RTC_HandleTypeDef* hrtc)
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 445              		.loc 1 1493 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              		@ link register save eliminated.
 450              	.LVL35:
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Return RTC handle state */
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return hrtc->State;
 451              		.loc 1 1495 0
 452 0000 407F     		ldrb	r0, [r0, #29]	@ zero_extendqisi2
 453              	.LVL36:
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 454              		.loc 1 1496 0
 455 0002 7047     		bx	lr
 456              		.cfi_endproc
 457              	.LFE139:
 459              		.section	.text.RTC_EnterInitMode,"ax",%progbits
 460              		.align	2
 461              		.global	RTC_EnterInitMode
 462              		.thumb
 463              		.thumb_func
 465              	RTC_EnterInitMode:
 466              	.LFB140:
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @}
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @}
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /** @@addtogroup RTC_Private_Functions RTC Private Functions
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @{
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Enter the RTC Initialization mode.
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function.
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc RTC handle
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval An ErrorStatus enumeration value:
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          - HAL_OK : RTC is in Init mode
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          - HAL_TIMEOUT : RTC is not in Init mode and in Timeout 
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef* hrtc)
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 467              		.loc 1 1520 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471              	.LVL37:
 472 0000 38B5     		push	{r3, r4, r5, lr}
 473              	.LCFI4:
 474              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccyGknj4.s 			page 36


 475              		.cfi_offset 3, -16
 476              		.cfi_offset 4, -12
 477              		.cfi_offset 5, -8
 478              		.cfi_offset 14, -4
 479              	.LVL38:
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check if the Initialization mode is set */
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 480              		.loc 1 1524 0
 481 0002 0368     		ldr	r3, [r0]
 482 0004 DA68     		ldr	r2, [r3, #12]
 483 0006 12F0400F 		tst	r2, #64
 484 000a 14D1     		bne	.L38
 485 000c 0446     		mov	r4, r0
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set the Initialization mode */
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
 486              		.loc 1 1527 0
 487 000e 4FF0FF32 		mov	r2, #-1
 488 0012 DA60     		str	r2, [r3, #12]
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 489              		.loc 1 1529 0
 490 0014 FFF7FEFF 		bl	HAL_GetTick
 491              	.LVL39:
 492 0018 0546     		mov	r5, r0
 493              	.LVL40:
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     while((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 494              		.loc 1 1531 0
 495 001a 05E0     		b	.L36
 496              	.LVL41:
 497              	.L37:
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 498              		.loc 1 1533 0
 499 001c FFF7FEFF 		bl	HAL_GetTick
 500              	.LVL42:
 501 0020 401B     		subs	r0, r0, r5
 502 0022 B0F57A7F 		cmp	r0, #1000
 503 0026 08D8     		bhi	.L39
 504              	.L36:
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 505              		.loc 1 1531 0
 506 0028 2368     		ldr	r3, [r4]
 507 002a DB68     		ldr	r3, [r3, #12]
 508 002c 13F0400F 		tst	r3, #64
 509 0030 F4D0     		beq	.L37
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {       
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_TIMEOUT;
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       } 
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK;  
 510              		.loc 1 1540 0
ARM GAS  /tmp/ccyGknj4.s 			page 37


 511 0032 0020     		movs	r0, #0
 512 0034 38BD     		pop	{r3, r4, r5, pc}
 513              	.LVL43:
 514              	.L38:
 515 0036 0020     		movs	r0, #0
 516              	.LVL44:
 517 0038 38BD     		pop	{r3, r4, r5, pc}
 518              	.LVL45:
 519              	.L39:
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       } 
 520              		.loc 1 1535 0
 521 003a 0320     		movs	r0, #3
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 522              		.loc 1 1541 0
 523 003c 38BD     		pop	{r3, r4, r5, pc}
 524              		.cfi_endproc
 525              	.LFE140:
 527 003e 00BF     		.section	.text.HAL_RTC_Init,"ax",%progbits
 528              		.align	2
 529              		.global	HAL_RTC_Init
 530              		.thumb
 531              		.thumb_func
 533              	HAL_RTC_Init:
 534              	.LFB123:
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the RTC peripheral state */
 535              		.loc 1 242 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 0, uses_anonymous_args = 0
 539              	.LVL46:
 540 0000 38B5     		push	{r3, r4, r5, lr}
 541              	.LCFI5:
 542              		.cfi_def_cfa_offset 16
 543              		.cfi_offset 3, -16
 544              		.cfi_offset 4, -12
 545              		.cfi_offset 5, -8
 546              		.cfi_offset 14, -4
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 547              		.loc 1 244 0
 548 0002 0028     		cmp	r0, #0
 549 0004 5AD0     		beq	.L46
 550 0006 0446     		mov	r4, r0
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 551              		.loc 1 258 0
 552 0008 437F     		ldrb	r3, [r0, #29]	@ zero_extendqisi2
 553 000a 13F0FF0F 		tst	r3, #255
 554 000e 03D1     		bne	.L43
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 555              		.loc 1 261 0
 556 0010 0023     		movs	r3, #0
 557 0012 0377     		strb	r3, [r0, #28]
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 558              		.loc 1 264 0
 559 0014 FFF7FEFF 		bl	HAL_RTC_MspInit
 560              	.LVL47:
 561              	.L43:
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****        
ARM GAS  /tmp/ccyGknj4.s 			page 38


 562              		.loc 1 268 0
 563 0018 0223     		movs	r3, #2
 564 001a 6377     		strb	r3, [r4, #29]
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 565              		.loc 1 271 0
 566 001c 2368     		ldr	r3, [r4]
 567 001e CA22     		movs	r2, #202
 568 0020 5A62     		str	r2, [r3, #36]
 569 0022 2368     		ldr	r3, [r4]
 570 0024 5322     		movs	r2, #83
 571 0026 5A62     		str	r2, [r3, #36]
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 572              		.loc 1 274 0
 573 0028 2046     		mov	r0, r4
 574 002a FFF7FEFF 		bl	RTC_EnterInitMode
 575              	.LVL48:
 576 002e 0546     		mov	r5, r0
 577 0030 30B1     		cbz	r0, .L44
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 578              		.loc 1 277 0
 579 0032 2368     		ldr	r3, [r4]
 580 0034 FF22     		movs	r2, #255
 581 0036 5A62     		str	r2, [r3, #36]
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 582              		.loc 1 280 0
 583 0038 0423     		movs	r3, #4
 584 003a 6377     		strb	r3, [r4, #29]
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   } 
 585              		.loc 1 282 0
 586 003c 0125     		movs	r5, #1
 587 003e 3EE0     		b	.L42
 588              	.L44:
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set RTC_CR register */
 589              		.loc 1 287 0
 590 0040 2268     		ldr	r2, [r4]
 591 0042 9368     		ldr	r3, [r2, #8]
 592 0044 23F4E003 		bic	r3, r3, #7340032
 593 0048 23F04003 		bic	r3, r3, #64
 594 004c 9360     		str	r3, [r2, #8]
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 595              		.loc 1 289 0
 596 004e 2168     		ldr	r1, [r4]
 597 0050 8868     		ldr	r0, [r1, #8]
 598 0052 6368     		ldr	r3, [r4, #4]
 599 0054 2269     		ldr	r2, [r4, #16]
 600 0056 1A43     		orrs	r2, r2, r3
 601 0058 6369     		ldr	r3, [r4, #20]
 602 005a 1343     		orrs	r3, r3, r2
 603 005c 0343     		orrs	r3, r3, r0
 604 005e 8B60     		str	r3, [r1, #8]
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16U);
 605              		.loc 1 292 0
 606 0060 2368     		ldr	r3, [r4]
 607 0062 E268     		ldr	r2, [r4, #12]
 608 0064 1A61     		str	r2, [r3, #16]
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 609              		.loc 1 293 0
ARM GAS  /tmp/ccyGknj4.s 			page 39


 610 0066 2268     		ldr	r2, [r4]
 611 0068 1369     		ldr	r3, [r2, #16]
 612 006a A168     		ldr	r1, [r4, #8]
 613 006c 43EA0143 		orr	r3, r3, r1, lsl #16
 614 0070 1361     		str	r3, [r2, #16]
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 615              		.loc 1 296 0
 616 0072 2268     		ldr	r2, [r4]
 617 0074 D368     		ldr	r3, [r2, #12]
 618 0076 23F08003 		bic	r3, r3, #128
 619 007a D360     		str	r3, [r2, #12]
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 620              		.loc 1 299 0
 621 007c 2368     		ldr	r3, [r4]
 622 007e 9B68     		ldr	r3, [r3, #8]
 623 0080 13F0200F 		tst	r3, #32
 624 0084 0AD1     		bne	.L45
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
 625              		.loc 1 301 0
 626 0086 2046     		mov	r0, r4
 627 0088 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 628              	.LVL49:
 629 008c 30B1     		cbz	r0, .L45
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 630              		.loc 1 304 0
 631 008e 2368     		ldr	r3, [r4]
 632 0090 FF22     		movs	r2, #255
 633 0092 5A62     		str	r2, [r3, #36]
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 634              		.loc 1 306 0
 635 0094 0423     		movs	r3, #4
 636 0096 6377     		strb	r3, [r4, #29]
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }
 637              		.loc 1 308 0
 638 0098 0125     		movs	r5, #1
 639 009a 10E0     		b	.L42
 640              	.L45:
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->TAFCR |= (uint32_t)(hrtc->Init.OutPutType); 
 641              		.loc 1 312 0
 642 009c 2268     		ldr	r2, [r4]
 643 009e 136C     		ldr	r3, [r2, #64]
 644 00a0 23F48023 		bic	r3, r3, #262144
 645 00a4 1364     		str	r3, [r2, #64]
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 646              		.loc 1 313 0
 647 00a6 2268     		ldr	r2, [r4]
 648 00a8 116C     		ldr	r1, [r2, #64]
 649 00aa A369     		ldr	r3, [r4, #24]
 650 00ac 0B43     		orrs	r3, r3, r1
 651 00ae 1364     		str	r3, [r2, #64]
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 652              		.loc 1 316 0
 653 00b0 2368     		ldr	r3, [r4]
 654 00b2 FF22     		movs	r2, #255
 655 00b4 5A62     		str	r2, [r3, #36]
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 656              		.loc 1 319 0
ARM GAS  /tmp/ccyGknj4.s 			page 40


 657 00b6 0123     		movs	r3, #1
 658 00b8 6377     		strb	r3, [r4, #29]
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 659              		.loc 1 321 0
 660 00ba 00E0     		b	.L42
 661              	.LVL50:
 662              	.L46:
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 663              		.loc 1 246 0
 664 00bc 0125     		movs	r5, #1
 665              	.LVL51:
 666              	.L42:
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 667              		.loc 1 323 0
 668 00be 2846     		mov	r0, r5
 669 00c0 38BD     		pop	{r3, r4, r5, pc}
 670              		.cfi_endproc
 671              	.LFE123:
 673 00c2 00BF     		.section	.text.HAL_RTC_DeInit,"ax",%progbits
 674              		.align	2
 675              		.global	HAL_RTC_DeInit
 676              		.thumb
 677              		.thumb_func
 679              	HAL_RTC_DeInit:
 680              	.LFB124:
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 681              		.loc 1 332 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685              	.LVL52:
 686 0000 70B5     		push	{r4, r5, r6, lr}
 687              	.LCFI6:
 688              		.cfi_def_cfa_offset 16
 689              		.cfi_offset 4, -16
 690              		.cfi_offset 5, -12
 691              		.cfi_offset 6, -8
 692              		.cfi_offset 14, -4
 693 0002 0446     		mov	r4, r0
 694              	.LVL53:
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 695              		.loc 1 339 0
 696 0004 0223     		movs	r3, #2
 697 0006 4377     		strb	r3, [r0, #29]
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 698              		.loc 1 342 0
 699 0008 0368     		ldr	r3, [r0]
 700 000a CA22     		movs	r2, #202
 701 000c 5A62     		str	r2, [r3, #36]
 702 000e 0368     		ldr	r3, [r0]
 703 0010 5322     		movs	r2, #83
 704 0012 5A62     		str	r2, [r3, #36]
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 705              		.loc 1 345 0
 706 0014 FFF7FEFF 		bl	RTC_EnterInitMode
 707              	.LVL54:
 708 0018 30B1     		cbz	r0, .L49
ARM GAS  /tmp/ccyGknj4.s 			page 41


 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 709              		.loc 1 348 0
 710 001a 2368     		ldr	r3, [r4]
 711 001c FF22     		movs	r2, #255
 712 001e 5A62     		str	r2, [r3, #36]
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 713              		.loc 1 351 0
 714 0020 0423     		movs	r3, #4
 715 0022 6377     		strb	r3, [r4, #29]
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }  
 716              		.loc 1 353 0
 717 0024 0126     		movs	r6, #1
 718 0026 54E0     		b	.L50
 719              	.L49:
 720 0028 0646     		mov	r6, r0
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->DR = (RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0);
 721              		.loc 1 358 0
 722 002a 2368     		ldr	r3, [r4]
 723 002c 0022     		movs	r2, #0
 724 002e 1A60     		str	r2, [r3]
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 725              		.loc 1 359 0
 726 0030 2368     		ldr	r3, [r4]
 727 0032 42F20112 		movw	r2, #8449
 728 0036 5A60     		str	r2, [r3, #4]
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 729              		.loc 1 361 0
 730 0038 2268     		ldr	r2, [r4]
 731 003a 9368     		ldr	r3, [r2, #8]
 732 003c 03F00703 		and	r3, r3, #7
 733 0040 9360     		str	r3, [r2, #8]
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 734              		.loc 1 363 0
 735 0042 FFF7FEFF 		bl	HAL_GetTick
 736              	.LVL55:
 737 0046 0546     		mov	r5, r0
 738              	.LVL56:
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 739              		.loc 1 366 0
 740 0048 0BE0     		b	.L51
 741              	.LVL57:
 742              	.L52:
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       { 
 743              		.loc 1 368 0
 744 004a FFF7FEFF 		bl	HAL_GetTick
 745              	.LVL58:
 746 004e 401B     		subs	r0, r0, r5
 747 0050 B0F57A7F 		cmp	r0, #1000
 748 0054 05D9     		bls	.L51
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 749              		.loc 1 371 0
 750 0056 2368     		ldr	r3, [r4]
 751 0058 FF22     		movs	r2, #255
 752 005a 5A62     		str	r2, [r3, #36]
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 753              		.loc 1 374 0
 754 005c 0326     		movs	r6, #3
ARM GAS  /tmp/ccyGknj4.s 			page 42


 755 005e 6677     		strb	r6, [r4, #29]
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       } 
 756              		.loc 1 376 0
 757 0060 37E0     		b	.L50
 758              	.L51:
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 759              		.loc 1 366 0
 760 0062 2368     		ldr	r3, [r4]
 761 0064 DA68     		ldr	r2, [r3, #12]
 762 0066 12F0040F 		tst	r2, #4
 763 006a EED0     		beq	.L52
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->WUTR = RTC_WUTR_WUT;
 764              		.loc 1 381 0
 765 006c 9A68     		ldr	r2, [r3, #8]
 766 006e 0022     		movs	r2, #0
 767 0070 9A60     		str	r2, [r3, #8]
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->PRER = ((uint32_t)(RTC_PRER_PREDIV_A | 0x000000FFU));
 768              		.loc 1 382 0
 769 0072 2368     		ldr	r3, [r4]
 770 0074 4FF6FF71 		movw	r1, #65535
 771 0078 5961     		str	r1, [r3, #20]
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = 0x00000000U;        
 772              		.loc 1 383 0
 773 007a 2368     		ldr	r3, [r4]
 774 007c 1649     		ldr	r1, .L55
 775 007e 1961     		str	r1, [r3, #16]
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = 0x00000000U;
 776              		.loc 1 384 0
 777 0080 2368     		ldr	r3, [r4]
 778 0082 DA61     		str	r2, [r3, #28]
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->SHIFTR = 0x00000000U;
 779              		.loc 1 385 0
 780 0084 2368     		ldr	r3, [r4]
 781 0086 1A62     		str	r2, [r3, #32]
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->CALR = 0x00000000U;
 782              		.loc 1 386 0
 783 0088 2368     		ldr	r3, [r4]
 784 008a DA62     		str	r2, [r3, #44]
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = 0x00000000U;
 785              		.loc 1 387 0
 786 008c 2368     		ldr	r3, [r4]
 787 008e DA63     		str	r2, [r3, #60]
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = 0x00000000U;
 788              		.loc 1 388 0
 789 0090 2368     		ldr	r3, [r4]
 790 0092 5A64     		str	r2, [r3, #68]
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 791              		.loc 1 389 0
 792 0094 2368     		ldr	r3, [r4]
 793 0096 9A64     		str	r2, [r3, #72]
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 794              		.loc 1 392 0
 795 0098 2368     		ldr	r3, [r4]
 796 009a DA60     		str	r2, [r3, #12]
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 797              		.loc 1 395 0
 798 009c 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccyGknj4.s 			page 43


 799 009e 1A64     		str	r2, [r3, #64]
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 800              		.loc 1 398 0
 801 00a0 2368     		ldr	r3, [r4]
 802 00a2 9B68     		ldr	r3, [r3, #8]
 803 00a4 13F0200F 		tst	r3, #32
 804 00a8 0AD1     		bne	.L53
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
 805              		.loc 1 400 0
 806 00aa 2046     		mov	r0, r4
 807 00ac FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 808              	.LVL59:
 809 00b0 30B1     		cbz	r0, .L53
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 810              		.loc 1 403 0
 811 00b2 2368     		ldr	r3, [r4]
 812 00b4 FF22     		movs	r2, #255
 813 00b6 5A62     		str	r2, [r3, #36]
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 814              		.loc 1 405 0
 815 00b8 0423     		movs	r3, #4
 816 00ba 6377     		strb	r3, [r4, #29]
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }
 817              		.loc 1 407 0
 818 00bc 0126     		movs	r6, #1
 819 00be 08E0     		b	.L50
 820              	.L53:
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 821              		.loc 1 413 0
 822 00c0 2368     		ldr	r3, [r4]
 823 00c2 FF22     		movs	r2, #255
 824 00c4 5A62     		str	r2, [r3, #36]
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 825              		.loc 1 416 0
 826 00c6 2046     		mov	r0, r4
 827 00c8 FFF7FEFF 		bl	HAL_RTC_MspDeInit
 828              	.LVL60:
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 829              		.loc 1 418 0
 830 00cc 0023     		movs	r3, #0
 831 00ce 6377     		strb	r3, [r4, #29]
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 832              		.loc 1 421 0
 833 00d0 2377     		strb	r3, [r4, #28]
 834              	.LVL61:
 835              	.L50:
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 836              		.loc 1 424 0
 837 00d2 3046     		mov	r0, r6
 838 00d4 70BD     		pop	{r4, r5, r6, pc}
 839              	.LVL62:
 840              	.L56:
 841 00d6 00BF     		.align	2
 842              	.L55:
 843 00d8 FF007F00 		.word	8323327
 844              		.cfi_endproc
 845              	.LFE124:
ARM GAS  /tmp/ccyGknj4.s 			page 44


 847              		.section	.text.RTC_ByteToBcd2,"ax",%progbits
 848              		.align	2
 849              		.global	RTC_ByteToBcd2
 850              		.thumb
 851              		.thumb_func
 853              	RTC_ByteToBcd2:
 854              	.LFB141:
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Convert a 2 digit decimal to BCD format.
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Value Byte to be converted
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval Converted byte
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** uint8_t RTC_ByteToBcd2(uint8_t Value)
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 855              		.loc 1 1550 0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859              		@ link register save eliminated.
 860              	.LVL63:
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t bcdhigh = 0U;
 861              		.loc 1 1551 0
 862 0000 0023     		movs	r3, #0
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   while(Value >= 10U)
 863              		.loc 1 1553 0
 864 0002 02E0     		b	.L58
 865              	.LVL64:
 866              	.L59:
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     bcdhigh++;
 867              		.loc 1 1555 0
 868 0004 0133     		adds	r3, r3, #1
 869              	.LVL65:
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     Value -= 10U;
 870              		.loc 1 1556 0
 871 0006 0A38     		subs	r0, r0, #10
 872              	.LVL66:
 873 0008 C0B2     		uxtb	r0, r0
 874              	.LVL67:
 875              	.L58:
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 876              		.loc 1 1553 0
 877 000a 0928     		cmp	r0, #9
 878 000c FAD8     		bhi	.L59
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return  ((uint8_t)(bcdhigh << 4U) | Value);
 879              		.loc 1 1559 0
 880 000e 1B01     		lsls	r3, r3, #4
 881              	.LVL68:
 882 0010 DBB2     		uxtb	r3, r3
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 883              		.loc 1 1560 0
 884 0012 1843     		orrs	r0, r0, r3
ARM GAS  /tmp/ccyGknj4.s 			page 45


 885              	.LVL69:
 886 0014 7047     		bx	lr
 887              		.cfi_endproc
 888              	.LFE141:
 890 0016 00BF     		.section	.text.HAL_RTC_SetDate,"ax",%progbits
 891              		.align	2
 892              		.global	HAL_RTC_SetDate
 893              		.thumb
 894              		.thumb_func
 896              	HAL_RTC_SetDate:
 897              	.LFB129:
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t datetmpreg = 0U;
 898              		.loc 1 659 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 0
 901              		@ frame_needed = 0, uses_anonymous_args = 0
 902              	.LVL70:
 903 0000 70B5     		push	{r4, r5, r6, lr}
 904              	.LCFI7:
 905              		.cfi_def_cfa_offset 16
 906              		.cfi_offset 4, -16
 907              		.cfi_offset 5, -12
 908              		.cfi_offset 6, -8
 909              		.cfi_offset 14, -4
 910              	.LVL71:
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 911              		.loc 1 666 0
 912 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 913 0004 012B     		cmp	r3, #1
 914 0006 63D0     		beq	.L67
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 915              		.loc 1 666 0 is_stmt 0 discriminator 2
 916 0008 0123     		movs	r3, #1
 917 000a 0377     		strb	r3, [r0, #28]
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 918              		.loc 1 668 0 is_stmt 1 discriminator 2
 919 000c 0223     		movs	r3, #2
 920 000e 4377     		strb	r3, [r0, #29]
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 921              		.loc 1 670 0 discriminator 2
 922 0010 3AB9     		cbnz	r2, .L62
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 923              		.loc 1 670 0 is_stmt 0 discriminator 1
 924 0012 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 925 0014 13F0100F 		tst	r3, #16
 926 0018 03D0     		beq	.L62
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 927              		.loc 1 672 0 is_stmt 1
 928 001a 23F01003 		bic	r3, r3, #16
 929 001e 0A33     		adds	r3, r3, #10
 930 0020 4B70     		strb	r3, [r1, #1]
 931              	.L62:
 932 0022 0E46     		mov	r6, r1
 933 0024 0446     		mov	r4, r0
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {   
 934              		.loc 1 677 0
 935 0026 82B9     		cbnz	r2, .L63
ARM GAS  /tmp/ccyGknj4.s 			page 46


 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 936              		.loc 1 683 0
 937 0028 C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 938              	.LVL72:
 939 002a FFF7FEFF 		bl	RTC_ByteToBcd2
 940              	.LVL73:
 941 002e 0504     		lsls	r5, r0, #16
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 942              		.loc 1 684 0
 943 0030 7078     		ldrb	r0, [r6, #1]	@ zero_extendqisi2
 944 0032 FFF7FEFF 		bl	RTC_ByteToBcd2
 945              	.LVL74:
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 946              		.loc 1 683 0
 947 0036 45EA0025 		orr	r5, r5, r0, lsl #8
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ((uint32_t)sDate->WeekDay << 13U));   
 948              		.loc 1 685 0
 949 003a B078     		ldrb	r0, [r6, #2]	@ zero_extendqisi2
 950 003c FFF7FEFF 		bl	RTC_ByteToBcd2
 951              	.LVL75:
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 952              		.loc 1 684 0
 953 0040 2843     		orrs	r0, r0, r5
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 954              		.loc 1 686 0
 955 0042 3578     		ldrb	r5, [r6]	@ zero_extendqisi2
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 956              		.loc 1 683 0
 957 0044 40EA4535 		orr	r5, r0, r5, lsl #13
 958              	.LVL76:
 959 0048 09E0     		b	.L64
 960              	.LVL77:
 961              	.L63:
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 962              		.loc 1 694 0
 963 004a CD78     		ldrb	r5, [r1, #3]	@ zero_extendqisi2
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   ((uint32_t)sDate->Date) | \
 964              		.loc 1 695 0
 965 004c 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 966 004e 1B02     		lsls	r3, r3, #8
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 967              		.loc 1 694 0
 968 0050 43EA0545 		orr	r5, r3, r5, lsl #16
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   (((uint32_t)sDate->WeekDay) << 13U));  
 969              		.loc 1 696 0
 970 0054 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   ((uint32_t)sDate->Date) | \
 971              		.loc 1 695 0
 972 0056 2B43     		orrs	r3, r3, r5
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 973              		.loc 1 697 0
 974 0058 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 975              	.LVL78:
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 976              		.loc 1 694 0
 977 005a 43EA4035 		orr	r5, r3, r0, lsl #13
 978              	.LVL79:
ARM GAS  /tmp/ccyGknj4.s 			page 47


 979              	.L64:
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 980              		.loc 1 701 0
 981 005e 2368     		ldr	r3, [r4]
 982 0060 CA22     		movs	r2, #202
 983 0062 5A62     		str	r2, [r3, #36]
 984 0064 2368     		ldr	r3, [r4]
 985 0066 5322     		movs	r2, #83
 986 0068 5A62     		str	r2, [r3, #36]
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 987              		.loc 1 704 0
 988 006a 2046     		mov	r0, r4
 989 006c FFF7FEFF 		bl	RTC_EnterInitMode
 990              	.LVL80:
 991 0070 0646     		mov	r6, r0
 992              	.LVL81:
 993 0072 40B1     		cbz	r0, .L65
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 994              		.loc 1 707 0
 995 0074 2368     		ldr	r3, [r4]
 996 0076 FF22     		movs	r2, #255
 997 0078 5A62     		str	r2, [r3, #36]
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 998              		.loc 1 710 0
 999 007a 0423     		movs	r3, #4
 1000 007c 6377     		strb	r3, [r4, #29]
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1001              		.loc 1 713 0
 1002 007e 0023     		movs	r3, #0
 1003 0080 2377     		strb	r3, [r4, #28]
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   } 
 1004              		.loc 1 715 0
 1005 0082 0126     		movs	r6, #1
 1006 0084 25E0     		b	.L61
 1007              	.L65:
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1008              		.loc 1 720 0
 1009 0086 2368     		ldr	r3, [r4]
 1010 0088 25F07F40 		bic	r0, r5, #-16777216
 1011 008c 20F0C000 		bic	r0, r0, #192
 1012 0090 5860     		str	r0, [r3, #4]
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1013              		.loc 1 723 0
 1014 0092 2268     		ldr	r2, [r4]
 1015 0094 D368     		ldr	r3, [r2, #12]
 1016 0096 23F08003 		bic	r3, r3, #128
 1017 009a D360     		str	r3, [r2, #12]
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1018              		.loc 1 726 0
 1019 009c 2368     		ldr	r3, [r4]
 1020 009e 9B68     		ldr	r3, [r3, #8]
 1021 00a0 13F0200F 		tst	r3, #32
 1022 00a4 0CD1     		bne	.L66
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       { 
 1023              		.loc 1 728 0
 1024 00a6 2046     		mov	r0, r4
 1025 00a8 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
ARM GAS  /tmp/ccyGknj4.s 			page 48


 1026              	.LVL82:
 1027 00ac 40B1     		cbz	r0, .L66
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1028              		.loc 1 731 0
 1029 00ae 2368     		ldr	r3, [r4]
 1030 00b0 FF22     		movs	r2, #255
 1031 00b2 5A62     		str	r2, [r3, #36]
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1032              		.loc 1 733 0
 1033 00b4 0423     		movs	r3, #4
 1034 00b6 6377     		strb	r3, [r4, #29]
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1035              		.loc 1 736 0
 1036 00b8 0023     		movs	r3, #0
 1037 00ba 2377     		strb	r3, [r4, #28]
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }
 1038              		.loc 1 738 0
 1039 00bc 0126     		movs	r6, #1
 1040 00be 08E0     		b	.L61
 1041              	.L66:
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1042              		.loc 1 743 0
 1043 00c0 2368     		ldr	r3, [r4]
 1044 00c2 FF22     		movs	r2, #255
 1045 00c4 5A62     		str	r2, [r3, #36]
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1046              		.loc 1 745 0
 1047 00c6 0123     		movs	r3, #1
 1048 00c8 6377     		strb	r3, [r4, #29]
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1049              		.loc 1 748 0
 1050 00ca 0023     		movs	r3, #0
 1051 00cc 2377     		strb	r3, [r4, #28]
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1052              		.loc 1 750 0
 1053 00ce 00E0     		b	.L61
 1054              	.LVL83:
 1055              	.L67:
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1056              		.loc 1 666 0
 1057 00d0 0226     		movs	r6, #2
 1058              	.LVL84:
 1059              	.L61:
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1060              		.loc 1 752 0
 1061 00d2 3046     		mov	r0, r6
 1062 00d4 70BD     		pop	{r4, r5, r6, pc}
 1063              		.cfi_endproc
 1064              	.LFE129:
 1066 00d6 00BF     		.section	.text.HAL_RTC_SetTime,"ax",%progbits
 1067              		.align	2
 1068              		.global	HAL_RTC_SetTime
 1069              		.thumb
 1070              		.thumb_func
 1072              	HAL_RTC_SetTime:
 1073              	.LFB127:
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tmpreg = 0U;
ARM GAS  /tmp/ccyGknj4.s 			page 49


 1074              		.loc 1 485 0
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 0
 1077              		@ frame_needed = 0, uses_anonymous_args = 0
 1078              	.LVL85:
 1079 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1080              	.LCFI8:
 1081              		.cfi_def_cfa_offset 24
 1082              		.cfi_offset 3, -24
 1083              		.cfi_offset 4, -20
 1084              		.cfi_offset 5, -16
 1085              		.cfi_offset 6, -12
 1086              		.cfi_offset 7, -8
 1087              		.cfi_offset 14, -4
 1088              	.LVL86:
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1089              		.loc 1 494 0
 1090 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1091 0004 012B     		cmp	r3, #1
 1092 0006 74D0     		beq	.L77
 1093 0008 0D46     		mov	r5, r1
 1094 000a 0446     		mov	r4, r0
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1095              		.loc 1 494 0 is_stmt 0 discriminator 2
 1096 000c 0123     		movs	r3, #1
 1097 000e 0377     		strb	r3, [r0, #28]
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1098              		.loc 1 496 0 is_stmt 1 discriminator 2
 1099 0010 0223     		movs	r3, #2
 1100 0012 4377     		strb	r3, [r0, #29]
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 1101              		.loc 1 498 0 discriminator 2
 1102 0014 BAB9     		cbnz	r2, .L71
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1103              		.loc 1 500 0
 1104 0016 0368     		ldr	r3, [r0]
 1105 0018 9B68     		ldr	r3, [r3, #8]
 1106 001a 13F0400F 		tst	r3, #64
 1107 001e 01D1     		bne	.L72
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sTime->Hours));
 1108              		.loc 1 507 0
 1109 0020 0023     		movs	r3, #0
 1110 0022 CB70     		strb	r3, [r1, #3]
 1111              	.L72:
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 1112              		.loc 1 513 0
 1113 0024 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1114              	.LVL87:
 1115 0026 FFF7FEFF 		bl	RTC_ByteToBcd2
 1116              	.LVL88:
 1117 002a 0604     		lsls	r6, r0, #16
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 1118              		.loc 1 514 0
 1119 002c 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 1120 002e FFF7FEFF 		bl	RTC_ByteToBcd2
 1121              	.LVL89:
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
ARM GAS  /tmp/ccyGknj4.s 			page 50


 1122              		.loc 1 513 0
 1123 0032 46EA0026 		orr	r6, r6, r0, lsl #8
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         (((uint32_t)sTime->TimeFormat) << 16U));  
 1124              		.loc 1 515 0
 1125 0036 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 1126 0038 FFF7FEFF 		bl	RTC_ByteToBcd2
 1127              	.LVL90:
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 1128              		.loc 1 514 0
 1129 003c 3043     		orrs	r0, r0, r6
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1130              		.loc 1 516 0
 1131 003e EE78     		ldrb	r6, [r5, #3]	@ zero_extendqisi2
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 1132              		.loc 1 513 0
 1133 0040 40EA0646 		orr	r6, r0, r6, lsl #16
 1134              	.LVL91:
 1135 0044 10E0     		b	.L73
 1136              	.LVL92:
 1137              	.L71:
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1138              		.loc 1 520 0
 1139 0046 0368     		ldr	r3, [r0]
 1140 0048 9B68     		ldr	r3, [r3, #8]
 1141 004a 13F0400F 		tst	r3, #64
 1142 004e 01D1     		bne	.L74
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 1143              		.loc 1 528 0
 1144 0050 0023     		movs	r3, #0
 1145 0052 CB70     		strb	r3, [r1, #3]
 1146              	.L74:
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 1147              		.loc 1 533 0
 1148 0054 2E78     		ldrb	r6, [r5]	@ zero_extendqisi2
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
 1149              		.loc 1 534 0
 1150 0056 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 1151 0058 1B02     		lsls	r3, r3, #8
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 1152              		.loc 1 533 0
 1153 005a 43EA0643 		orr	r3, r3, r6, lsl #16
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sTime->TimeFormat) << 16U));   
 1154              		.loc 1 535 0
 1155 005e AE78     		ldrb	r6, [r5, #2]	@ zero_extendqisi2
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
 1156              		.loc 1 534 0
 1157 0060 3343     		orrs	r3, r3, r6
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1158              		.loc 1 536 0
 1159 0062 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2
 1160              	.LVL93:
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 1161              		.loc 1 533 0
 1162 0064 43EA0046 		orr	r6, r3, r0, lsl #16
 1163              	.LVL94:
 1164              	.L73:
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
ARM GAS  /tmp/ccyGknj4.s 			page 51


 1165              		.loc 1 540 0
 1166 0068 2368     		ldr	r3, [r4]
 1167 006a CA22     		movs	r2, #202
 1168 006c 5A62     		str	r2, [r3, #36]
 1169 006e 2368     		ldr	r3, [r4]
 1170 0070 5322     		movs	r2, #83
 1171 0072 5A62     		str	r2, [r3, #36]
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 1172              		.loc 1 543 0
 1173 0074 2046     		mov	r0, r4
 1174 0076 FFF7FEFF 		bl	RTC_EnterInitMode
 1175              	.LVL95:
 1176 007a 0746     		mov	r7, r0
 1177 007c 40B1     		cbz	r0, .L75
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1178              		.loc 1 546 0
 1179 007e 2368     		ldr	r3, [r4]
 1180 0080 FF22     		movs	r2, #255
 1181 0082 5A62     		str	r2, [r3, #36]
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1182              		.loc 1 549 0
 1183 0084 0423     		movs	r3, #4
 1184 0086 6377     		strb	r3, [r4, #29]
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1185              		.loc 1 552 0
 1186 0088 0023     		movs	r3, #0
 1187 008a 2377     		strb	r3, [r4, #28]
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   } 
 1188              		.loc 1 554 0
 1189 008c 0127     		movs	r7, #1
 1190 008e 31E0     		b	.L70
 1191              	.L75:
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****      
 1192              		.loc 1 559 0
 1193 0090 2368     		ldr	r3, [r4]
 1194 0092 06F07F30 		and	r0, r6, #2139062143
 1195 0096 20F0FE40 		bic	r0, r0, #2130706432
 1196 009a 1860     		str	r0, [r3]
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1197              		.loc 1 562 0
 1198 009c 2268     		ldr	r2, [r4]
 1199 009e 9368     		ldr	r3, [r2, #8]
 1200 00a0 23F48023 		bic	r3, r3, #262144
 1201 00a4 9360     		str	r3, [r2, #8]
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1202              		.loc 1 565 0
 1203 00a6 2168     		ldr	r1, [r4]
 1204 00a8 8868     		ldr	r0, [r1, #8]
 1205 00aa EB68     		ldr	r3, [r5, #12]
 1206 00ac 2A69     		ldr	r2, [r5, #16]
 1207 00ae 1343     		orrs	r3, r3, r2
 1208 00b0 0343     		orrs	r3, r3, r0
 1209 00b2 8B60     		str	r3, [r1, #8]
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1210              		.loc 1 568 0
 1211 00b4 2268     		ldr	r2, [r4]
 1212 00b6 D368     		ldr	r3, [r2, #12]
ARM GAS  /tmp/ccyGknj4.s 			page 52


 1213 00b8 23F08003 		bic	r3, r3, #128
 1214 00bc D360     		str	r3, [r2, #12]
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1215              		.loc 1 571 0
 1216 00be 2368     		ldr	r3, [r4]
 1217 00c0 9B68     		ldr	r3, [r3, #8]
 1218 00c2 13F0200F 		tst	r3, #32
 1219 00c6 0CD1     		bne	.L76
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {        
 1220              		.loc 1 573 0
 1221 00c8 2046     		mov	r0, r4
 1222 00ca FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 1223              	.LVL96:
 1224 00ce 40B1     		cbz	r0, .L76
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1225              		.loc 1 576 0
 1226 00d0 2368     		ldr	r3, [r4]
 1227 00d2 FF22     		movs	r2, #255
 1228 00d4 5A62     		str	r2, [r3, #36]
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1229              		.loc 1 578 0
 1230 00d6 0423     		movs	r3, #4
 1231 00d8 6377     		strb	r3, [r4, #29]
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1232              		.loc 1 581 0
 1233 00da 0023     		movs	r3, #0
 1234 00dc 2377     		strb	r3, [r4, #28]
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }
 1235              		.loc 1 583 0
 1236 00de 0127     		movs	r7, #1
 1237 00e0 08E0     		b	.L70
 1238              	.L76:
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1239              		.loc 1 588 0
 1240 00e2 2368     		ldr	r3, [r4]
 1241 00e4 FF22     		movs	r2, #255
 1242 00e6 5A62     		str	r2, [r3, #36]
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1243              		.loc 1 590 0
 1244 00e8 0123     		movs	r3, #1
 1245 00ea 6377     		strb	r3, [r4, #29]
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****      
 1246              		.loc 1 592 0
 1247 00ec 0023     		movs	r3, #0
 1248 00ee 2377     		strb	r3, [r4, #28]
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1249              		.loc 1 594 0
 1250 00f0 00E0     		b	.L70
 1251              	.LVL97:
 1252              	.L77:
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1253              		.loc 1 494 0
 1254 00f2 0227     		movs	r7, #2
 1255              	.LVL98:
 1256              	.L70:
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1257              		.loc 1 596 0
ARM GAS  /tmp/ccyGknj4.s 			page 53


 1258 00f4 3846     		mov	r0, r7
 1259 00f6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1260              		.cfi_endproc
 1261              	.LFE127:
 1263              		.section	.text.HAL_RTC_SetAlarm,"ax",%progbits
 1264              		.align	2
 1265              		.global	HAL_RTC_SetAlarm
 1266              		.thumb
 1267              		.thumb_func
 1269              	HAL_RTC_SetAlarm:
 1270              	.LFB131:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 1271              		.loc 1 819 0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 0
 1274              		@ frame_needed = 0, uses_anonymous_args = 0
 1275              	.LVL99:
 1276 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1277              	.LCFI9:
 1278              		.cfi_def_cfa_offset 24
 1279              		.cfi_offset 3, -24
 1280              		.cfi_offset 4, -20
 1281              		.cfi_offset 5, -16
 1282              		.cfi_offset 6, -12
 1283              		.cfi_offset 7, -8
 1284              		.cfi_offset 14, -4
 1285              	.LVL100:
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1286              		.loc 1 832 0
 1287 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1288 0004 012B     		cmp	r3, #1
 1289 0006 00F0AA80 		beq	.L91
 1290 000a 0D46     		mov	r5, r1
 1291 000c 0446     		mov	r4, r0
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1292              		.loc 1 832 0 is_stmt 0 discriminator 2
 1293 000e 0123     		movs	r3, #1
 1294 0010 0377     		strb	r3, [r0, #28]
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1295              		.loc 1 834 0 is_stmt 1 discriminator 2
 1296 0012 0223     		movs	r3, #2
 1297 0014 4377     		strb	r3, [r0, #29]
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 1298              		.loc 1 836 0 discriminator 2
 1299 0016 0ABB     		cbnz	r2, .L81
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1300              		.loc 1 838 0
 1301 0018 0368     		ldr	r3, [r0]
 1302 001a 9B68     		ldr	r3, [r3, #8]
 1303 001c 13F0400F 		tst	r3, #64
 1304 0020 01D1     		bne	.L82
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 1305              		.loc 1 845 0
 1306 0022 0023     		movs	r3, #0
 1307 0024 CB70     		strb	r3, [r1, #3]
 1308              	.L82:
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
ARM GAS  /tmp/ccyGknj4.s 			page 54


 1309              		.loc 1 860 0
 1310 0026 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1311              	.LVL101:
 1312 0028 FFF7FEFF 		bl	RTC_ByteToBcd2
 1313              	.LVL102:
 1314 002c 0604     		lsls	r6, r0, #16
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1315              		.loc 1 861 0
 1316 002e 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 1317 0030 FFF7FEFF 		bl	RTC_ByteToBcd2
 1318              	.LVL103:
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1319              		.loc 1 860 0
 1320 0034 46EA0026 		orr	r6, r6, r0, lsl #8
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1321              		.loc 1 862 0
 1322 0038 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 1323 003a FFF7FEFF 		bl	RTC_ByteToBcd2
 1324              	.LVL104:
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1325              		.loc 1 861 0
 1326 003e 3043     		orrs	r0, r0, r6
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1327              		.loc 1 863 0
 1328 0040 EE78     		ldrb	r6, [r5, #3]	@ zero_extendqisi2
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1329              		.loc 1 862 0
 1330 0042 40EA0646 		orr	r6, r0, r6, lsl #16
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1331              		.loc 1 864 0
 1332 0046 95F82000 		ldrb	r0, [r5, #32]	@ zero_extendqisi2
 1333 004a FFF7FEFF 		bl	RTC_ByteToBcd2
 1334              	.LVL105:
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1335              		.loc 1 863 0
 1336 004e 46EA0060 		orr	r0, r6, r0, lsl #24
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask)); 
 1337              		.loc 1 865 0
 1338 0052 EE69     		ldr	r6, [r5, #28]
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1339              		.loc 1 864 0
 1340 0054 0643     		orrs	r6, r6, r0
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1341              		.loc 1 866 0
 1342 0056 6F69     		ldr	r7, [r5, #20]
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1343              		.loc 1 860 0
 1344 0058 3743     		orrs	r7, r7, r6
 1345              	.LVL106:
 1346 005a 18E0     		b	.L83
 1347              	.LVL107:
 1348              	.L81:
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1349              		.loc 1 870 0
 1350 005c 0368     		ldr	r3, [r0]
 1351 005e 9B68     		ldr	r3, [r3, #8]
 1352 0060 13F0400F 		tst	r3, #64
ARM GAS  /tmp/ccyGknj4.s 			page 55


 1353 0064 01D1     		bne	.L84
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 1354              		.loc 1 878 0
 1355 0066 0023     		movs	r3, #0
 1356 0068 CB70     		strb	r3, [r1, #3]
 1357              	.L84:
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1358              		.loc 1 896 0
 1359 006a 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 1360              	.LVL108:
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1361              		.loc 1 897 0
 1362 006c 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 1363              	.LVL109:
 1364 006e 1302     		lsls	r3, r2, #8
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1365              		.loc 1 896 0
 1366 0070 43EA0142 		orr	r2, r3, r1, lsl #16
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1367              		.loc 1 898 0
 1368 0074 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1369              		.loc 1 897 0
 1370 0076 1343     		orrs	r3, r3, r2
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1371              		.loc 1 899 0
 1372 0078 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1373              		.loc 1 898 0
 1374 007a 43EA0243 		orr	r3, r3, r2, lsl #16
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1375              		.loc 1 900 0
 1376 007e 95F82070 		ldrb	r7, [r5, #32]	@ zero_extendqisi2
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1377              		.loc 1 899 0
 1378 0082 43EA0763 		orr	r3, r3, r7, lsl #24
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));   
 1379              		.loc 1 901 0
 1380 0086 EF69     		ldr	r7, [r5, #28]
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1381              		.loc 1 900 0
 1382 0088 1F43     		orrs	r7, r7, r3
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1383              		.loc 1 902 0
 1384 008a 6B69     		ldr	r3, [r5, #20]
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1385              		.loc 1 896 0
 1386 008c 1F43     		orrs	r7, r7, r3
 1387              	.LVL110:
 1388              	.L83:
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1389              		.loc 1 906 0
 1390 008e 6E68     		ldr	r6, [r5, #4]
 1391 0090 AB69     		ldr	r3, [r5, #24]
 1392 0092 1E43     		orrs	r6, r6, r3
 1393              	.LVL111:
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
ARM GAS  /tmp/ccyGknj4.s 			page 56


 1394              		.loc 1 909 0
 1395 0094 2368     		ldr	r3, [r4]
 1396 0096 CA22     		movs	r2, #202
 1397 0098 5A62     		str	r2, [r3, #36]
 1398 009a 2368     		ldr	r3, [r4]
 1399 009c 5322     		movs	r2, #83
 1400 009e 5A62     		str	r2, [r3, #36]
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 1401              		.loc 1 912 0
 1402 00a0 6B6A     		ldr	r3, [r5, #36]
 1403 00a2 B3F5807F 		cmp	r3, #256
 1404 00a6 29D1     		bne	.L85
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1405              		.loc 1 915 0
 1406 00a8 2268     		ldr	r2, [r4]
 1407 00aa 9368     		ldr	r3, [r2, #8]
 1408 00ac 23F48073 		bic	r3, r3, #256
 1409 00b0 9360     		str	r3, [r2, #8]
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          
 1410              		.loc 1 918 0
 1411 00b2 2268     		ldr	r2, [r4]
 1412 00b4 9368     		ldr	r3, [r2, #8]
 1413 00b6 23F48053 		bic	r3, r3, #4096
 1414 00ba 9360     		str	r3, [r2, #8]
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 1415              		.loc 1 920 0
 1416 00bc FFF7FEFF 		bl	HAL_GetTick
 1417              	.LVL112:
 1418 00c0 0546     		mov	r5, r0
 1419              	.LVL113:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1420              		.loc 1 922 0
 1421 00c2 0DE0     		b	.L86
 1422              	.LVL114:
 1423              	.L87:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
 1424              		.loc 1 924 0
 1425 00c4 FFF7FEFF 		bl	HAL_GetTick
 1426              	.LVL115:
 1427 00c8 401B     		subs	r0, r0, r5
 1428 00ca B0F57A7F 		cmp	r0, #1000
 1429 00ce 07D9     		bls	.L86
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1430              		.loc 1 927 0
 1431 00d0 2368     		ldr	r3, [r4]
 1432 00d2 FF22     		movs	r2, #255
 1433 00d4 5A62     		str	r2, [r3, #36]
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1434              		.loc 1 929 0
 1435 00d6 0320     		movs	r0, #3
 1436 00d8 6077     		strb	r0, [r4, #29]
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1437              		.loc 1 932 0
 1438 00da 0023     		movs	r3, #0
 1439 00dc 2377     		strb	r3, [r4, #28]
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }   
 1440              		.loc 1 934 0
ARM GAS  /tmp/ccyGknj4.s 			page 57


 1441 00de F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1442              	.LVL116:
 1443              	.L86:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1444              		.loc 1 922 0
 1445 00e0 2368     		ldr	r3, [r4]
 1446 00e2 DA68     		ldr	r2, [r3, #12]
 1447 00e4 12F0010F 		tst	r2, #1
 1448 00e8 ECD0     		beq	.L87
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 1449              		.loc 1 938 0
 1450 00ea DF61     		str	r7, [r3, #28]
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1451              		.loc 1 940 0
 1452 00ec 2368     		ldr	r3, [r4]
 1453 00ee 5E64     		str	r6, [r3, #68]
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1454              		.loc 1 942 0
 1455 00f0 2268     		ldr	r2, [r4]
 1456 00f2 9368     		ldr	r3, [r2, #8]
 1457 00f4 43F48073 		orr	r3, r3, #256
 1458 00f8 9360     		str	r3, [r2, #8]
 1459 00fa 28E0     		b	.L88
 1460              	.LVL117:
 1461              	.L85:
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1462              		.loc 1 947 0
 1463 00fc 2268     		ldr	r2, [r4]
 1464 00fe 9368     		ldr	r3, [r2, #8]
 1465 0100 23F40073 		bic	r3, r3, #512
 1466 0104 9360     		str	r3, [r2, #8]
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****        
 1467              		.loc 1 950 0
 1468 0106 2268     		ldr	r2, [r4]
 1469 0108 9368     		ldr	r3, [r2, #8]
 1470 010a 23F40053 		bic	r3, r3, #8192
 1471 010e 9360     		str	r3, [r2, #8]
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 1472              		.loc 1 952 0
 1473 0110 FFF7FEFF 		bl	HAL_GetTick
 1474              	.LVL118:
 1475 0114 0546     		mov	r5, r0
 1476              	.LVL119:
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1477              		.loc 1 954 0
 1478 0116 0DE0     		b	.L89
 1479              	.LVL120:
 1480              	.L90:
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
 1481              		.loc 1 956 0
 1482 0118 FFF7FEFF 		bl	HAL_GetTick
 1483              	.LVL121:
 1484 011c 401B     		subs	r0, r0, r5
 1485 011e B0F57A7F 		cmp	r0, #1000
 1486 0122 07D9     		bls	.L89
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1487              		.loc 1 959 0
ARM GAS  /tmp/ccyGknj4.s 			page 58


 1488 0124 2368     		ldr	r3, [r4]
 1489 0126 FF22     		movs	r2, #255
 1490 0128 5A62     		str	r2, [r3, #36]
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1491              		.loc 1 961 0
 1492 012a 0320     		movs	r0, #3
 1493 012c 6077     		strb	r0, [r4, #29]
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1494              		.loc 1 964 0
 1495 012e 0023     		movs	r3, #0
 1496 0130 2377     		strb	r3, [r4, #28]
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }  
 1497              		.loc 1 966 0
 1498 0132 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1499              	.LVL122:
 1500              	.L89:
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1501              		.loc 1 954 0
 1502 0134 2368     		ldr	r3, [r4]
 1503 0136 DA68     		ldr	r2, [r3, #12]
 1504 0138 12F0020F 		tst	r2, #2
 1505 013c ECD0     		beq	.L90
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 1506              		.loc 1 970 0
 1507 013e 1F62     		str	r7, [r3, #32]
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1508              		.loc 1 972 0
 1509 0140 2368     		ldr	r3, [r4]
 1510 0142 9E64     		str	r6, [r3, #72]
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1511              		.loc 1 974 0
 1512 0144 2268     		ldr	r2, [r4]
 1513 0146 9368     		ldr	r3, [r2, #8]
 1514 0148 43F40073 		orr	r3, r3, #512
 1515 014c 9360     		str	r3, [r2, #8]
 1516              	.L88:
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1517              		.loc 1 978 0
 1518 014e 2368     		ldr	r3, [r4]
 1519 0150 FF22     		movs	r2, #255
 1520 0152 5A62     		str	r2, [r3, #36]
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1521              		.loc 1 981 0
 1522 0154 0123     		movs	r3, #1
 1523 0156 6377     		strb	r3, [r4, #29]
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1524              		.loc 1 984 0
 1525 0158 0020     		movs	r0, #0
 1526 015a 2077     		strb	r0, [r4, #28]
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 1527              		.loc 1 986 0
 1528 015c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1529              	.LVL123:
 1530              	.L91:
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1531              		.loc 1 832 0
 1532 015e 0220     		movs	r0, #2
ARM GAS  /tmp/ccyGknj4.s 			page 59


 1533              	.LVL124:
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1534              		.loc 1 987 0
 1535 0160 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1536              		.cfi_endproc
 1537              	.LFE131:
 1539 0162 00BF     		.section	.text.HAL_RTC_SetAlarm_IT,"ax",%progbits
 1540              		.align	2
 1541              		.global	HAL_RTC_SetAlarm_IT
 1542              		.thumb
 1543              		.thumb_func
 1545              	HAL_RTC_SetAlarm_IT:
 1546              	.LFB132:
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 1547              		.loc 1 1003 0
 1548              		.cfi_startproc
 1549              		@ args = 0, pretend = 0, frame = 0
 1550              		@ frame_needed = 0, uses_anonymous_args = 0
 1551              	.LVL125:
 1552 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1553              	.LCFI10:
 1554              		.cfi_def_cfa_offset 24
 1555              		.cfi_offset 3, -24
 1556              		.cfi_offset 4, -20
 1557              		.cfi_offset 5, -16
 1558              		.cfi_offset 6, -12
 1559              		.cfi_offset 7, -8
 1560              		.cfi_offset 14, -4
 1561              	.LVL126:
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1562              		.loc 1 1016 0
 1563 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1564 0004 012B     		cmp	r3, #1
 1565 0006 00F0BF80 		beq	.L105
 1566 000a 0D46     		mov	r5, r1
 1567 000c 0446     		mov	r4, r0
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1568              		.loc 1 1016 0 is_stmt 0 discriminator 2
 1569 000e 0123     		movs	r3, #1
 1570 0010 0377     		strb	r3, [r0, #28]
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1571              		.loc 1 1018 0 is_stmt 1 discriminator 2
 1572 0012 0223     		movs	r3, #2
 1573 0014 4377     		strb	r3, [r0, #29]
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 1574              		.loc 1 1020 0 discriminator 2
 1575 0016 0ABB     		cbnz	r2, .L95
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1576              		.loc 1 1022 0
 1577 0018 0368     		ldr	r3, [r0]
 1578 001a 9B68     		ldr	r3, [r3, #8]
 1579 001c 13F0400F 		tst	r3, #64
 1580 0020 01D1     		bne	.L96
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 1581              		.loc 1 1029 0
 1582 0022 0023     		movs	r3, #0
 1583 0024 CB70     		strb	r3, [r1, #3]
ARM GAS  /tmp/ccyGknj4.s 			page 60


 1584              	.L96:
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1585              		.loc 1 1043 0
 1586 0026 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1587              	.LVL127:
 1588 0028 FFF7FEFF 		bl	RTC_ByteToBcd2
 1589              	.LVL128:
 1590 002c 0604     		lsls	r6, r0, #16
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1591              		.loc 1 1044 0
 1592 002e 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 1593 0030 FFF7FEFF 		bl	RTC_ByteToBcd2
 1594              	.LVL129:
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1595              		.loc 1 1043 0
 1596 0034 46EA0026 		orr	r6, r6, r0, lsl #8
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1597              		.loc 1 1045 0
 1598 0038 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 1599 003a FFF7FEFF 		bl	RTC_ByteToBcd2
 1600              	.LVL130:
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1601              		.loc 1 1044 0
 1602 003e 3043     		orrs	r0, r0, r6
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1603              		.loc 1 1046 0
 1604 0040 EE78     		ldrb	r6, [r5, #3]	@ zero_extendqisi2
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1605              		.loc 1 1045 0
 1606 0042 40EA0646 		orr	r6, r0, r6, lsl #16
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1607              		.loc 1 1047 0
 1608 0046 95F82000 		ldrb	r0, [r5, #32]	@ zero_extendqisi2
 1609 004a FFF7FEFF 		bl	RTC_ByteToBcd2
 1610              	.LVL131:
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1611              		.loc 1 1046 0
 1612 004e 46EA0060 		orr	r0, r6, r0, lsl #24
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask)); 
 1613              		.loc 1 1048 0
 1614 0052 EE69     		ldr	r6, [r5, #28]
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1615              		.loc 1 1047 0
 1616 0054 0643     		orrs	r6, r6, r0
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1617              		.loc 1 1049 0
 1618 0056 6F69     		ldr	r7, [r5, #20]
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1619              		.loc 1 1043 0
 1620 0058 3743     		orrs	r7, r7, r6
 1621              	.LVL132:
 1622 005a 18E0     		b	.L97
 1623              	.LVL133:
 1624              	.L95:
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1625              		.loc 1 1053 0
 1626 005c 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccyGknj4.s 			page 61


 1627 005e 9B68     		ldr	r3, [r3, #8]
 1628 0060 13F0400F 		tst	r3, #64
 1629 0064 01D1     		bne	.L98
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 1630              		.loc 1 1061 0
 1631 0066 0023     		movs	r3, #0
 1632 0068 CB70     		strb	r3, [r1, #3]
 1633              	.L98:
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1634              		.loc 1 1078 0
 1635 006a 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 1636              	.LVL134:
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1637              		.loc 1 1079 0
 1638 006c 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 1639              	.LVL135:
 1640 006e 1302     		lsls	r3, r2, #8
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1641              		.loc 1 1078 0
 1642 0070 43EA0142 		orr	r2, r3, r1, lsl #16
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1643              		.loc 1 1080 0
 1644 0074 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1645              		.loc 1 1079 0
 1646 0076 1343     		orrs	r3, r3, r2
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1647              		.loc 1 1081 0
 1648 0078 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1649              		.loc 1 1080 0
 1650 007a 43EA0243 		orr	r3, r3, r2, lsl #16
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1651              		.loc 1 1082 0
 1652 007e 95F82070 		ldrb	r7, [r5, #32]	@ zero_extendqisi2
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1653              		.loc 1 1081 0
 1654 0082 43EA0763 		orr	r3, r3, r7, lsl #24
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));     
 1655              		.loc 1 1083 0
 1656 0086 EF69     		ldr	r7, [r5, #28]
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1657              		.loc 1 1082 0
 1658 0088 1F43     		orrs	r7, r7, r3
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1659              		.loc 1 1084 0
 1660 008a 6B69     		ldr	r3, [r5, #20]
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1661              		.loc 1 1078 0
 1662 008c 1F43     		orrs	r7, r7, r3
 1663              	.LVL136:
 1664              	.L97:
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1665              		.loc 1 1087 0
 1666 008e 6E68     		ldr	r6, [r5, #4]
 1667 0090 AB69     		ldr	r3, [r5, #24]
 1668 0092 1E43     		orrs	r6, r6, r3
ARM GAS  /tmp/ccyGknj4.s 			page 62


 1669              	.LVL137:
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1670              		.loc 1 1090 0
 1671 0094 2368     		ldr	r3, [r4]
 1672 0096 CA22     		movs	r2, #202
 1673 0098 5A62     		str	r2, [r3, #36]
 1674 009a 2368     		ldr	r3, [r4]
 1675 009c 5322     		movs	r2, #83
 1676 009e 5A62     		str	r2, [r3, #36]
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 1677              		.loc 1 1093 0
 1678 00a0 6B6A     		ldr	r3, [r5, #36]
 1679 00a2 B3F5807F 		cmp	r3, #256
 1680 00a6 2FD1     		bne	.L99
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1681              		.loc 1 1096 0
 1682 00a8 2268     		ldr	r2, [r4]
 1683 00aa 9368     		ldr	r3, [r2, #8]
 1684 00ac 23F48073 		bic	r3, r3, #256
 1685 00b0 9360     		str	r3, [r2, #8]
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1686              		.loc 1 1099 0
 1687 00b2 2268     		ldr	r2, [r4]
 1688 00b4 D368     		ldr	r3, [r2, #12]
 1689 00b6 DBB2     		uxtb	r3, r3
 1690 00b8 63F4C073 		orn	r3, r3, #384
 1691 00bc D360     		str	r3, [r2, #12]
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 1692              		.loc 1 1101 0
 1693 00be FFF7FEFF 		bl	HAL_GetTick
 1694              	.LVL138:
 1695 00c2 0546     		mov	r5, r0
 1696              	.LVL139:
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1697              		.loc 1 1103 0
 1698 00c4 0DE0     		b	.L100
 1699              	.LVL140:
 1700              	.L101:
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
 1701              		.loc 1 1105 0
 1702 00c6 FFF7FEFF 		bl	HAL_GetTick
 1703              	.LVL141:
 1704 00ca 401B     		subs	r0, r0, r5
 1705 00cc B0F57A7F 		cmp	r0, #1000
 1706 00d0 07D9     		bls	.L100
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1707              		.loc 1 1108 0
 1708 00d2 2368     		ldr	r3, [r4]
 1709 00d4 FF22     		movs	r2, #255
 1710 00d6 5A62     		str	r2, [r3, #36]
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1711              		.loc 1 1110 0
 1712 00d8 0320     		movs	r0, #3
 1713 00da 6077     		strb	r0, [r4, #29]
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1714              		.loc 1 1113 0
 1715 00dc 0023     		movs	r3, #0
ARM GAS  /tmp/ccyGknj4.s 			page 63


 1716 00de 2377     		strb	r3, [r4, #28]
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }  
 1717              		.loc 1 1115 0
 1718 00e0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1719              	.LVL142:
 1720              	.L100:
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1721              		.loc 1 1103 0
 1722 00e2 2368     		ldr	r3, [r4]
 1723 00e4 DA68     		ldr	r2, [r3, #12]
 1724 00e6 12F0010F 		tst	r2, #1
 1725 00ea ECD0     		beq	.L101
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 1726              		.loc 1 1119 0
 1727 00ec DF61     		str	r7, [r3, #28]
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1728              		.loc 1 1121 0
 1729 00ee 2368     		ldr	r3, [r4]
 1730 00f0 5E64     		str	r6, [r3, #68]
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
 1731              		.loc 1 1123 0
 1732 00f2 2268     		ldr	r2, [r4]
 1733 00f4 9368     		ldr	r3, [r2, #8]
 1734 00f6 43F48073 		orr	r3, r3, #256
 1735 00fa 9360     		str	r3, [r2, #8]
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1736              		.loc 1 1125 0
 1737 00fc 2268     		ldr	r2, [r4]
 1738 00fe 9368     		ldr	r3, [r2, #8]
 1739 0100 43F48053 		orr	r3, r3, #4096
 1740 0104 9360     		str	r3, [r2, #8]
 1741 0106 2EE0     		b	.L102
 1742              	.LVL143:
 1743              	.L99:
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1744              		.loc 1 1130 0
 1745 0108 2268     		ldr	r2, [r4]
 1746 010a 9368     		ldr	r3, [r2, #8]
 1747 010c 23F40073 		bic	r3, r3, #512
 1748 0110 9360     		str	r3, [r2, #8]
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1749              		.loc 1 1133 0
 1750 0112 2268     		ldr	r2, [r4]
 1751 0114 D368     		ldr	r3, [r2, #12]
 1752 0116 DBB2     		uxtb	r3, r3
 1753 0118 63F42073 		orn	r3, r3, #640
 1754 011c D360     		str	r3, [r2, #12]
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 1755              		.loc 1 1135 0
 1756 011e FFF7FEFF 		bl	HAL_GetTick
 1757              	.LVL144:
 1758 0122 0546     		mov	r5, r0
 1759              	.LVL145:
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1760              		.loc 1 1137 0
 1761 0124 0DE0     		b	.L103
 1762              	.LVL146:
ARM GAS  /tmp/ccyGknj4.s 			page 64


 1763              	.L104:
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
 1764              		.loc 1 1139 0
 1765 0126 FFF7FEFF 		bl	HAL_GetTick
 1766              	.LVL147:
 1767 012a 401B     		subs	r0, r0, r5
 1768 012c B0F57A7F 		cmp	r0, #1000
 1769 0130 07D9     		bls	.L103
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1770              		.loc 1 1142 0
 1771 0132 2368     		ldr	r3, [r4]
 1772 0134 FF22     		movs	r2, #255
 1773 0136 5A62     		str	r2, [r3, #36]
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1774              		.loc 1 1144 0
 1775 0138 0320     		movs	r0, #3
 1776 013a 6077     		strb	r0, [r4, #29]
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1777              		.loc 1 1147 0
 1778 013c 0023     		movs	r3, #0
 1779 013e 2377     		strb	r3, [r4, #28]
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }  
 1780              		.loc 1 1149 0
 1781 0140 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1782              	.LVL148:
 1783              	.L103:
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1784              		.loc 1 1137 0
 1785 0142 2368     		ldr	r3, [r4]
 1786 0144 DA68     		ldr	r2, [r3, #12]
 1787 0146 12F0020F 		tst	r2, #2
 1788 014a ECD0     		beq	.L104
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 1789              		.loc 1 1153 0
 1790 014c 1F62     		str	r7, [r3, #32]
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1791              		.loc 1 1155 0
 1792 014e 2368     		ldr	r3, [r4]
 1793 0150 9E64     		str	r6, [r3, #72]
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
 1794              		.loc 1 1157 0
 1795 0152 2268     		ldr	r2, [r4]
 1796 0154 9368     		ldr	r3, [r2, #8]
 1797 0156 43F40073 		orr	r3, r3, #512
 1798 015a 9360     		str	r3, [r2, #8]
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1799              		.loc 1 1159 0
 1800 015c 2268     		ldr	r2, [r4]
 1801 015e 9368     		ldr	r3, [r2, #8]
 1802 0160 43F40053 		orr	r3, r3, #8192
 1803 0164 9360     		str	r3, [r2, #8]
 1804              	.L102:
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1805              		.loc 1 1163 0
 1806 0166 094B     		ldr	r3, .L107
 1807 0168 1A68     		ldr	r2, [r3]
 1808 016a 42F40032 		orr	r2, r2, #131072
ARM GAS  /tmp/ccyGknj4.s 			page 65


 1809 016e 1A60     		str	r2, [r3]
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1810              		.loc 1 1165 0
 1811 0170 9A68     		ldr	r2, [r3, #8]
 1812 0172 42F40032 		orr	r2, r2, #131072
 1813 0176 9A60     		str	r2, [r3, #8]
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1814              		.loc 1 1168 0
 1815 0178 2368     		ldr	r3, [r4]
 1816 017a FF22     		movs	r2, #255
 1817 017c 5A62     		str	r2, [r3, #36]
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1818              		.loc 1 1170 0
 1819 017e 0123     		movs	r3, #1
 1820 0180 6377     		strb	r3, [r4, #29]
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1821              		.loc 1 1173 0
 1822 0182 0020     		movs	r0, #0
 1823 0184 2077     		strb	r0, [r4, #28]
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 1824              		.loc 1 1175 0
 1825 0186 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1826              	.LVL149:
 1827              	.L105:
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1828              		.loc 1 1016 0
 1829 0188 0220     		movs	r0, #2
 1830              	.LVL150:
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1831              		.loc 1 1176 0
 1832 018a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1833              	.L108:
 1834              		.align	2
 1835              	.L107:
 1836 018c 00040140 		.word	1073808384
 1837              		.cfi_endproc
 1838              	.LFE132:
 1840              		.section	.text.RTC_Bcd2ToByte,"ax",%progbits
 1841              		.align	2
 1842              		.global	RTC_Bcd2ToByte
 1843              		.thumb
 1844              		.thumb_func
 1846              	RTC_Bcd2ToByte:
 1847              	.LFB142:
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Convert from 2 digit BCD to Binary.
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Value BCD value to be converted
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval Converted word
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** uint8_t RTC_Bcd2ToByte(uint8_t Value)
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 1848              		.loc 1 1568 0
 1849              		.cfi_startproc
 1850              		@ args = 0, pretend = 0, frame = 0
 1851              		@ frame_needed = 0, uses_anonymous_args = 0
 1852              		@ link register save eliminated.
ARM GAS  /tmp/ccyGknj4.s 			page 66


 1853              	.LVL151:
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tmp = 0U;
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   tmp = ((uint8_t)(Value & (uint8_t)0xF0U) >> (uint8_t)0x4U) * 10U;
 1854              		.loc 1 1570 0
 1855 0000 0309     		lsrs	r3, r0, #4
 1856 0002 03EB8303 		add	r3, r3, r3, lsl #2
 1857 0006 5B00     		lsls	r3, r3, #1
 1858              	.LVL152:
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0FU));
 1859              		.loc 1 1571 0
 1860 0008 00F00F00 		and	r0, r0, #15
 1861              	.LVL153:
 1862 000c 1844     		add	r0, r0, r3
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 1863              		.loc 1 1572 0
 1864 000e C0B2     		uxtb	r0, r0
 1865 0010 7047     		bx	lr
 1866              		.cfi_endproc
 1867              	.LFE142:
 1869 0012 00BF     		.section	.text.HAL_RTC_GetTime,"ax",%progbits
 1870              		.align	2
 1871              		.global	HAL_RTC_GetTime
 1872              		.thumb
 1873              		.thumb_func
 1875              	HAL_RTC_GetTime:
 1876              	.LFB128:
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tmpreg = 0U;
 1877              		.loc 1 615 0
 1878              		.cfi_startproc
 1879              		@ args = 0, pretend = 0, frame = 0
 1880              		@ frame_needed = 0, uses_anonymous_args = 0
 1881              	.LVL154:
 1882 0000 70B5     		push	{r4, r5, r6, lr}
 1883              	.LCFI11:
 1884              		.cfi_def_cfa_offset 16
 1885              		.cfi_offset 4, -16
 1886              		.cfi_offset 5, -12
 1887              		.cfi_offset 6, -8
 1888              		.cfi_offset 14, -4
 1889              	.LVL155:
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1890              		.loc 1 622 0
 1891 0002 0368     		ldr	r3, [r0]
 1892 0004 9B6A     		ldr	r3, [r3, #40]
 1893 0006 4B60     		str	r3, [r1, #4]
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1894              		.loc 1 625 0
 1895 0008 0368     		ldr	r3, [r0]
 1896 000a 1B69     		ldr	r3, [r3, #16]
 1897 000c C3F30E03 		ubfx	r3, r3, #0, #15
 1898 0010 8B60     		str	r3, [r1, #8]
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1899              		.loc 1 628 0
 1900 0012 0368     		ldr	r3, [r0]
 1901 0014 1B68     		ldr	r3, [r3]
 1902              	.LVL156:
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8U);
ARM GAS  /tmp/ccyGknj4.s 			page 67


 1903              		.loc 1 631 0
 1904 0016 C3F30540 		ubfx	r0, r3, #16, #6
 1905              	.LVL157:
 1906 001a 0870     		strb	r0, [r1]
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 1907              		.loc 1 632 0
 1908 001c C3F30626 		ubfx	r6, r3, #8, #7
 1909 0020 4E70     		strb	r6, [r1, #1]
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16U); 
 1910              		.loc 1 633 0
 1911 0022 03F07F05 		and	r5, r3, #127
 1912 0026 8D70     		strb	r5, [r1, #2]
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1913              		.loc 1 634 0
 1914 0028 03F48003 		and	r3, r3, #4194304
 1915              	.LVL158:
 1916 002c 1B0C     		lsrs	r3, r3, #16
 1917 002e CB70     		strb	r3, [r1, #3]
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 1918              		.loc 1 637 0
 1919 0030 5AB9     		cbnz	r2, .L111
 1920 0032 0C46     		mov	r4, r1
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 1921              		.loc 1 640 0
 1922 0034 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1923              	.LVL159:
 1924 0038 2070     		strb	r0, [r4]
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);  
 1925              		.loc 1 641 0
 1926 003a 3046     		mov	r0, r6
 1927 003c FFF7FEFF 		bl	RTC_Bcd2ToByte
 1928              	.LVL160:
 1929 0040 6070     		strb	r0, [r4, #1]
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1930              		.loc 1 642 0
 1931 0042 2846     		mov	r0, r5
 1932 0044 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1933              	.LVL161:
 1934 0048 A070     		strb	r0, [r4, #2]
 1935              	.LVL162:
 1936              	.L111:
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1937              		.loc 1 646 0
 1938 004a 0020     		movs	r0, #0
 1939 004c 70BD     		pop	{r4, r5, r6, pc}
 1940              		.cfi_endproc
 1941              	.LFE128:
 1943 004e 00BF     		.section	.text.HAL_RTC_GetDate,"ax",%progbits
 1944              		.align	2
 1945              		.global	HAL_RTC_GetDate
 1946              		.thumb
 1947              		.thumb_func
 1949              	HAL_RTC_GetDate:
 1950              	.LFB130:
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t datetmpreg = 0U;
 1951              		.loc 1 765 0
 1952              		.cfi_startproc
ARM GAS  /tmp/ccyGknj4.s 			page 68


 1953              		@ args = 0, pretend = 0, frame = 0
 1954              		@ frame_needed = 0, uses_anonymous_args = 0
 1955              	.LVL163:
 1956 0000 70B5     		push	{r4, r5, r6, lr}
 1957              	.LCFI12:
 1958              		.cfi_def_cfa_offset 16
 1959              		.cfi_offset 4, -16
 1960              		.cfi_offset 5, -12
 1961              		.cfi_offset 6, -8
 1962              		.cfi_offset 14, -4
 1963              	.LVL164:
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1964              		.loc 1 772 0
 1965 0002 0368     		ldr	r3, [r0]
 1966 0004 5B68     		ldr	r3, [r3, #4]
 1967              	.LVL165:
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8U);
 1968              		.loc 1 775 0
 1969 0006 C3F30740 		ubfx	r0, r3, #16, #8
 1970              	.LVL166:
 1971 000a C870     		strb	r0, [r1, #3]
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sDate->Date = (uint8_t)(datetmpreg & (RTC_DR_DT | RTC_DR_DU));
 1972              		.loc 1 776 0
 1973 000c C3F30426 		ubfx	r6, r3, #8, #5
 1974 0010 4E70     		strb	r6, [r1, #1]
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> 13U); 
 1975              		.loc 1 777 0
 1976 0012 03F03F05 		and	r5, r3, #63
 1977 0016 8D70     		strb	r5, [r1, #2]
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1978              		.loc 1 778 0
 1979 0018 C3F34233 		ubfx	r3, r3, #13, #3
 1980              	.LVL167:
 1981 001c 0B70     		strb	r3, [r1]
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {    
 1982              		.loc 1 781 0
 1983 001e 5AB9     		cbnz	r2, .L114
 1984 0020 0C46     		mov	r4, r1
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
 1985              		.loc 1 784 0
 1986 0022 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1987              	.LVL168:
 1988 0026 E070     		strb	r0, [r4, #3]
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);  
 1989              		.loc 1 785 0
 1990 0028 3046     		mov	r0, r6
 1991 002a FFF7FEFF 		bl	RTC_Bcd2ToByte
 1992              	.LVL169:
 1993 002e 6070     		strb	r0, [r4, #1]
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1994              		.loc 1 786 0
 1995 0030 2846     		mov	r0, r5
 1996 0032 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1997              	.LVL170:
 1998 0036 A070     		strb	r0, [r4, #2]
 1999              	.LVL171:
 2000              	.L114:
ARM GAS  /tmp/ccyGknj4.s 			page 69


 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 2001              		.loc 1 789 0
 2002 0038 0020     		movs	r0, #0
 2003 003a 70BD     		pop	{r4, r5, r6, pc}
 2004              		.cfi_endproc
 2005              	.LFE130:
 2007              		.section	.text.HAL_RTC_GetAlarm,"ax",%progbits
 2008              		.align	2
 2009              		.global	HAL_RTC_GetAlarm
 2010              		.thumb
 2011              		.thumb_func
 2013              	HAL_RTC_GetAlarm:
 2014              	.LFB134:
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
 2015              		.loc 1 1282 0
 2016              		.cfi_startproc
 2017              		@ args = 0, pretend = 0, frame = 0
 2018              		@ frame_needed = 0, uses_anonymous_args = 0
 2019              	.LVL172:
 2020 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2021              	.LCFI13:
 2022              		.cfi_def_cfa_offset 24
 2023              		.cfi_offset 3, -24
 2024              		.cfi_offset 4, -20
 2025              		.cfi_offset 5, -16
 2026              		.cfi_offset 6, -12
 2027              		.cfi_offset 7, -8
 2028              		.cfi_offset 14, -4
 2029              	.LVL173:
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 2030              		.loc 1 1289 0
 2031 0002 B2F5807F 		cmp	r2, #256
 2032 0006 06D1     		bne	.L117
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 2033              		.loc 1 1292 0
 2034 0008 4A62     		str	r2, [r1, #36]
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR ) & RTC_ALRMASSR_SS);
 2035              		.loc 1 1294 0
 2036 000a 0068     		ldr	r0, [r0]
 2037              	.LVL174:
 2038 000c C269     		ldr	r2, [r0, #28]
 2039              	.LVL175:
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 2040              		.loc 1 1295 0
 2041 000e 446C     		ldr	r4, [r0, #68]
 2042 0010 C4F30E04 		ubfx	r4, r4, #0, #15
 2043              	.LVL176:
 2044 0014 07E0     		b	.L118
 2045              	.LVL177:
 2046              	.L117:
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 2047              		.loc 1 1299 0
 2048 0016 4FF40072 		mov	r2, #512
 2049              	.LVL178:
 2050 001a 4A62     		str	r2, [r1, #36]
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMBSSR) & RTC_ALRMBSSR_SS);
 2051              		.loc 1 1301 0
ARM GAS  /tmp/ccyGknj4.s 			page 70


 2052 001c 0068     		ldr	r0, [r0]
 2053              	.LVL179:
 2054 001e 026A     		ldr	r2, [r0, #32]
 2055              	.LVL180:
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 2056              		.loc 1 1302 0
 2057 0020 846C     		ldr	r4, [r0, #72]
 2058 0022 C4F30E04 		ubfx	r4, r4, #0, #15
 2059              	.LVL181:
 2060              	.L118:
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> 8U);
 2061              		.loc 1 1306 0
 2062 0026 C2F30540 		ubfx	r0, r2, #16, #6
 2063 002a 0870     		strb	r0, [r1]
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU));
 2064              		.loc 1 1307 0
 2065 002c C2F30627 		ubfx	r7, r2, #8, #7
 2066 0030 4F70     		strb	r7, [r1, #1]
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmTime.TimeFormat = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16U);
 2067              		.loc 1 1308 0
 2068 0032 02F07F06 		and	r6, r2, #127
 2069 0036 8E70     		strb	r6, [r1, #2]
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2070              		.loc 1 1309 0
 2071 0038 02F48005 		and	r5, r2, #4194304
 2072 003c 2D0C     		lsrs	r5, r5, #16
 2073 003e CD70     		strb	r5, [r1, #3]
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 24U);
 2074              		.loc 1 1310 0
 2075 0040 4C60     		str	r4, [r1, #4]
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 2076              		.loc 1 1311 0
 2077 0042 C2F30565 		ubfx	r5, r2, #24, #6
 2078 0046 81F82050 		strb	r5, [r1, #32]
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2079              		.loc 1 1312 0
 2080 004a 02F08044 		and	r4, r2, #1073741824
 2081              	.LVL182:
 2082 004e CC61     		str	r4, [r1, #28]
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 2083              		.loc 1 1313 0
 2084 0050 02F08032 		and	r2, r2, #-2139062144
 2085              	.LVL183:
 2086 0054 4A61     		str	r2, [r1, #20]
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 2087              		.loc 1 1315 0
 2088 0056 83B9     		cbnz	r3, .L119
 2089 0058 0C46     		mov	r4, r1
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
 2090              		.loc 1 1317 0
 2091 005a FFF7FEFF 		bl	RTC_Bcd2ToByte
 2092              	.LVL184:
 2093 005e 2070     		strb	r0, [r4]
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
 2094              		.loc 1 1318 0
 2095 0060 3846     		mov	r0, r7
 2096 0062 FFF7FEFF 		bl	RTC_Bcd2ToByte
ARM GAS  /tmp/ccyGknj4.s 			page 71


 2097              	.LVL185:
 2098 0066 6070     		strb	r0, [r4, #1]
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 2099              		.loc 1 1319 0
 2100 0068 3046     		mov	r0, r6
 2101 006a FFF7FEFF 		bl	RTC_Bcd2ToByte
 2102              	.LVL186:
 2103 006e A070     		strb	r0, [r4, #2]
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }  
 2104              		.loc 1 1320 0
 2105 0070 2846     		mov	r0, r5
 2106 0072 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2107              	.LVL187:
 2108 0076 84F82000 		strb	r0, [r4, #32]
 2109              	.LVL188:
 2110              	.L119:
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 2111              		.loc 1 1324 0
 2112 007a 0020     		movs	r0, #0
 2113 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2114              		.cfi_endproc
 2115              	.LFE134:
 2117 007e 00BF     		.text
 2118              	.Letext0:
 2119              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2120              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2121              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 2122              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 2123              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2124              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rtc.h"
 2125              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 2126              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 2127              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rtc_ex.h"
ARM GAS  /tmp/ccyGknj4.s 			page 72


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_rtc.c
     /tmp/ccyGknj4.s:21     .text.HAL_RTC_MspInit:0000000000000000 $t
     /tmp/ccyGknj4.s:26     .text.HAL_RTC_MspInit:0000000000000000 HAL_RTC_MspInit
     /tmp/ccyGknj4.s:40     .text.HAL_RTC_MspDeInit:0000000000000000 $t
     /tmp/ccyGknj4.s:45     .text.HAL_RTC_MspDeInit:0000000000000000 HAL_RTC_MspDeInit
     /tmp/ccyGknj4.s:58     .text.HAL_RTC_DeactivateAlarm:0000000000000000 $t
     /tmp/ccyGknj4.s:63     .text.HAL_RTC_DeactivateAlarm:0000000000000000 HAL_RTC_DeactivateAlarm
     /tmp/ccyGknj4.s:215    .text.HAL_RTC_AlarmAEventCallback:0000000000000000 $t
     /tmp/ccyGknj4.s:220    .text.HAL_RTC_AlarmAEventCallback:0000000000000000 HAL_RTC_AlarmAEventCallback
     /tmp/ccyGknj4.s:233    .text.HAL_RTC_AlarmIRQHandler:0000000000000000 $t
     /tmp/ccyGknj4.s:238    .text.HAL_RTC_AlarmIRQHandler:0000000000000000 HAL_RTC_AlarmIRQHandler
     /tmp/ccyGknj4.s:303    .text.HAL_RTC_AlarmIRQHandler:0000000000000058 $d
     /tmp/ccyGknj4.s:308    .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 $t
     /tmp/ccyGknj4.s:313    .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 HAL_RTC_PollForAlarmAEvent
     /tmp/ccyGknj4.s:378    .text.HAL_RTC_WaitForSynchro:0000000000000000 $t
     /tmp/ccyGknj4.s:383    .text.HAL_RTC_WaitForSynchro:0000000000000000 HAL_RTC_WaitForSynchro
     /tmp/ccyGknj4.s:438    .text.HAL_RTC_GetState:0000000000000000 $t
     /tmp/ccyGknj4.s:443    .text.HAL_RTC_GetState:0000000000000000 HAL_RTC_GetState
     /tmp/ccyGknj4.s:460    .text.RTC_EnterInitMode:0000000000000000 $t
     /tmp/ccyGknj4.s:465    .text.RTC_EnterInitMode:0000000000000000 RTC_EnterInitMode
     /tmp/ccyGknj4.s:528    .text.HAL_RTC_Init:0000000000000000 $t
     /tmp/ccyGknj4.s:533    .text.HAL_RTC_Init:0000000000000000 HAL_RTC_Init
     /tmp/ccyGknj4.s:674    .text.HAL_RTC_DeInit:0000000000000000 $t
     /tmp/ccyGknj4.s:679    .text.HAL_RTC_DeInit:0000000000000000 HAL_RTC_DeInit
     /tmp/ccyGknj4.s:843    .text.HAL_RTC_DeInit:00000000000000d8 $d
     /tmp/ccyGknj4.s:848    .text.RTC_ByteToBcd2:0000000000000000 $t
     /tmp/ccyGknj4.s:853    .text.RTC_ByteToBcd2:0000000000000000 RTC_ByteToBcd2
     /tmp/ccyGknj4.s:891    .text.HAL_RTC_SetDate:0000000000000000 $t
     /tmp/ccyGknj4.s:896    .text.HAL_RTC_SetDate:0000000000000000 HAL_RTC_SetDate
     /tmp/ccyGknj4.s:1067   .text.HAL_RTC_SetTime:0000000000000000 $t
     /tmp/ccyGknj4.s:1072   .text.HAL_RTC_SetTime:0000000000000000 HAL_RTC_SetTime
     /tmp/ccyGknj4.s:1264   .text.HAL_RTC_SetAlarm:0000000000000000 $t
     /tmp/ccyGknj4.s:1269   .text.HAL_RTC_SetAlarm:0000000000000000 HAL_RTC_SetAlarm
     /tmp/ccyGknj4.s:1540   .text.HAL_RTC_SetAlarm_IT:0000000000000000 $t
     /tmp/ccyGknj4.s:1545   .text.HAL_RTC_SetAlarm_IT:0000000000000000 HAL_RTC_SetAlarm_IT
     /tmp/ccyGknj4.s:1836   .text.HAL_RTC_SetAlarm_IT:000000000000018c $d
     /tmp/ccyGknj4.s:1841   .text.RTC_Bcd2ToByte:0000000000000000 $t
     /tmp/ccyGknj4.s:1846   .text.RTC_Bcd2ToByte:0000000000000000 RTC_Bcd2ToByte
     /tmp/ccyGknj4.s:1870   .text.HAL_RTC_GetTime:0000000000000000 $t
     /tmp/ccyGknj4.s:1875   .text.HAL_RTC_GetTime:0000000000000000 HAL_RTC_GetTime
     /tmp/ccyGknj4.s:1944   .text.HAL_RTC_GetDate:0000000000000000 $t
     /tmp/ccyGknj4.s:1949   .text.HAL_RTC_GetDate:0000000000000000 HAL_RTC_GetDate
     /tmp/ccyGknj4.s:2008   .text.HAL_RTC_GetAlarm:0000000000000000 $t
     /tmp/ccyGknj4.s:2013   .text.HAL_RTC_GetAlarm:0000000000000000 HAL_RTC_GetAlarm
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_RTCEx_AlarmBEventCallback
