ARM GAS  /tmp/ccNl898F.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"tim.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
  21              		.align	2
  22              		.global	HAL_TIM_Base_MspInit
  23              		.thumb
  24              		.thumb_func
  26              	HAL_TIM_Base_MspInit:
  27              	.LFB124:
  28              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   ** This notice applies to any and all portions of this file
   8:Src/tim.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/tim.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/tim.c     ****   * inserted by the user or by software development tools
  11:Src/tim.c     ****   * are owned by their respective copyright owners.
  12:Src/tim.c     ****   *
  13:Src/tim.c     ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/tim.c     ****   *
  15:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/tim.c     ****   * are permitted provided that the following conditions are met:
  17:Src/tim.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/tim.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/tim.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/tim.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/tim.c     ****   *      and/or other materials provided with the distribution.
  22:Src/tim.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/tim.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/tim.c     ****   *      without specific prior written permission.
  25:Src/tim.c     ****   *
  26:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/tim.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/tim.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/tim.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/tim.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/ccNl898F.s 			page 2


  31:Src/tim.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/tim.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/tim.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/tim.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/tim.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/tim.c     ****   *
  37:Src/tim.c     ****   ******************************************************************************
  38:Src/tim.c     ****   */
  39:Src/tim.c     **** 
  40:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/tim.c     **** #include "tim.h"
  42:Src/tim.c     **** 
  43:Src/tim.c     **** /* USER CODE BEGIN 0 */
  44:Src/tim.c     **** 
  45:Src/tim.c     **** /* USER CODE END 0 */
  46:Src/tim.c     **** 
  47:Src/tim.c     **** TIM_HandleTypeDef htim2;
  48:Src/tim.c     **** 
  49:Src/tim.c     **** /* TIM2 init function */
  50:Src/tim.c     **** void MX_TIM2_Init(void)
  51:Src/tim.c     **** {
  52:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  53:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  54:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
  55:Src/tim.c     **** 
  56:Src/tim.c     ****   htim2.Instance = TIM2;
  57:Src/tim.c     ****   htim2.Init.Prescaler = 71;
  58:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  59:Src/tim.c     ****   htim2.Init.Period = 19999;
  60:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  61:Src/tim.c     ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  62:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
  63:Src/tim.c     ****   {
  64:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  65:Src/tim.c     ****   }
  66:Src/tim.c     **** 
  67:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  68:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
  69:Src/tim.c     ****   {
  70:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  71:Src/tim.c     ****   }
  72:Src/tim.c     **** 
  73:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
  74:Src/tim.c     ****   {
  75:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  76:Src/tim.c     ****   }
  77:Src/tim.c     **** 
  78:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  79:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  80:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
  81:Src/tim.c     ****   {
  82:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  83:Src/tim.c     ****   }
  84:Src/tim.c     **** 
  85:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  86:Src/tim.c     ****   sConfigOC.Pulse = 1099;
  87:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
ARM GAS  /tmp/ccNl898F.s 			page 3


  88:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  89:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  90:Src/tim.c     ****   {
  91:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  92:Src/tim.c     ****   }
  93:Src/tim.c     **** 
  94:Src/tim.c     ****   sConfigOC.Pulse = 1899;
  95:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
  96:Src/tim.c     ****   {
  97:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  98:Src/tim.c     ****   }
  99:Src/tim.c     **** 
 100:Src/tim.c     ****   sConfigOC.Pulse = 0;
 101:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 102:Src/tim.c     ****   {
 103:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 104:Src/tim.c     ****   }
 105:Src/tim.c     **** 
 106:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 107:Src/tim.c     ****   {
 108:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 109:Src/tim.c     ****   }
 110:Src/tim.c     **** 
 111:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim2);
 112:Src/tim.c     **** 
 113:Src/tim.c     **** }
 114:Src/tim.c     **** 
 115:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 116:Src/tim.c     **** {
  29              		.loc 1 116 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
 117:Src/tim.c     **** 
 118:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
  35              		.loc 1 118 0
  36 0000 0368     		ldr	r3, [r0]
  37 0002 B3F1804F 		cmp	r3, #1073741824
  38 0006 0CD1     		bne	.L5
 116:Src/tim.c     **** 
  39              		.loc 1 116 0
  40 0008 82B0     		sub	sp, sp, #8
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              	.LBB2:
 119:Src/tim.c     ****   {
 120:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 121:Src/tim.c     **** 
 122:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 123:Src/tim.c     ****     /* TIM2 clock enable */
 124:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
  44              		.loc 1 124 0
  45 000a 03F50433 		add	r3, r3, #135168
  46 000e DA69     		ldr	r2, [r3, #28]
  47 0010 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/ccNl898F.s 			page 4


  48 0014 DA61     		str	r2, [r3, #28]
  49 0016 DB69     		ldr	r3, [r3, #28]
  50 0018 03F00103 		and	r3, r3, #1
  51 001c 0193     		str	r3, [sp, #4]
  52 001e 019B     		ldr	r3, [sp, #4]
  53              	.LBE2:
 125:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 126:Src/tim.c     **** 
 127:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 128:Src/tim.c     ****   }
 129:Src/tim.c     **** }
  54              		.loc 1 129 0
  55 0020 02B0     		add	sp, sp, #8
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 0
  58              		@ sp needed
  59              	.L5:
  60 0022 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE124:
  64              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
  65              		.align	2
  66              		.global	HAL_TIM_MspPostInit
  67              		.thumb
  68              		.thumb_func
  70              	HAL_TIM_MspPostInit:
  71              	.LFB125:
 130:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 131:Src/tim.c     **** {
  72              		.loc 1 131 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 24
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              	.LVL1:
 132:Src/tim.c     **** 
 133:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 134:Src/tim.c     ****   if(timHandle->Instance==TIM2)
  77              		.loc 1 134 0
  78 0000 0368     		ldr	r3, [r0]
  79 0002 B3F1804F 		cmp	r3, #1073741824
  80 0006 12D1     		bne	.L9
 131:Src/tim.c     **** 
  81              		.loc 1 131 0
  82 0008 00B5     		push	{lr}
  83              	.LCFI2:
  84              		.cfi_def_cfa_offset 4
  85              		.cfi_offset 14, -4
  86 000a 87B0     		sub	sp, sp, #28
  87              	.LCFI3:
  88              		.cfi_def_cfa_offset 32
 135:Src/tim.c     ****   {
 136:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspPostInit 0 */
 137:Src/tim.c     **** 
 138:Src/tim.c     ****   /* USER CODE END TIM2_MspPostInit 0 */
 139:Src/tim.c     ****   
 140:Src/tim.c     ****     /**TIM2 GPIO Configuration    
 141:Src/tim.c     ****     PA0     ------> TIM2_CH1
ARM GAS  /tmp/ccNl898F.s 			page 5


 142:Src/tim.c     ****     PA1     ------> TIM2_CH2
 143:Src/tim.c     ****     PA2     ------> TIM2_CH3
 144:Src/tim.c     ****     PA3     ------> TIM2_CH4 
 145:Src/tim.c     ****     */
 146:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
  89              		.loc 1 146 0
  90 000c 0F23     		movs	r3, #15
  91 000e 0193     		str	r3, [sp, #4]
 147:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  92              		.loc 1 147 0
  93 0010 0223     		movs	r3, #2
  94 0012 0293     		str	r3, [sp, #8]
 148:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 148 0
  96 0014 0023     		movs	r3, #0
  97 0016 0393     		str	r3, [sp, #12]
 149:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  98              		.loc 1 149 0
  99 0018 0493     		str	r3, [sp, #16]
 150:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 100              		.loc 1 150 0
 101 001a 0123     		movs	r3, #1
 102 001c 0593     		str	r3, [sp, #20]
 151:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 103              		.loc 1 151 0
 104 001e 4FF09040 		mov	r0, #1207959552
 105              	.LVL2:
 106 0022 01A9     		add	r1, sp, #4
 107 0024 FFF7FEFF 		bl	HAL_GPIO_Init
 108              	.LVL3:
 152:Src/tim.c     **** 
 153:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspPostInit 1 */
 154:Src/tim.c     **** 
 155:Src/tim.c     ****   /* USER CODE END TIM2_MspPostInit 1 */
 156:Src/tim.c     ****   }
 157:Src/tim.c     **** 
 158:Src/tim.c     **** }
 109              		.loc 1 158 0
 110 0028 07B0     		add	sp, sp, #28
 111              	.LCFI4:
 112              		.cfi_def_cfa_offset 4
 113              		@ sp needed
 114 002a 5DF804FB 		ldr	pc, [sp], #4
 115              	.LVL4:
 116              	.L9:
 117              	.LCFI5:
 118              		.cfi_def_cfa_offset 0
 119              		.cfi_restore 14
 120 002e 7047     		bx	lr
 121              		.cfi_endproc
 122              	.LFE125:
 124              		.section	.text.MX_TIM2_Init,"ax",%progbits
 125              		.align	2
 126              		.global	MX_TIM2_Init
 127              		.thumb
 128              		.thumb_func
 130              	MX_TIM2_Init:
ARM GAS  /tmp/ccNl898F.s 			page 6


 131              	.LFB123:
  51:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 132              		.loc 1 51 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 56
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136 0000 00B5     		push	{lr}
 137              	.LCFI6:
 138              		.cfi_def_cfa_offset 4
 139              		.cfi_offset 14, -4
 140 0002 8FB0     		sub	sp, sp, #60
 141              	.LCFI7:
 142              		.cfi_def_cfa_offset 64
  56:Src/tim.c     ****   htim2.Init.Prescaler = 71;
 143              		.loc 1 56 0
 144 0004 3748     		ldr	r0, .L20
 145 0006 4FF08043 		mov	r3, #1073741824
 146 000a 0360     		str	r3, [r0]
  57:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 147              		.loc 1 57 0
 148 000c 4723     		movs	r3, #71
 149 000e 4360     		str	r3, [r0, #4]
  58:Src/tim.c     ****   htim2.Init.Period = 19999;
 150              		.loc 1 58 0
 151 0010 0023     		movs	r3, #0
 152 0012 8360     		str	r3, [r0, #8]
  59:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 153              		.loc 1 59 0
 154 0014 44F61F62 		movw	r2, #19999
 155 0018 C260     		str	r2, [r0, #12]
  60:Src/tim.c     ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 156              		.loc 1 60 0
 157 001a 0361     		str	r3, [r0, #16]
  61:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 158              		.loc 1 61 0
 159 001c 8361     		str	r3, [r0, #24]
  62:Src/tim.c     ****   {
 160              		.loc 1 62 0
 161 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 162              	.LVL5:
 163 0022 18B1     		cbz	r0, .L11
  64:Src/tim.c     ****   }
 164              		.loc 1 64 0
 165 0024 3048     		ldr	r0, .L20+4
 166 0026 4021     		movs	r1, #64
 167 0028 FFF7FEFF 		bl	_Error_Handler
 168              	.LVL6:
 169              	.L11:
  67:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 170              		.loc 1 67 0
 171 002c 0EA9     		add	r1, sp, #56
 172 002e 4FF48053 		mov	r3, #4096
 173 0032 41F8103D 		str	r3, [r1, #-16]!
  68:Src/tim.c     ****   {
 174              		.loc 1 68 0
 175 0036 2B48     		ldr	r0, .L20
 176 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
ARM GAS  /tmp/ccNl898F.s 			page 7


 177              	.LVL7:
 178 003c 18B1     		cbz	r0, .L12
  70:Src/tim.c     ****   }
 179              		.loc 1 70 0
 180 003e 2A48     		ldr	r0, .L20+4
 181 0040 4621     		movs	r1, #70
 182 0042 FFF7FEFF 		bl	_Error_Handler
 183              	.LVL8:
 184              	.L12:
  73:Src/tim.c     ****   {
 185              		.loc 1 73 0
 186 0046 2748     		ldr	r0, .L20
 187 0048 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 188              	.LVL9:
 189 004c 18B1     		cbz	r0, .L13
  75:Src/tim.c     ****   }
 190              		.loc 1 75 0
 191 004e 2648     		ldr	r0, .L20+4
 192 0050 4B21     		movs	r1, #75
 193 0052 FFF7FEFF 		bl	_Error_Handler
 194              	.LVL10:
 195              	.L13:
  78:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 196              		.loc 1 78 0
 197 0056 0023     		movs	r3, #0
 198 0058 0793     		str	r3, [sp, #28]
  79:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 199              		.loc 1 79 0
 200 005a 0993     		str	r3, [sp, #36]
  80:Src/tim.c     ****   {
 201              		.loc 1 80 0
 202 005c 2148     		ldr	r0, .L20
 203 005e 07A9     		add	r1, sp, #28
 204 0060 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 205              	.LVL11:
 206 0064 18B1     		cbz	r0, .L14
  82:Src/tim.c     ****   }
 207              		.loc 1 82 0
 208 0066 2048     		ldr	r0, .L20+4
 209 0068 5221     		movs	r1, #82
 210 006a FFF7FEFF 		bl	_Error_Handler
 211              	.LVL12:
 212              	.L14:
  85:Src/tim.c     ****   sConfigOC.Pulse = 1099;
 213              		.loc 1 85 0
 214 006e 6023     		movs	r3, #96
 215 0070 0093     		str	r3, [sp]
  86:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 216              		.loc 1 86 0
 217 0072 40F24B43 		movw	r3, #1099
 218 0076 0193     		str	r3, [sp, #4]
  87:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 219              		.loc 1 87 0
 220 0078 0022     		movs	r2, #0
 221 007a 0292     		str	r2, [sp, #8]
  88:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 222              		.loc 1 88 0
ARM GAS  /tmp/ccNl898F.s 			page 8


 223 007c 0492     		str	r2, [sp, #16]
  89:Src/tim.c     ****   {
 224              		.loc 1 89 0
 225 007e 1948     		ldr	r0, .L20
 226 0080 6946     		mov	r1, sp
 227 0082 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 228              	.LVL13:
 229 0086 18B1     		cbz	r0, .L15
  91:Src/tim.c     ****   }
 230              		.loc 1 91 0
 231 0088 1748     		ldr	r0, .L20+4
 232 008a 5B21     		movs	r1, #91
 233 008c FFF7FEFF 		bl	_Error_Handler
 234              	.LVL14:
 235              	.L15:
  94:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 236              		.loc 1 94 0
 237 0090 40F26B73 		movw	r3, #1899
 238 0094 0193     		str	r3, [sp, #4]
  95:Src/tim.c     ****   {
 239              		.loc 1 95 0
 240 0096 1348     		ldr	r0, .L20
 241 0098 6946     		mov	r1, sp
 242 009a 0422     		movs	r2, #4
 243 009c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 244              	.LVL15:
 245 00a0 18B1     		cbz	r0, .L16
  97:Src/tim.c     ****   }
 246              		.loc 1 97 0
 247 00a2 1148     		ldr	r0, .L20+4
 248 00a4 6121     		movs	r1, #97
 249 00a6 FFF7FEFF 		bl	_Error_Handler
 250              	.LVL16:
 251              	.L16:
 100:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 252              		.loc 1 100 0
 253 00aa 0023     		movs	r3, #0
 254 00ac 0193     		str	r3, [sp, #4]
 101:Src/tim.c     ****   {
 255              		.loc 1 101 0
 256 00ae 0D48     		ldr	r0, .L20
 257 00b0 6946     		mov	r1, sp
 258 00b2 0822     		movs	r2, #8
 259 00b4 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 260              	.LVL17:
 261 00b8 18B1     		cbz	r0, .L17
 103:Src/tim.c     ****   }
 262              		.loc 1 103 0
 263 00ba 0B48     		ldr	r0, .L20+4
 264 00bc 6721     		movs	r1, #103
 265 00be FFF7FEFF 		bl	_Error_Handler
 266              	.LVL18:
 267              	.L17:
 106:Src/tim.c     ****   {
 268              		.loc 1 106 0
 269 00c2 0848     		ldr	r0, .L20
 270 00c4 6946     		mov	r1, sp
ARM GAS  /tmp/ccNl898F.s 			page 9


 271 00c6 0C22     		movs	r2, #12
 272 00c8 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 273              	.LVL19:
 274 00cc 18B1     		cbz	r0, .L18
 108:Src/tim.c     ****   }
 275              		.loc 1 108 0
 276 00ce 0648     		ldr	r0, .L20+4
 277 00d0 6C21     		movs	r1, #108
 278 00d2 FFF7FEFF 		bl	_Error_Handler
 279              	.LVL20:
 280              	.L18:
 111:Src/tim.c     **** 
 281              		.loc 1 111 0
 282 00d6 0348     		ldr	r0, .L20
 283 00d8 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 284              	.LVL21:
 113:Src/tim.c     **** 
 285              		.loc 1 113 0
 286 00dc 0FB0     		add	sp, sp, #60
 287              	.LCFI8:
 288              		.cfi_def_cfa_offset 4
 289              		@ sp needed
 290 00de 5DF804FB 		ldr	pc, [sp], #4
 291              	.L21:
 292 00e2 00BF     		.align	2
 293              	.L20:
 294 00e4 00000000 		.word	htim2
 295 00e8 00000000 		.word	.LC0
 296              		.cfi_endproc
 297              	.LFE123:
 299              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 300              		.align	2
 301              		.global	HAL_TIM_Base_MspDeInit
 302              		.thumb
 303              		.thumb_func
 305              	HAL_TIM_Base_MspDeInit:
 306              	.LFB126:
 159:Src/tim.c     **** 
 160:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 161:Src/tim.c     **** {
 307              		.loc 1 161 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 312              	.LVL22:
 162:Src/tim.c     **** 
 163:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
 313              		.loc 1 163 0
 314 0000 0368     		ldr	r3, [r0]
 315 0002 B3F1804F 		cmp	r3, #1073741824
 316 0006 04D1     		bne	.L22
 164:Src/tim.c     ****   {
 165:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 166:Src/tim.c     **** 
 167:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 168:Src/tim.c     ****     /* Peripheral clock disable */
ARM GAS  /tmp/ccNl898F.s 			page 10


 169:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 317              		.loc 1 169 0
 318 0008 024A     		ldr	r2, .L24
 319 000a D369     		ldr	r3, [r2, #28]
 320 000c 23F00103 		bic	r3, r3, #1
 321 0010 D361     		str	r3, [r2, #28]
 322              	.L22:
 323 0012 7047     		bx	lr
 324              	.L25:
 325              		.align	2
 326              	.L24:
 327 0014 00100240 		.word	1073876992
 328              		.cfi_endproc
 329              	.LFE126:
 331              		.comm	htim2,64,4
 332              		.section	.rodata.str1.4,"aMS",%progbits,1
 333              		.align	2
 334              	.LC0:
 335 0000 5372632F 		.ascii	"Src/tim.c\000"
 335      74696D2E 
 335      6300
 336              		.text
 337              	.Letext0:
 338              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 339              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 340              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 341              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 342              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 343              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 344              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 345              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim_ex.h"
 346              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 347              		.file 11 "Inc/tim.h"
ARM GAS  /tmp/ccNl898F.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccNl898F.s:21     .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccNl898F.s:26     .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccNl898F.s:65     .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccNl898F.s:70     .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccNl898F.s:125    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccNl898F.s:130    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccNl898F.s:294    .text.MX_TIM2_Init:00000000000000e4 $d
                            *COM*:0000000000000040 htim2
     /tmp/ccNl898F.s:300    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccNl898F.s:305    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccNl898F.s:327    .text.HAL_TIM_Base_MspDeInit:0000000000000014 $d
     /tmp/ccNl898F.s:333    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_TIM_Base_Init
_Error_Handler
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
