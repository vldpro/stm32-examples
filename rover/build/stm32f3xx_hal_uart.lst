ARM GAS  /tmp/ccWyKvi9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_hal_uart.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	UART_EndTxTransfer:
  26              	.LFB166:
  27              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @file    stm32f3xx_hal_uart.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   [..]
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
ARM GAS  /tmp/ccWyKvi9.s 			page 2


  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 RXNE interrupt and Error Interrupts) are managed using the macros
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit and receive 
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_UART_Init() API.
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..]
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (@) These APIs (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_MultiProcessor_Init(),
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         also configure the low level Hardware (GPIO, CLOCK, CORTEX...etc) by
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..]
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..] Three operation modes are available within this driver :
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** Polling mode IO operation ***
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      =================================
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      ===================================
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
ARM GAS  /tmp/ccWyKvi9.s 			page 3


  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** DMA mode IO operation ***
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      ==============================
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** UART HAL driver macros list ***
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      =============================================
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @endverbatim
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @attention
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      without specific prior written permission.
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
ARM GAS  /tmp/ccWyKvi9.s 			page 4


 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #include "stm32f3xx_hal.h"
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup STM32F3xx_HAL_Driver
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART UART
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART HAL module driver
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
ARM GAS  /tmp/ccWyKvi9.s 			page 5


 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** ===============================================================================
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in asynchronous mode.
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Baud Rate
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Word Length
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Stop Bit
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Parity
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Hardware flow control
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Receiver/transmitter modes
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Over Sampling Method
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) One-Bit Sampling Method
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) data logical level inversion
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX and TX pins swap
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX overrun detection disabling
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA disabling on RX error
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) MSB first on communication line
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) auto Baud rate detection
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init()
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     API follow respectively the UART asynchronous, UART Half duplex, UART LIN mode and
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     multiprocessor configuration procedures (details for the procedures are available in reference 
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /*
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   Additional Table: If the parity is enabled, then the MSB bit of the data written
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     in the data register is transmitted but is changed by the parity bit.
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     According to device capability (support or not of 7-bit word length),
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     frame length is either defined by the M bit (8-bits or 9-bits)
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     or by the M1 and M0 bits (7-bit, 8-bit or 9-bit).
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     Possible UART frame formats are as listed in the following table:
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       Table 1. UART frame format.             
ARM GAS  /tmp/ccWyKvi9.s 			page 6


 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |       M bit       |  PCE bit  |             UART frame                |
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         0         |     0     |    | SB |    8-bit data   | STB |     |
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         0         |     1     |    | SB | 7-bit data | PB | STB |     |
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         1         |     0     |    | SB |    9-bit data   | STB |     |
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         1         |     1     |    | SB | 8-bit data | PB | STB |     |
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    0    |     0     |    | SB |    8 bit data   | STB |     |
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    0    |     1     |    | SB | 7 bit data | PB | STB |     |
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    1    |     0     |    | SB |    9 bit data   | STB |     |
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    1    |     1     |    | SB | 8 bit data | PB | STB |     |
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    1    |    0    |     0     |    | SB |    7 bit data   | STB |     |
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    1    |    0    |     1     |    | SB | 6 bit data | PB | STB |     |
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
ARM GAS  /tmp/ccWyKvi9.s 			page 7


 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check UART instance */
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
ARM GAS  /tmp/ccWyKvi9.s 			page 8


 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param BreakDetectLength specifies the LIN break detection length.
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the LIN UART instance */
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the Break detection length parameter */
ARM GAS  /tmp/ccWyKvi9.s 			page 9


 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.WordLength != UART_WORDLENGTH_8B)
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccWyKvi9.s 			page 10


 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Address UART node address (4-, 6-, 7- or 8-bit long).
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpMethod specifies the UART wakeup method.
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the wake up method parameter */
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
ARM GAS  /tmp/ccWyKvi9.s 			page 11


 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DeInit the low level hardware */
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlock */
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
ARM GAS  /tmp/ccWyKvi9.s 			page 12


 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### IO operation functions #####
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and Half duplex data transfers.
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) There are two mode of transfer:
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode.
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            after finishing transfer.
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (++) Non-Blocking mode: The communication is performed using Interrupts
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The end of the data processing will be indicated through the
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            using DMA mode.
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
ARM GAS  /tmp/ccWyKvi9.s 			page 13


 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Blocking mode API's are :
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive()
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Abort()
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit()
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceive()
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Abort_IT()
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit_IT()
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceive_IT()
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortCpltCallback()
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmitCpltCallback()
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceiveCpltCallback()
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         Errors are handled as follows :
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Error is considered as Recoverable and non blocking : Transfer could go till end, but 
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in In
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              Received character is then retrieved and stored in Rx buffer, Error code is set to all
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UA
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              If user wants to abort it, Abort services should be called by user.
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Error is considered as Blocking : Transfer could not be completed properly and is abor
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() u
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
ARM GAS  /tmp/ccWyKvi9.s 			page 14


 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size Amount of data to be sent.
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout Timeout duration.
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData += 2U;
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccWyKvi9.s 			page 15


 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be received.
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout Timeout duration.
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t uhMask;
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* as long as data have to be received */
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount--;
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
ARM GAS  /tmp/ccWyKvi9.s 			page 16


 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData +=2U;
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be sent.
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
ARM GAS  /tmp/ccWyKvi9.s 			page 17


 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be received.
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccWyKvi9.s 			page 18


 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be sent.
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note This function starts a DMA transfer in interrupt mode meaning that
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       DMA half transfer complete, DMA transfer complete and DMA transfer
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       error interrupts are enabled
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_DMA_INSTANCE(huart->Instance));
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA error callback */
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA abort callback */
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
ARM GAS  /tmp/ccWyKvi9.s 			page 19


1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be received.
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the parity bit (MSB position).
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note This function starts a DMA transfer in interrupt mode meaning that
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       DMA half transfer complete, DMA transfer complete and DMA transfer
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       error interrupts are enabled
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_DMA_INSTANCE(huart->Instance));
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA error callback */
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA abort callback */
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA channel */
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
ARM GAS  /tmp/ccWyKvi9.s 			page 20


1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Pause the DMA Transfer.
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Resume the DMA Transfer.
ARM GAS  /tmp/ccWyKvi9.s 			page 21


1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Stop the DMA Transfer.
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback: 
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete  
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of 
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
ARM GAS  /tmp/ccWyKvi9.s 			page 22


1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
ARM GAS  /tmp/ccWyKvi9.s 			page 23


1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
ARM GAS  /tmp/ccWyKvi9.s 			page 24


1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx transfer counter */
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Rx transfer counter */
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccWyKvi9.s 			page 25


1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      before any call to DMA Abort functions */
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
ARM GAS  /tmp/ccWyKvi9.s 			page 26


1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 1U;
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (abortcplt == 1U)
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccWyKvi9.s 			page 27


1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset errorCode */
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
ARM GAS  /tmp/ccWyKvi9.s 			page 28


1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Tx transfer counter */
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount = 0U; 
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx transfer counter */
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccWyKvi9.s 			page 29


1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Rx transfer counter */
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount = 0U; 
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Rx transfer counter */
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U; 
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Handle UART interrupt request.
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr3its;
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t errorflags;
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If no error occurs */
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (errorflags == RESET)
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
ARM GAS  /tmp/ccWyKvi9.s 			page 30


1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       UART_Receive_IT(huart);
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }  
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If some errors occur */
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   cr3its = READ_REG(huart->Instance->CR3);
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(   (errorflags != RESET)
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         UART_Receive_IT(huart);
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          consider error as blocking */
ARM GAS  /tmp/ccWyKvi9.s 			page 31


1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {  
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Abort DMA RX */
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             {
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           else
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
1714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Call user error callback */
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         else
1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Call user error callback */
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Error is notified to user through user error callback */
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   } /* End if some error occurs */
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_WUF);
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccWyKvi9.s 			page 32


1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_Transmit_IT(huart);
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccWyKvi9.s 			page 33


1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
1810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART error callback.
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/ccWyKvi9.s 			page 34


1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief   UART control functions
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
1890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
1902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
1908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccWyKvi9.s 			page 35


1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
1929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccWyKvi9.s 			page 36


1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
1972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
1974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
1985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status.
1987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Transmit break characters.
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Send break characters */
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->RQR |= UART_SENDBREAK_REQUEST;
2024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccWyKvi9.s 			page 37


2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  *
2041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides functions allowing to :
2047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle state.
2048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle error code
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
2051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Return the UART handle state.
2056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL state
2059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp1 = huart->gState;
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp2 = huart->RxState;
2065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval UART Error Code
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
ARM GAS  /tmp/ccWyKvi9.s 			page 38


2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
2099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
2118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
2119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
2121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * to huart->Init.StopBits value */
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
2133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
2134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
2135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
2138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
ARM GAS  /tmp/ccWyKvi9.s 			page 39


2141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.B
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
2194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccWyKvi9.s 			page 40


2198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return ret;
2199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
2214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
2217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
2221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
2224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure data inversion */
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
2228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
2231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
2238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
2242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
2245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
2249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
2252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
ARM GAS  /tmp/ccWyKvi9.s 			page 41


2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
2256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
2260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
2265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
2270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Check the UART Idle State.
2278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tickstart = HAL_GetTick();
2290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
2293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout Occured */
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
2299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Receiver is enabled */
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
2303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until REACK flag is set */
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout Occured */
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
2309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccWyKvi9.s 			page 42


2312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART State */
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Flag Specifies the UART flag to check
2326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Status Flag status (SET or RESET)
2327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Tickstart Tick start value
2328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Timeout Timeout duration
2329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check for the Timeout */
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Process Unlocked */
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  28              		.loc 1 2364 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccWyKvi9.s 			page 43


  32              		@ link register save eliminated.
  33              	.LVL0:
2365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  34              		.loc 1 2366 0
  35 0000 0268     		ldr	r2, [r0]
  36 0002 1368     		ldr	r3, [r2]
  37 0004 23F0C003 		bic	r3, r3, #192
  38 0008 1360     		str	r3, [r2]
2367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  39              		.loc 1 2369 0
  40 000a 2023     		movs	r3, #32
  41 000c 80F86930 		strb	r3, [r0, #105]
  42 0010 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE166:
  46 0012 00BF     		.section	.text.UART_EndRxTransfer,"ax",%progbits
  47              		.align	2
  48              		.thumb
  49              		.thumb_func
  51              	UART_EndRxTransfer:
  52              	.LFB167:
2370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  53              		.loc 1 2379 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.LVL1:
2380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  59              		.loc 1 2381 0
  60 0000 0268     		ldr	r2, [r0]
  61 0002 1368     		ldr	r3, [r2]
  62 0004 23F49073 		bic	r3, r3, #288
  63 0008 1360     		str	r3, [r2]
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  64              		.loc 1 2382 0
  65 000a 0268     		ldr	r2, [r0]
  66 000c 9368     		ldr	r3, [r2, #8]
  67 000e 23F00103 		bic	r3, r3, #1
  68 0012 9360     		str	r3, [r2, #8]
2383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  69              		.loc 1 2385 0
ARM GAS  /tmp/ccWyKvi9.s 			page 44


  70 0014 2023     		movs	r3, #32
  71 0016 80F86A30 		strb	r3, [r0, #106]
  72 001a 7047     		bx	lr
  73              		.cfi_endproc
  74              	.LFE167:
  76              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  77              		.align	2
  78              		.weak	HAL_UART_MspInit
  79              		.thumb
  80              		.thumb_func
  82              	HAL_UART_MspInit:
  83              	.LFB128:
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
  84              		.loc 1 610 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89              	.LVL2:
  90 0000 7047     		bx	lr
  91              		.cfi_endproc
  92              	.LFE128:
  94 0002 00BF     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
  95              		.align	2
  96              		.weak	HAL_UART_MspDeInit
  97              		.thumb
  98              		.thumb_func
 100              	HAL_UART_MspDeInit:
 101              	.LFB129:
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 102              		.loc 1 625 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.LVL3:
 108 0000 7047     		bx	lr
 109              		.cfi_endproc
 110              	.LFE129:
 112 0002 00BF     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 113              		.align	2
 114              		.global	HAL_UART_DeInit
 115              		.thumb
 116              		.thumb_func
 118              	HAL_UART_DeInit:
 119              	.LFB127:
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 120              		.loc 1 572 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              	.LVL4:
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 125              		.loc 1 574 0
 126 0000 D8B1     		cbz	r0, .L7
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 127              		.loc 1 572 0
ARM GAS  /tmp/ccWyKvi9.s 			page 45


 128 0002 38B5     		push	{r3, r4, r5, lr}
 129              	.LCFI0:
 130              		.cfi_def_cfa_offset 16
 131              		.cfi_offset 3, -16
 132              		.cfi_offset 4, -12
 133              		.cfi_offset 5, -8
 134              		.cfi_offset 14, -4
 135 0004 0446     		mov	r4, r0
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 136              		.loc 1 582 0
 137 0006 2423     		movs	r3, #36
 138 0008 80F86930 		strb	r3, [r0, #105]
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 139              		.loc 1 585 0
 140 000c 0268     		ldr	r2, [r0]
 141 000e 1368     		ldr	r3, [r2]
 142 0010 23F00103 		bic	r3, r3, #1
 143 0014 1360     		str	r3, [r2]
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 144              		.loc 1 587 0
 145 0016 0368     		ldr	r3, [r0]
 146 0018 0025     		movs	r5, #0
 147 001a 1D60     		str	r5, [r3]
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 148              		.loc 1 588 0
 149 001c 0368     		ldr	r3, [r0]
 150 001e 5D60     		str	r5, [r3, #4]
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 151              		.loc 1 589 0
 152 0020 0368     		ldr	r3, [r0]
 153 0022 9D60     		str	r5, [r3, #8]
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 154              		.loc 1 592 0
 155 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 156              	.LVL5:
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 157              		.loc 1 594 0
 158 0028 E566     		str	r5, [r4, #108]
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 159              		.loc 1 595 0
 160 002a 84F86950 		strb	r5, [r4, #105]
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 161              		.loc 1 596 0
 162 002e 84F86A50 		strb	r5, [r4, #106]
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 163              		.loc 1 599 0
 164 0032 84F86850 		strb	r5, [r4, #104]
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 165              		.loc 1 601 0
 166 0036 2846     		mov	r0, r5
 167 0038 38BD     		pop	{r3, r4, r5, pc}
 168              	.LVL6:
 169              	.L7:
 170              	.LCFI1:
 171              		.cfi_def_cfa_offset 0
 172              		.cfi_restore 3
 173              		.cfi_restore 4
ARM GAS  /tmp/ccWyKvi9.s 			page 46


 174              		.cfi_restore 5
 175              		.cfi_restore 14
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 176              		.loc 1 576 0
 177 003a 0120     		movs	r0, #1
 178              	.LVL7:
 179 003c 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE127:
 183 003e 00BF     		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 184              		.align	2
 185              		.global	HAL_UART_Transmit_IT
 186              		.thumb
 187              		.thumb_func
 189              	HAL_UART_Transmit_IT:
 190              	.LFB132:
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 191              		.loc 1 864 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196              	.LVL8:
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 197              		.loc 1 866 0
 198 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 199 0004 DBB2     		uxtb	r3, r3
 200 0006 202B     		cmp	r3, #32
 201 0008 18D1     		bne	.L12
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 202              		.loc 1 868 0
 203 000a C9B1     		cbz	r1, .L13
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 204              		.loc 1 868 0 is_stmt 0 discriminator 1
 205 000c D2B1     		cbz	r2, .L14
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 206              		.loc 1 874 0 is_stmt 1
 207 000e 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 208 0012 012B     		cmp	r3, #1
 209 0014 18D0     		beq	.L15
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 210              		.loc 1 876 0 discriminator 2
 211 0016 C164     		str	r1, [r0, #76]
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 212              		.loc 1 877 0 discriminator 2
 213 0018 A0F85020 		strh	r2, [r0, #80]	@ movhi
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 214              		.loc 1 878 0 discriminator 2
 215 001c A0F85220 		strh	r2, [r0, #82]	@ movhi
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 216              		.loc 1 880 0 discriminator 2
 217 0020 0023     		movs	r3, #0
 218 0022 C366     		str	r3, [r0, #108]
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 219              		.loc 1 881 0 discriminator 2
 220 0024 2122     		movs	r2, #33
 221              	.LVL9:
ARM GAS  /tmp/ccWyKvi9.s 			page 47


 222 0026 80F86920 		strb	r2, [r0, #105]
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 223              		.loc 1 884 0 discriminator 2
 224 002a 80F86830 		strb	r3, [r0, #104]
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 225              		.loc 1 887 0 discriminator 2
 226 002e 0168     		ldr	r1, [r0]
 227              	.LVL10:
 228 0030 0A68     		ldr	r2, [r1]
 229 0032 42F08002 		orr	r2, r2, #128
 230 0036 0A60     		str	r2, [r1]
 231              	.LVL11:
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 232              		.loc 1 889 0 discriminator 2
 233 0038 1846     		mov	r0, r3
 234              	.LVL12:
 235 003a 7047     		bx	lr
 236              	.LVL13:
 237              	.L12:
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 238              		.loc 1 893 0
 239 003c 0220     		movs	r0, #2
 240              	.LVL14:
 241 003e 7047     		bx	lr
 242              	.LVL15:
 243              	.L13:
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 244              		.loc 1 870 0
 245 0040 0120     		movs	r0, #1
 246              	.LVL16:
 247 0042 7047     		bx	lr
 248              	.LVL17:
 249              	.L14:
 250 0044 0120     		movs	r0, #1
 251              	.LVL18:
 252 0046 7047     		bx	lr
 253              	.LVL19:
 254              	.L15:
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 255              		.loc 1 874 0
 256 0048 0220     		movs	r0, #2
 257              	.LVL20:
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 258              		.loc 1 895 0
 259 004a 7047     		bx	lr
 260              		.cfi_endproc
 261              	.LFE132:
 263              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 264              		.align	2
 265              		.global	HAL_UART_Receive_IT
 266              		.thumb
 267              		.thumb_func
 269              	HAL_UART_Receive_IT:
 270              	.LFB133:
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 271              		.loc 1 905 0
 272              		.cfi_startproc
ARM GAS  /tmp/ccWyKvi9.s 			page 48


 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		@ link register save eliminated.
 276              	.LVL21:
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 277              		.loc 1 907 0
 278 0000 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 279 0004 DBB2     		uxtb	r3, r3
 280 0006 202B     		cmp	r3, #32
 281 0008 48D1     		bne	.L24
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 282              		.loc 1 909 0
 283 000a 0029     		cmp	r1, #0
 284 000c 48D0     		beq	.L25
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 285              		.loc 1 909 0 is_stmt 0 discriminator 1
 286 000e 002A     		cmp	r2, #0
 287 0010 48D0     		beq	.L26
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 288              		.loc 1 915 0 is_stmt 1
 289 0012 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 290 0016 012B     		cmp	r3, #1
 291 0018 46D0     		beq	.L27
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 292              		.loc 1 915 0 is_stmt 0 discriminator 2
 293 001a 0123     		movs	r3, #1
 294 001c 80F86830 		strb	r3, [r0, #104]
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 295              		.loc 1 917 0 is_stmt 1 discriminator 2
 296 0020 4165     		str	r1, [r0, #84]
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 297              		.loc 1 918 0 discriminator 2
 298 0022 A0F85820 		strh	r2, [r0, #88]	@ movhi
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 299              		.loc 1 919 0 discriminator 2
 300 0026 A0F85A20 		strh	r2, [r0, #90]	@ movhi
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 301              		.loc 1 922 0 discriminator 2
 302 002a 8368     		ldr	r3, [r0, #8]
 303 002c B3F5805F 		cmp	r3, #4096
 304 0030 0AD1     		bne	.L18
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 305              		.loc 1 922 0 is_stmt 0 discriminator 1
 306 0032 0369     		ldr	r3, [r0, #16]
 307 0034 23B9     		cbnz	r3, .L19
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 308              		.loc 1 922 0 discriminator 3
 309 0036 40F2FF13 		movw	r3, #511
 310 003a A0F85C30 		strh	r3, [r0, #92]	@ movhi
 311 003e 1AE0     		b	.L20
 312              	.L19:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 313              		.loc 1 922 0 discriminator 4
 314 0040 FF23     		movs	r3, #255
 315 0042 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 316 0046 16E0     		b	.L20
 317              	.L18:
ARM GAS  /tmp/ccWyKvi9.s 			page 49


 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 318              		.loc 1 922 0 discriminator 2
 319 0048 4BB9     		cbnz	r3, .L21
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 320              		.loc 1 922 0 discriminator 5
 321 004a 0369     		ldr	r3, [r0, #16]
 322 004c 1BB9     		cbnz	r3, .L22
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 323              		.loc 1 922 0 discriminator 7
 324 004e FF23     		movs	r3, #255
 325 0050 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 326 0054 0FE0     		b	.L20
 327              	.L22:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 328              		.loc 1 922 0 discriminator 8
 329 0056 7F23     		movs	r3, #127
 330 0058 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 331 005c 0BE0     		b	.L20
 332              	.L21:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 333              		.loc 1 922 0 discriminator 6
 334 005e B3F1805F 		cmp	r3, #268435456
 335 0062 08D1     		bne	.L20
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 336              		.loc 1 922 0 discriminator 9
 337 0064 0369     		ldr	r3, [r0, #16]
 338 0066 1BB9     		cbnz	r3, .L23
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 339              		.loc 1 922 0 discriminator 10
 340 0068 7F23     		movs	r3, #127
 341 006a A0F85C30 		strh	r3, [r0, #92]	@ movhi
 342 006e 02E0     		b	.L20
 343              	.L23:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 344              		.loc 1 922 0 discriminator 11
 345 0070 3F23     		movs	r3, #63
 346 0072 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 347              	.L20:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 348              		.loc 1 924 0 is_stmt 1
 349 0076 0023     		movs	r3, #0
 350 0078 C366     		str	r3, [r0, #108]
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 351              		.loc 1 925 0
 352 007a 2222     		movs	r2, #34
 353              	.LVL22:
 354 007c 80F86A20 		strb	r2, [r0, #106]
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 355              		.loc 1 928 0
 356 0080 80F86830 		strb	r3, [r0, #104]
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 357              		.loc 1 931 0
 358 0084 0168     		ldr	r1, [r0]
 359              	.LVL23:
 360 0086 8A68     		ldr	r2, [r1, #8]
 361 0088 42F00102 		orr	r2, r2, #1
 362 008c 8A60     		str	r2, [r1, #8]
ARM GAS  /tmp/ccWyKvi9.s 			page 50


 363              	.LVL24:
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 364              		.loc 1 934 0
 365 008e 0168     		ldr	r1, [r0]
 366 0090 0A68     		ldr	r2, [r1]
 367 0092 42F49072 		orr	r2, r2, #288
 368 0096 0A60     		str	r2, [r1]
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 369              		.loc 1 936 0
 370 0098 1846     		mov	r0, r3
 371              	.LVL25:
 372 009a 7047     		bx	lr
 373              	.LVL26:
 374              	.L24:
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 375              		.loc 1 940 0
 376 009c 0220     		movs	r0, #2
 377              	.LVL27:
 378 009e 7047     		bx	lr
 379              	.LVL28:
 380              	.L25:
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 381              		.loc 1 911 0
 382 00a0 0120     		movs	r0, #1
 383              	.LVL29:
 384 00a2 7047     		bx	lr
 385              	.LVL30:
 386              	.L26:
 387 00a4 0120     		movs	r0, #1
 388              	.LVL31:
 389 00a6 7047     		bx	lr
 390              	.LVL32:
 391              	.L27:
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 392              		.loc 1 915 0
 393 00a8 0220     		movs	r0, #2
 394              	.LVL33:
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 395              		.loc 1 942 0
 396 00aa 7047     		bx	lr
 397              		.cfi_endproc
 398              	.LFE133:
 400              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 401              		.align	2
 402              		.global	HAL_UART_Transmit_DMA
 403              		.thumb
 404              		.thumb_func
 406              	HAL_UART_Transmit_DMA:
 407              	.LFB134:
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
 408              		.loc 1 955 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              	.LVL34:
 413 0000 38B5     		push	{r3, r4, r5, lr}
 414              	.LCFI2:
ARM GAS  /tmp/ccWyKvi9.s 			page 51


 415              		.cfi_def_cfa_offset 16
 416              		.cfi_offset 3, -16
 417              		.cfi_offset 4, -12
 418              		.cfi_offset 5, -8
 419              		.cfi_offset 14, -4
 420 0002 0446     		mov	r4, r0
 421 0004 1346     		mov	r3, r2
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 422              		.loc 1 960 0
 423 0006 90F86920 		ldrb	r2, [r0, #105]	@ zero_extendqisi2
 424              	.LVL35:
 425 000a D2B2     		uxtb	r2, r2
 426 000c 202A     		cmp	r2, #32
 427 000e 31D1     		bne	.L30
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 428              		.loc 1 962 0
 429 0010 0029     		cmp	r1, #0
 430 0012 31D0     		beq	.L31
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 431              		.loc 1 962 0 is_stmt 0 discriminator 1
 432 0014 002B     		cmp	r3, #0
 433 0016 31D0     		beq	.L32
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 434              		.loc 1 968 0 is_stmt 1
 435 0018 90F86820 		ldrb	r2, [r0, #104]	@ zero_extendqisi2
 436 001c 012A     		cmp	r2, #1
 437 001e 2FD0     		beq	.L33
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 438              		.loc 1 968 0 is_stmt 0 discriminator 2
 439 0020 0122     		movs	r2, #1
 440 0022 80F86820 		strb	r2, [r0, #104]
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 441              		.loc 1 970 0 is_stmt 1 discriminator 2
 442 0026 C164     		str	r1, [r0, #76]
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 443              		.loc 1 971 0 discriminator 2
 444 0028 A0F85030 		strh	r3, [r0, #80]	@ movhi
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 445              		.loc 1 972 0 discriminator 2
 446 002c A0F85230 		strh	r3, [r0, #82]	@ movhi
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 447              		.loc 1 974 0 discriminator 2
 448 0030 0025     		movs	r5, #0
 449 0032 C566     		str	r5, [r0, #108]
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 450              		.loc 1 975 0 discriminator 2
 451 0034 2122     		movs	r2, #33
 452 0036 80F86920 		strb	r2, [r0, #105]
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 453              		.loc 1 978 0 discriminator 2
 454 003a 026E     		ldr	r2, [r0, #96]
 455 003c 1149     		ldr	r1, .L35
 456              	.LVL36:
 457 003e 9162     		str	r1, [r2, #40]
 458              	.LVL37:
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 459              		.loc 1 981 0 discriminator 2
ARM GAS  /tmp/ccWyKvi9.s 			page 52


 460 0040 026E     		ldr	r2, [r0, #96]
 461 0042 1149     		ldr	r1, .L35+4
 462 0044 D162     		str	r1, [r2, #44]
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 463              		.loc 1 984 0 discriminator 2
 464 0046 026E     		ldr	r2, [r0, #96]
 465 0048 1049     		ldr	r1, .L35+8
 466 004a 1163     		str	r1, [r2, #48]
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 467              		.loc 1 987 0 discriminator 2
 468 004c 026E     		ldr	r2, [r0, #96]
 469 004e 5563     		str	r5, [r2, #52]
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 470              		.loc 1 990 0 discriminator 2
 471 0050 0268     		ldr	r2, [r0]
 472 0052 006E     		ldr	r0, [r0, #96]
 473              	.LVL38:
 474 0054 E16C     		ldr	r1, [r4, #76]
 475 0056 2832     		adds	r2, r2, #40
 476 0058 FFF7FEFF 		bl	HAL_DMA_Start_IT
 477              	.LVL39:
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 478              		.loc 1 993 0 discriminator 2
 479 005c 2368     		ldr	r3, [r4]
 480 005e 4022     		movs	r2, #64
 481 0060 1A62     		str	r2, [r3, #32]
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 482              		.loc 1 996 0 discriminator 2
 483 0062 84F86850 		strb	r5, [r4, #104]
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 484              		.loc 1 1000 0 discriminator 2
 485 0066 2268     		ldr	r2, [r4]
 486 0068 9368     		ldr	r3, [r2, #8]
 487 006a 43F08003 		orr	r3, r3, #128
 488 006e 9360     		str	r3, [r2, #8]
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 489              		.loc 1 1002 0 discriminator 2
 490 0070 2846     		mov	r0, r5
 491 0072 38BD     		pop	{r3, r4, r5, pc}
 492              	.LVL40:
 493              	.L30:
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 494              		.loc 1 1006 0
 495 0074 0220     		movs	r0, #2
 496              	.LVL41:
 497 0076 38BD     		pop	{r3, r4, r5, pc}
 498              	.LVL42:
 499              	.L31:
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 500              		.loc 1 964 0
 501 0078 0120     		movs	r0, #1
 502              	.LVL43:
 503 007a 38BD     		pop	{r3, r4, r5, pc}
 504              	.LVL44:
 505              	.L32:
 506 007c 0120     		movs	r0, #1
 507              	.LVL45:
ARM GAS  /tmp/ccWyKvi9.s 			page 53


 508 007e 38BD     		pop	{r3, r4, r5, pc}
 509              	.LVL46:
 510              	.L33:
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 511              		.loc 1 968 0
 512 0080 0220     		movs	r0, #2
 513              	.LVL47:
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 514              		.loc 1 1008 0
 515 0082 38BD     		pop	{r3, r4, r5, pc}
 516              	.LVL48:
 517              	.L36:
 518              		.align	2
 519              	.L35:
 520 0084 00000000 		.word	UART_DMATransmitCplt
 521 0088 00000000 		.word	UART_DMATxHalfCplt
 522 008c 00000000 		.word	UART_DMAError
 523              		.cfi_endproc
 524              	.LFE134:
 526              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 527              		.align	2
 528              		.global	HAL_UART_Receive_DMA
 529              		.thumb
 530              		.thumb_func
 532              	HAL_UART_Receive_DMA:
 533              	.LFB135:
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
 534              		.loc 1 1023 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              	.LVL49:
 539 0000 38B5     		push	{r3, r4, r5, lr}
 540              	.LCFI3:
 541              		.cfi_def_cfa_offset 16
 542              		.cfi_offset 3, -16
 543              		.cfi_offset 4, -12
 544              		.cfi_offset 5, -8
 545              		.cfi_offset 14, -4
 546 0002 0446     		mov	r4, r0
 547 0004 1346     		mov	r3, r2
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 548              		.loc 1 1028 0
 549 0006 90F86A20 		ldrb	r2, [r0, #106]	@ zero_extendqisi2
 550              	.LVL50:
 551 000a D2B2     		uxtb	r2, r2
 552 000c 202A     		cmp	r2, #32
 553 000e 36D1     		bne	.L39
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 554              		.loc 1 1030 0
 555 0010 0029     		cmp	r1, #0
 556 0012 36D0     		beq	.L40
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 557              		.loc 1 1030 0 is_stmt 0 discriminator 1
 558 0014 002B     		cmp	r3, #0
 559 0016 36D0     		beq	.L41
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccWyKvi9.s 			page 54


 560              		.loc 1 1036 0 is_stmt 1
 561 0018 90F86820 		ldrb	r2, [r0, #104]	@ zero_extendqisi2
 562 001c 012A     		cmp	r2, #1
 563 001e 34D0     		beq	.L42
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 564              		.loc 1 1036 0 is_stmt 0 discriminator 2
 565 0020 0122     		movs	r2, #1
 566 0022 80F86820 		strb	r2, [r0, #104]
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 567              		.loc 1 1038 0 is_stmt 1 discriminator 2
 568 0026 4165     		str	r1, [r0, #84]
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 569              		.loc 1 1039 0 discriminator 2
 570 0028 A0F85830 		strh	r3, [r0, #88]	@ movhi
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 571              		.loc 1 1041 0 discriminator 2
 572 002c 0025     		movs	r5, #0
 573 002e C566     		str	r5, [r0, #108]
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 574              		.loc 1 1042 0 discriminator 2
 575 0030 2222     		movs	r2, #34
 576 0032 80F86A20 		strb	r2, [r0, #106]
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 577              		.loc 1 1045 0 discriminator 2
 578 0036 426E     		ldr	r2, [r0, #100]
 579 0038 1549     		ldr	r1, .L44
 580              	.LVL51:
 581 003a 9162     		str	r1, [r2, #40]
 582              	.LVL52:
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 583              		.loc 1 1048 0 discriminator 2
 584 003c 426E     		ldr	r2, [r0, #100]
 585 003e 1549     		ldr	r1, .L44+4
 586 0040 D162     		str	r1, [r2, #44]
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 587              		.loc 1 1051 0 discriminator 2
 588 0042 426E     		ldr	r2, [r0, #100]
 589 0044 1449     		ldr	r1, .L44+8
 590 0046 1163     		str	r1, [r2, #48]
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 591              		.loc 1 1054 0 discriminator 2
 592 0048 426E     		ldr	r2, [r0, #100]
 593 004a 5563     		str	r5, [r2, #52]
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 594              		.loc 1 1057 0 discriminator 2
 595 004c 0168     		ldr	r1, [r0]
 596 004e 406E     		ldr	r0, [r0, #100]
 597              	.LVL53:
 598 0050 2431     		adds	r1, r1, #36
 599 0052 626D     		ldr	r2, [r4, #84]
 600 0054 FFF7FEFF 		bl	HAL_DMA_Start_IT
 601              	.LVL54:
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 602              		.loc 1 1060 0 discriminator 2
 603 0058 84F86850 		strb	r5, [r4, #104]
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 604              		.loc 1 1063 0 discriminator 2
ARM GAS  /tmp/ccWyKvi9.s 			page 55


 605 005c 2268     		ldr	r2, [r4]
 606 005e 1368     		ldr	r3, [r2]
 607 0060 43F48073 		orr	r3, r3, #256
 608 0064 1360     		str	r3, [r2]
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 609              		.loc 1 1066 0 discriminator 2
 610 0066 2268     		ldr	r2, [r4]
 611 0068 9368     		ldr	r3, [r2, #8]
 612 006a 43F00103 		orr	r3, r3, #1
 613 006e 9360     		str	r3, [r2, #8]
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 614              		.loc 1 1070 0 discriminator 2
 615 0070 2268     		ldr	r2, [r4]
 616 0072 9368     		ldr	r3, [r2, #8]
 617 0074 43F04003 		orr	r3, r3, #64
 618 0078 9360     		str	r3, [r2, #8]
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 619              		.loc 1 1072 0 discriminator 2
 620 007a 2846     		mov	r0, r5
 621 007c 38BD     		pop	{r3, r4, r5, pc}
 622              	.LVL55:
 623              	.L39:
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 624              		.loc 1 1076 0
 625 007e 0220     		movs	r0, #2
 626              	.LVL56:
 627 0080 38BD     		pop	{r3, r4, r5, pc}
 628              	.LVL57:
 629              	.L40:
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 630              		.loc 1 1032 0
 631 0082 0120     		movs	r0, #1
 632              	.LVL58:
 633 0084 38BD     		pop	{r3, r4, r5, pc}
 634              	.LVL59:
 635              	.L41:
 636 0086 0120     		movs	r0, #1
 637              	.LVL60:
 638 0088 38BD     		pop	{r3, r4, r5, pc}
 639              	.LVL61:
 640              	.L42:
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 641              		.loc 1 1036 0
 642 008a 0220     		movs	r0, #2
 643              	.LVL62:
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 644              		.loc 1 1078 0
 645 008c 38BD     		pop	{r3, r4, r5, pc}
 646              	.LVL63:
 647              	.L45:
 648 008e 00BF     		.align	2
 649              	.L44:
 650 0090 00000000 		.word	UART_DMAReceiveCplt
 651 0094 00000000 		.word	UART_DMARxHalfCplt
 652 0098 00000000 		.word	UART_DMAError
 653              		.cfi_endproc
 654              	.LFE135:
ARM GAS  /tmp/ccWyKvi9.s 			page 56


 656              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 657              		.align	2
 658              		.global	HAL_UART_DMAPause
 659              		.thumb
 660              		.thumb_func
 662              	HAL_UART_DMAPause:
 663              	.LFB136:
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 664              		.loc 1 1086 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 669              	.LVL64:
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 670              		.loc 1 1088 0
 671 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 672 0004 012B     		cmp	r3, #1
 673 0006 2DD0     		beq	.L50
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 674              		.loc 1 1088 0 is_stmt 0 discriminator 2
 675 0008 0123     		movs	r3, #1
 676 000a 80F86830 		strb	r3, [r0, #104]
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 677              		.loc 1 1090 0 is_stmt 1 discriminator 2
 678 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 679 0012 DBB2     		uxtb	r3, r3
 680 0014 212B     		cmp	r3, #33
 681 0016 08D1     		bne	.L48
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 682              		.loc 1 1091 0 discriminator 1
 683 0018 0368     		ldr	r3, [r0]
 684 001a 9A68     		ldr	r2, [r3, #8]
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 685              		.loc 1 1090 0 discriminator 1
 686 001c 12F0800F 		tst	r2, #128
 687 0020 03D0     		beq	.L48
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 688              		.loc 1 1094 0
 689 0022 9A68     		ldr	r2, [r3, #8]
 690 0024 22F08002 		bic	r2, r2, #128
 691 0028 9A60     		str	r2, [r3, #8]
 692              	.L48:
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 693              		.loc 1 1096 0
 694 002a 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 695 002e DBB2     		uxtb	r3, r3
 696 0030 222B     		cmp	r3, #34
 697 0032 12D1     		bne	.L49
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 698              		.loc 1 1097 0 discriminator 1
 699 0034 0368     		ldr	r3, [r0]
 700 0036 9A68     		ldr	r2, [r3, #8]
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 701              		.loc 1 1096 0 discriminator 1
 702 0038 12F0400F 		tst	r2, #64
 703 003c 0DD0     		beq	.L49
ARM GAS  /tmp/ccWyKvi9.s 			page 57


1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 704              		.loc 1 1100 0
 705 003e 1A68     		ldr	r2, [r3]
 706 0040 22F48072 		bic	r2, r2, #256
 707 0044 1A60     		str	r2, [r3]
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 708              		.loc 1 1101 0
 709 0046 0268     		ldr	r2, [r0]
 710 0048 9368     		ldr	r3, [r2, #8]
 711 004a 23F00103 		bic	r3, r3, #1
 712 004e 9360     		str	r3, [r2, #8]
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 713              		.loc 1 1104 0
 714 0050 0268     		ldr	r2, [r0]
 715 0052 9368     		ldr	r3, [r2, #8]
 716 0054 23F04003 		bic	r3, r3, #64
 717 0058 9360     		str	r3, [r2, #8]
 718              	.L49:
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 719              		.loc 1 1108 0
 720 005a 0023     		movs	r3, #0
 721 005c 80F86830 		strb	r3, [r0, #104]
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 722              		.loc 1 1110 0
 723 0060 1846     		mov	r0, r3
 724              	.LVL65:
 725 0062 7047     		bx	lr
 726              	.LVL66:
 727              	.L50:
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 728              		.loc 1 1088 0
 729 0064 0220     		movs	r0, #2
 730              	.LVL67:
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 731              		.loc 1 1111 0
 732 0066 7047     		bx	lr
 733              		.cfi_endproc
 734              	.LFE136:
 736              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 737              		.align	2
 738              		.global	HAL_UART_DMAResume
 739              		.thumb
 740              		.thumb_func
 742              	HAL_UART_DMAResume:
 743              	.LFB137:
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 744              		.loc 1 1119 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              		@ link register save eliminated.
 749              	.LVL68:
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 750              		.loc 1 1121 0
 751 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 752 0004 012B     		cmp	r3, #1
 753 0006 28D0     		beq	.L55
ARM GAS  /tmp/ccWyKvi9.s 			page 58


1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 754              		.loc 1 1121 0 is_stmt 0 discriminator 2
 755 0008 0123     		movs	r3, #1
 756 000a 80F86830 		strb	r3, [r0, #104]
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 757              		.loc 1 1123 0 is_stmt 1 discriminator 2
 758 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 759 0012 DBB2     		uxtb	r3, r3
 760 0014 212B     		cmp	r3, #33
 761 0016 04D1     		bne	.L53
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 762              		.loc 1 1126 0
 763 0018 0268     		ldr	r2, [r0]
 764 001a 9368     		ldr	r3, [r2, #8]
 765 001c 43F08003 		orr	r3, r3, #128
 766 0020 9360     		str	r3, [r2, #8]
 767              	.L53:
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 768              		.loc 1 1128 0
 769 0022 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 770 0026 DBB2     		uxtb	r3, r3
 771 0028 222B     		cmp	r3, #34
 772 002a 11D1     		bne	.L54
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 773              		.loc 1 1131 0
 774 002c 0368     		ldr	r3, [r0]
 775 002e 0822     		movs	r2, #8
 776 0030 1A62     		str	r2, [r3, #32]
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 777              		.loc 1 1134 0
 778 0032 0268     		ldr	r2, [r0]
 779 0034 1368     		ldr	r3, [r2]
 780 0036 43F48073 		orr	r3, r3, #256
 781 003a 1360     		str	r3, [r2]
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 782              		.loc 1 1135 0
 783 003c 0268     		ldr	r2, [r0]
 784 003e 9368     		ldr	r3, [r2, #8]
 785 0040 43F00103 		orr	r3, r3, #1
 786 0044 9360     		str	r3, [r2, #8]
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 787              		.loc 1 1138 0
 788 0046 0268     		ldr	r2, [r0]
 789 0048 9368     		ldr	r3, [r2, #8]
 790 004a 43F04003 		orr	r3, r3, #64
 791 004e 9360     		str	r3, [r2, #8]
 792              	.L54:
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 793              		.loc 1 1142 0
 794 0050 0023     		movs	r3, #0
 795 0052 80F86830 		strb	r3, [r0, #104]
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 796              		.loc 1 1144 0
 797 0056 1846     		mov	r0, r3
 798              	.LVL69:
 799 0058 7047     		bx	lr
 800              	.LVL70:
ARM GAS  /tmp/ccWyKvi9.s 			page 59


 801              	.L55:
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 802              		.loc 1 1121 0
 803 005a 0220     		movs	r0, #2
 804              	.LVL71:
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 805              		.loc 1 1145 0
 806 005c 7047     		bx	lr
 807              		.cfi_endproc
 808              	.LFE137:
 810 005e 00BF     		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 811              		.align	2
 812              		.global	HAL_UART_DMAStop
 813              		.thumb
 814              		.thumb_func
 816              	HAL_UART_DMAStop:
 817              	.LFB138:
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 818              		.loc 1 1153 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822              	.LVL72:
 823 0000 10B5     		push	{r4, lr}
 824              	.LCFI4:
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 4, -8
 827              		.cfi_offset 14, -4
 828 0002 0446     		mov	r4, r0
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 829              		.loc 1 1162 0
 830 0004 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 831 0008 DBB2     		uxtb	r3, r3
 832 000a 212B     		cmp	r3, #33
 833 000c 0FD1     		bne	.L57
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 834              		.loc 1 1163 0 discriminator 1
 835 000e 0368     		ldr	r3, [r0]
 836 0010 9A68     		ldr	r2, [r3, #8]
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 837              		.loc 1 1162 0 discriminator 1
 838 0012 12F0800F 		tst	r2, #128
 839 0016 0AD0     		beq	.L57
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 840              		.loc 1 1165 0
 841 0018 9A68     		ldr	r2, [r3, #8]
 842 001a 22F08002 		bic	r2, r2, #128
 843 001e 9A60     		str	r2, [r3, #8]
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 844              		.loc 1 1168 0
 845 0020 006E     		ldr	r0, [r0, #96]
 846              	.LVL73:
 847 0022 08B1     		cbz	r0, .L58
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 848              		.loc 1 1170 0
 849 0024 FFF7FEFF 		bl	HAL_DMA_Abort
 850              	.LVL74:
ARM GAS  /tmp/ccWyKvi9.s 			page 60


 851              	.L58:
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 852              		.loc 1 1173 0
 853 0028 2046     		mov	r0, r4
 854 002a FFF7FEFF 		bl	UART_EndTxTransfer
 855              	.LVL75:
 856              	.L57:
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 857              		.loc 1 1177 0
 858 002e 94F86A30 		ldrb	r3, [r4, #106]	@ zero_extendqisi2
 859 0032 DBB2     		uxtb	r3, r3
 860 0034 222B     		cmp	r3, #34
 861 0036 0FD1     		bne	.L59
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 862              		.loc 1 1178 0 discriminator 1
 863 0038 2368     		ldr	r3, [r4]
 864 003a 9A68     		ldr	r2, [r3, #8]
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 865              		.loc 1 1177 0 discriminator 1
 866 003c 12F0400F 		tst	r2, #64
 867 0040 0AD0     		beq	.L59
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 868              		.loc 1 1180 0
 869 0042 9A68     		ldr	r2, [r3, #8]
 870 0044 22F04002 		bic	r2, r2, #64
 871 0048 9A60     		str	r2, [r3, #8]
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 872              		.loc 1 1183 0
 873 004a 606E     		ldr	r0, [r4, #100]
 874 004c 08B1     		cbz	r0, .L60
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 875              		.loc 1 1185 0
 876 004e FFF7FEFF 		bl	HAL_DMA_Abort
 877              	.LVL76:
 878              	.L60:
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 879              		.loc 1 1188 0
 880 0052 2046     		mov	r0, r4
 881 0054 FFF7FEFF 		bl	UART_EndRxTransfer
 882              	.LVL77:
 883              	.L59:
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 884              		.loc 1 1192 0
 885 0058 0020     		movs	r0, #0
 886 005a 10BD     		pop	{r4, pc}
 887              		.cfi_endproc
 888              	.LFE138:
 890              		.section	.text.HAL_UART_Abort,"ax",%progbits
 891              		.align	2
 892              		.global	HAL_UART_Abort
 893              		.thumb
 894              		.thumb_func
 896              	HAL_UART_Abort:
 897              	.LFB139:
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 898              		.loc 1 1207 0
 899              		.cfi_startproc
ARM GAS  /tmp/ccWyKvi9.s 			page 61


 900              		@ args = 0, pretend = 0, frame = 0
 901              		@ frame_needed = 0, uses_anonymous_args = 0
 902              	.LVL78:
 903 0000 10B5     		push	{r4, lr}
 904              	.LCFI5:
 905              		.cfi_def_cfa_offset 8
 906              		.cfi_offset 4, -8
 907              		.cfi_offset 14, -4
 908 0002 0446     		mov	r4, r0
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 909              		.loc 1 1209 0
 910 0004 0268     		ldr	r2, [r0]
 911 0006 1368     		ldr	r3, [r2]
 912 0008 23F4F073 		bic	r3, r3, #480
 913 000c 1360     		str	r3, [r2]
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 914              		.loc 1 1210 0
 915 000e 0268     		ldr	r2, [r0]
 916 0010 9368     		ldr	r3, [r2, #8]
 917 0012 23F00103 		bic	r3, r3, #1
 918 0016 9360     		str	r3, [r2, #8]
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 919              		.loc 1 1213 0
 920 0018 0368     		ldr	r3, [r0]
 921 001a 9A68     		ldr	r2, [r3, #8]
 922 001c 12F0800F 		tst	r2, #128
 923 0020 0AD0     		beq	.L63
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 924              		.loc 1 1215 0
 925 0022 9A68     		ldr	r2, [r3, #8]
 926 0024 22F08002 		bic	r2, r2, #128
 927 0028 9A60     		str	r2, [r3, #8]
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 928              		.loc 1 1218 0
 929 002a 036E     		ldr	r3, [r0, #96]
 930 002c 23B1     		cbz	r3, .L63
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 931              		.loc 1 1222 0
 932 002e 0022     		movs	r2, #0
 933 0030 5A63     		str	r2, [r3, #52]
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 934              		.loc 1 1224 0
 935 0032 006E     		ldr	r0, [r0, #96]
 936              	.LVL79:
 937 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 938              	.LVL80:
 939              	.L63:
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 940              		.loc 1 1229 0
 941 0038 2368     		ldr	r3, [r4]
 942 003a 9A68     		ldr	r2, [r3, #8]
 943 003c 12F0400F 		tst	r2, #64
 944 0040 0AD0     		beq	.L64
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 945              		.loc 1 1231 0
 946 0042 9A68     		ldr	r2, [r3, #8]
 947 0044 22F04002 		bic	r2, r2, #64
ARM GAS  /tmp/ccWyKvi9.s 			page 62


 948 0048 9A60     		str	r2, [r3, #8]
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 949              		.loc 1 1234 0
 950 004a 636E     		ldr	r3, [r4, #100]
 951 004c 23B1     		cbz	r3, .L64
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 952              		.loc 1 1238 0
 953 004e 0022     		movs	r2, #0
 954 0050 5A63     		str	r2, [r3, #52]
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 955              		.loc 1 1240 0
 956 0052 606E     		ldr	r0, [r4, #100]
 957 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 958              	.LVL81:
 959              	.L64:
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
 960              		.loc 1 1245 0
 961 0058 0020     		movs	r0, #0
 962 005a A4F85200 		strh	r0, [r4, #82]	@ movhi
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 963              		.loc 1 1246 0
 964 005e A4F85A00 		strh	r0, [r4, #90]	@ movhi
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 965              		.loc 1 1249 0
 966 0062 2368     		ldr	r3, [r4]
 967 0064 0F22     		movs	r2, #15
 968 0066 1A62     		str	r2, [r3, #32]
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 969              		.loc 1 1252 0
 970 0068 2023     		movs	r3, #32
 971 006a 84F86930 		strb	r3, [r4, #105]
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 972              		.loc 1 1253 0
 973 006e 84F86A30 		strb	r3, [r4, #106]
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 974              		.loc 1 1256 0
 975 0072 E066     		str	r0, [r4, #108]
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 976              		.loc 1 1259 0
 977 0074 10BD     		pop	{r4, pc}
 978              		.cfi_endproc
 979              	.LFE139:
 981 0076 00BF     		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 982              		.align	2
 983              		.global	HAL_UART_AbortTransmit
 984              		.thumb
 985              		.thumb_func
 987              	HAL_UART_AbortTransmit:
 988              	.LFB140:
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 989              		.loc 1 1274 0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 0
 992              		@ frame_needed = 0, uses_anonymous_args = 0
 993              	.LVL82:
 994 0000 10B5     		push	{r4, lr}
 995              	.LCFI6:
ARM GAS  /tmp/ccWyKvi9.s 			page 63


 996              		.cfi_def_cfa_offset 8
 997              		.cfi_offset 4, -8
 998              		.cfi_offset 14, -4
 999 0002 0446     		mov	r4, r0
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1000              		.loc 1 1276 0
 1001 0004 0268     		ldr	r2, [r0]
 1002 0006 1368     		ldr	r3, [r2]
 1003 0008 23F0C003 		bic	r3, r3, #192
 1004 000c 1360     		str	r3, [r2]
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1005              		.loc 1 1279 0
 1006 000e 0368     		ldr	r3, [r0]
 1007 0010 9A68     		ldr	r2, [r3, #8]
 1008 0012 12F0800F 		tst	r2, #128
 1009 0016 0AD0     		beq	.L67
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1010              		.loc 1 1281 0
 1011 0018 9A68     		ldr	r2, [r3, #8]
 1012 001a 22F08002 		bic	r2, r2, #128
 1013 001e 9A60     		str	r2, [r3, #8]
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1014              		.loc 1 1284 0
 1015 0020 036E     		ldr	r3, [r0, #96]
 1016 0022 23B1     		cbz	r3, .L67
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1017              		.loc 1 1288 0
 1018 0024 0022     		movs	r2, #0
 1019 0026 5A63     		str	r2, [r3, #52]
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1020              		.loc 1 1290 0
 1021 0028 006E     		ldr	r0, [r0, #96]
 1022              	.LVL83:
 1023 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1024              	.LVL84:
 1025              	.L67:
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1026              		.loc 1 1295 0
 1027 002e 0020     		movs	r0, #0
 1028 0030 A4F85200 		strh	r0, [r4, #82]	@ movhi
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1029              		.loc 1 1298 0
 1030 0034 2023     		movs	r3, #32
 1031 0036 84F86930 		strb	r3, [r4, #105]
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1032              		.loc 1 1301 0
 1033 003a 10BD     		pop	{r4, pc}
 1034              		.cfi_endproc
 1035              	.LFE140:
 1037              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1038              		.align	2
 1039              		.global	HAL_UART_AbortReceive
 1040              		.thumb
 1041              		.thumb_func
 1043              	HAL_UART_AbortReceive:
 1044              	.LFB141:
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
ARM GAS  /tmp/ccWyKvi9.s 			page 64


 1045              		.loc 1 1316 0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 0
 1048              		@ frame_needed = 0, uses_anonymous_args = 0
 1049              	.LVL85:
 1050 0000 10B5     		push	{r4, lr}
 1051              	.LCFI7:
 1052              		.cfi_def_cfa_offset 8
 1053              		.cfi_offset 4, -8
 1054              		.cfi_offset 14, -4
 1055 0002 0446     		mov	r4, r0
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1056              		.loc 1 1318 0
 1057 0004 0268     		ldr	r2, [r0]
 1058 0006 1368     		ldr	r3, [r2]
 1059 0008 23F49073 		bic	r3, r3, #288
 1060 000c 1360     		str	r3, [r2]
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1061              		.loc 1 1319 0
 1062 000e 0268     		ldr	r2, [r0]
 1063 0010 9368     		ldr	r3, [r2, #8]
 1064 0012 23F00103 		bic	r3, r3, #1
 1065 0016 9360     		str	r3, [r2, #8]
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1066              		.loc 1 1322 0
 1067 0018 0368     		ldr	r3, [r0]
 1068 001a 9A68     		ldr	r2, [r3, #8]
 1069 001c 12F0400F 		tst	r2, #64
 1070 0020 0AD0     		beq	.L70
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1071              		.loc 1 1324 0
 1072 0022 9A68     		ldr	r2, [r3, #8]
 1073 0024 22F04002 		bic	r2, r2, #64
 1074 0028 9A60     		str	r2, [r3, #8]
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1075              		.loc 1 1327 0
 1076 002a 436E     		ldr	r3, [r0, #100]
 1077 002c 23B1     		cbz	r3, .L70
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1078              		.loc 1 1331 0
 1079 002e 0022     		movs	r2, #0
 1080 0030 5A63     		str	r2, [r3, #52]
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1081              		.loc 1 1333 0
 1082 0032 406E     		ldr	r0, [r0, #100]
 1083              	.LVL86:
 1084 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1085              	.LVL87:
 1086              	.L70:
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1087              		.loc 1 1338 0
 1088 0038 0020     		movs	r0, #0
 1089 003a A4F85A00 		strh	r0, [r4, #90]	@ movhi
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1090              		.loc 1 1341 0
 1091 003e 2368     		ldr	r3, [r4]
 1092 0040 0F22     		movs	r2, #15
ARM GAS  /tmp/ccWyKvi9.s 			page 65


 1093 0042 1A62     		str	r2, [r3, #32]
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1094              		.loc 1 1344 0
 1095 0044 2023     		movs	r3, #32
 1096 0046 84F86A30 		strb	r3, [r4, #106]
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1097              		.loc 1 1347 0
 1098 004a 10BD     		pop	{r4, pc}
 1099              		.cfi_endproc
 1100              	.LFE141:
 1102              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1103              		.align	2
 1104              		.weak	HAL_UART_TxCpltCallback
 1105              		.thumb
 1106              		.thumb_func
 1108              	HAL_UART_TxCpltCallback:
 1109              	.LFB146:
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1110              		.loc 1 1769 0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 0
 1113              		@ frame_needed = 0, uses_anonymous_args = 0
 1114              		@ link register save eliminated.
 1115              	.LVL88:
 1116 0000 7047     		bx	lr
 1117              		.cfi_endproc
 1118              	.LFE146:
 1120 0002 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1121              		.align	2
 1122              		.thumb
 1123              		.thumb_func
 1125              	UART_DMATransmitCplt:
 1126              	.LFB168:
2386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1127              		.loc 1 2395 0
 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 0
 1130              		@ frame_needed = 0, uses_anonymous_args = 0
 1131              	.LVL89:
 1132              		.loc 1 2395 0
 1133 0000 08B5     		push	{r3, lr}
 1134              	.LCFI8:
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 3, -8
 1137              		.cfi_offset 14, -4
2396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1138              		.loc 1 2396 0
 1139 0002 436A     		ldr	r3, [r0, #36]
ARM GAS  /tmp/ccWyKvi9.s 			page 66


 1140              	.LVL90:
2397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
2399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1141              		.loc 1 2399 0
 1142 0004 0268     		ldr	r2, [r0]
 1143 0006 1268     		ldr	r2, [r2]
 1144 0008 12F0200F 		tst	r2, #32
 1145 000c 0DD1     		bne	.L74
2400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
 1146              		.loc 1 2401 0
 1147 000e 0022     		movs	r2, #0
 1148 0010 A3F85220 		strh	r2, [r3, #82]	@ movhi
2402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
2405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1149              		.loc 1 2405 0
 1150 0014 1968     		ldr	r1, [r3]
 1151 0016 8A68     		ldr	r2, [r1, #8]
 1152 0018 22F08002 		bic	r2, r2, #128
 1153 001c 8A60     		str	r2, [r1, #8]
2406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1154              		.loc 1 2408 0
 1155 001e 1A68     		ldr	r2, [r3]
 1156 0020 1368     		ldr	r3, [r2]
 1157              	.LVL91:
 1158 0022 43F04003 		orr	r3, r3, #64
 1159 0026 1360     		str	r3, [r2]
 1160 0028 08BD     		pop	{r3, pc}
 1161              	.LVL92:
 1162              	.L74:
2409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Circular mode */
2411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
 1163              		.loc 1 2413 0
 1164 002a 1846     		mov	r0, r3
 1165              	.LVL93:
 1166 002c FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1167              	.LVL94:
 1168 0030 08BD     		pop	{r3, pc}
 1169              		.cfi_endproc
 1170              	.LFE168:
 1172 0032 00BF     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1173              		.align	2
 1174              		.weak	HAL_UART_TxHalfCpltCallback
 1175              		.thumb
 1176              		.thumb_func
 1178              	HAL_UART_TxHalfCpltCallback:
 1179              	.LFB147:
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1180              		.loc 1 1784 0
ARM GAS  /tmp/ccWyKvi9.s 			page 67


 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 0
 1183              		@ frame_needed = 0, uses_anonymous_args = 0
 1184              		@ link register save eliminated.
 1185              	.LVL95:
 1186 0000 7047     		bx	lr
 1187              		.cfi_endproc
 1188              	.LFE147:
 1190 0002 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1191              		.align	2
 1192              		.thumb
 1193              		.thumb_func
 1195              	UART_DMATxHalfCplt:
 1196              	.LFB169:
2414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
2420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1197              		.loc 1 2424 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 0
 1200              		@ frame_needed = 0, uses_anonymous_args = 0
 1201              	.LVL96:
 1202              		.loc 1 2424 0
 1203 0000 08B5     		push	{r3, lr}
 1204              	.LCFI9:
 1205              		.cfi_def_cfa_offset 8
 1206              		.cfi_offset 3, -8
 1207              		.cfi_offset 14, -4
 1208              	.LVL97:
2425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 1209              		.loc 1 2427 0
 1210 0002 406A     		ldr	r0, [r0, #36]
 1211              	.LVL98:
 1212 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1213              	.LVL99:
 1214 0008 08BD     		pop	{r3, pc}
 1215              		.cfi_endproc
 1216              	.LFE169:
 1218 000a 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1219              		.align	2
 1220              		.weak	HAL_UART_RxCpltCallback
 1221              		.thumb
 1222              		.thumb_func
 1224              	HAL_UART_RxCpltCallback:
 1225              	.LFB148:
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1226              		.loc 1 1799 0
ARM GAS  /tmp/ccWyKvi9.s 			page 68


 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 0
 1229              		@ frame_needed = 0, uses_anonymous_args = 0
 1230              		@ link register save eliminated.
 1231              	.LVL100:
 1232 0000 7047     		bx	lr
 1233              		.cfi_endproc
 1234              	.LFE148:
 1236 0002 00BF     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1237              		.align	2
 1238              		.thumb
 1239              		.thumb_func
 1241              	UART_DMAReceiveCplt:
 1242              	.LFB170:
2428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
2432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1243              		.loc 1 2436 0
 1244              		.cfi_startproc
 1245              		@ args = 0, pretend = 0, frame = 0
 1246              		@ frame_needed = 0, uses_anonymous_args = 0
 1247              	.LVL101:
 1248              		.loc 1 2436 0
 1249 0000 08B5     		push	{r3, lr}
 1250              	.LCFI10:
 1251              		.cfi_def_cfa_offset 8
 1252              		.cfi_offset 3, -8
 1253              		.cfi_offset 14, -4
2437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1254              		.loc 1 2437 0
 1255 0002 436A     		ldr	r3, [r0, #36]
 1256              	.LVL102:
2438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1257              		.loc 1 2440 0
 1258 0004 0268     		ldr	r2, [r0]
 1259 0006 1268     		ldr	r2, [r2]
 1260 0008 12F0200F 		tst	r2, #32
 1261 000c 14D1     		bne	.L82
2441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1262              		.loc 1 2442 0
 1263 000e 0022     		movs	r2, #0
 1264 0010 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1265              		.loc 1 2445 0
 1266 0014 1968     		ldr	r1, [r3]
 1267 0016 0A68     		ldr	r2, [r1]
ARM GAS  /tmp/ccWyKvi9.s 			page 69


 1268 0018 22F48072 		bic	r2, r2, #256
 1269 001c 0A60     		str	r2, [r1]
2446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1270              		.loc 1 2446 0
 1271 001e 1968     		ldr	r1, [r3]
 1272 0020 8A68     		ldr	r2, [r1, #8]
 1273 0022 22F00102 		bic	r2, r2, #1
 1274 0026 8A60     		str	r2, [r1, #8]
2447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1275              		.loc 1 2450 0
 1276 0028 1968     		ldr	r1, [r3]
 1277 002a 8A68     		ldr	r2, [r1, #8]
 1278 002c 22F04002 		bic	r2, r2, #64
 1279 0030 8A60     		str	r2, [r1, #8]
2451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1280              		.loc 1 2453 0
 1281 0032 2022     		movs	r2, #32
 1282 0034 83F86A20 		strb	r2, [r3, #106]
 1283              	.L82:
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 1284              		.loc 1 2456 0
 1285 0038 1846     		mov	r0, r3
 1286              	.LVL103:
 1287 003a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1288              	.LVL104:
 1289 003e 08BD     		pop	{r3, pc}
 1290              		.cfi_endproc
 1291              	.LFE170:
 1293              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1294              		.align	2
 1295              		.weak	HAL_UART_RxHalfCpltCallback
 1296              		.thumb
 1297              		.thumb_func
 1299              	HAL_UART_RxHalfCpltCallback:
 1300              	.LFB149:
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1301              		.loc 1 1814 0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 1305              		@ link register save eliminated.
 1306              	.LVL105:
 1307 0000 7047     		bx	lr
 1308              		.cfi_endproc
 1309              	.LFE149:
 1311 0002 00BF     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1312              		.align	2
 1313              		.thumb
 1314              		.thumb_func
 1316              	UART_DMARxHalfCplt:
ARM GAS  /tmp/ccWyKvi9.s 			page 70


 1317              	.LFB171:
2457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1318              		.loc 1 2465 0
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 0
 1321              		@ frame_needed = 0, uses_anonymous_args = 0
 1322              	.LVL106:
 1323              		.loc 1 2465 0
 1324 0000 08B5     		push	{r3, lr}
 1325              	.LCFI11:
 1326              		.cfi_def_cfa_offset 8
 1327              		.cfi_offset 3, -8
 1328              		.cfi_offset 14, -4
 1329              	.LVL107:
2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 1330              		.loc 1 2468 0
 1331 0002 406A     		ldr	r0, [r0, #36]
 1332              	.LVL108:
 1333 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1334              	.LVL109:
 1335 0008 08BD     		pop	{r3, pc}
 1336              		.cfi_endproc
 1337              	.LFE171:
 1339 000a 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1340              		.align	2
 1341              		.weak	HAL_UART_ErrorCallback
 1342              		.thumb
 1343              		.thumb_func
 1345              	HAL_UART_ErrorCallback:
 1346              	.LFB150:
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1347              		.loc 1 1829 0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 1351              		@ link register save eliminated.
 1352              	.LVL110:
 1353 0000 7047     		bx	lr
 1354              		.cfi_endproc
 1355              	.LFE150:
 1357 0002 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 1358              		.align	2
 1359              		.thumb
 1360              		.thumb_func
 1362              	UART_DMAError:
 1363              	.LFB172:
2469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
ARM GAS  /tmp/ccWyKvi9.s 			page 71


2470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART communication error callback.
2473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1364              		.loc 1 2477 0
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 0
 1367              		@ frame_needed = 0, uses_anonymous_args = 0
 1368              	.LVL111:
 1369              		.loc 1 2477 0
 1370 0000 10B5     		push	{r4, lr}
 1371              	.LCFI12:
 1372              		.cfi_def_cfa_offset 8
 1373              		.cfi_offset 4, -8
 1374              		.cfi_offset 14, -4
2478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1375              		.loc 1 2478 0
 1376 0002 446A     		ldr	r4, [r0, #36]
 1377              	.LVL112:
2479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
 1378              		.loc 1 2481 0
 1379 0004 94F86930 		ldrb	r3, [r4, #105]	@ zero_extendqisi2
 1380 0008 DBB2     		uxtb	r3, r3
 1381 000a 212B     		cmp	r3, #33
 1382 000c 0AD1     		bne	.L89
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
 1383              		.loc 1 2482 0
 1384 000e 2368     		ldr	r3, [r4]
 1385 0010 9B68     		ldr	r3, [r3, #8]
 1386 0012 13F0800F 		tst	r3, #128
 1387 0016 05D0     		beq	.L89
2483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
 1388              		.loc 1 2484 0
 1389 0018 0023     		movs	r3, #0
 1390 001a A4F85230 		strh	r3, [r4, #82]	@ movhi
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1391              		.loc 1 2485 0
 1392 001e 2046     		mov	r0, r4
 1393              	.LVL113:
 1394 0020 FFF7FEFF 		bl	UART_EndTxTransfer
 1395              	.LVL114:
 1396              	.L89:
2486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1397              		.loc 1 2489 0
 1398 0024 94F86A30 		ldrb	r3, [r4, #106]	@ zero_extendqisi2
 1399 0028 DBB2     		uxtb	r3, r3
 1400 002a 222B     		cmp	r3, #34
ARM GAS  /tmp/ccWyKvi9.s 			page 72


 1401 002c 0AD1     		bne	.L90
2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
 1402              		.loc 1 2490 0
 1403 002e 2368     		ldr	r3, [r4]
 1404 0030 9B68     		ldr	r3, [r3, #8]
 1405 0032 13F0400F 		tst	r3, #64
 1406 0036 05D0     		beq	.L90
2491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1407              		.loc 1 2492 0
 1408 0038 0023     		movs	r3, #0
 1409 003a A4F85A30 		strh	r3, [r4, #90]	@ movhi
2493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1410              		.loc 1 2493 0
 1411 003e 2046     		mov	r0, r4
 1412 0040 FFF7FEFF 		bl	UART_EndRxTransfer
 1413              	.LVL115:
 1414              	.L90:
2494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 1415              		.loc 1 2496 0
 1416 0044 E36E     		ldr	r3, [r4, #108]
 1417 0046 43F01003 		orr	r3, r3, #16
 1418 004a E366     		str	r3, [r4, #108]
2497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1419              		.loc 1 2497 0
 1420 004c 2046     		mov	r0, r4
 1421 004e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1422              	.LVL116:
 1423 0052 10BD     		pop	{r4, pc}
 1424              		.cfi_endproc
 1425              	.LFE172:
 1427              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 1428              		.align	2
 1429              		.thumb
 1430              		.thumb_func
 1432              	UART_DMAAbortOnError:
 1433              	.LFB173:
2498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1434              		.loc 1 2507 0
 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 0
 1437              		@ frame_needed = 0, uses_anonymous_args = 0
 1438              	.LVL117:
 1439 0000 08B5     		push	{r3, lr}
 1440              	.LCFI13:
 1441              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccWyKvi9.s 			page 73


 1442              		.cfi_offset 3, -8
 1443              		.cfi_offset 14, -4
2508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1444              		.loc 1 2508 0
 1445 0002 406A     		ldr	r0, [r0, #36]
 1446              	.LVL118:
2509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1447              		.loc 1 2509 0
 1448 0004 0023     		movs	r3, #0
 1449 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1450              		.loc 1 2510 0
 1451 000a A0F85230 		strh	r3, [r0, #82]	@ movhi
2511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1452              		.loc 1 2512 0
 1453 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1454              	.LVL119:
 1455 0012 08BD     		pop	{r3, pc}
 1456              		.cfi_endproc
 1457              	.LFE173:
 1459              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 1460              		.align	2
 1461              		.weak	HAL_UART_AbortCpltCallback
 1462              		.thumb
 1463              		.thumb_func
 1465              	HAL_UART_AbortCpltCallback:
 1466              	.LFB151:
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1467              		.loc 1 1844 0
 1468              		.cfi_startproc
 1469              		@ args = 0, pretend = 0, frame = 0
 1470              		@ frame_needed = 0, uses_anonymous_args = 0
 1471              		@ link register save eliminated.
 1472              	.LVL120:
 1473 0000 7047     		bx	lr
 1474              		.cfi_endproc
 1475              	.LFE151:
 1477 0002 00BF     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 1478              		.align	2
 1479              		.global	HAL_UART_Abort_IT
 1480              		.thumb
 1481              		.thumb_func
 1483              	HAL_UART_Abort_IT:
 1484              	.LFB142:
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 1485              		.loc 1 1364 0
 1486              		.cfi_startproc
 1487              		@ args = 0, pretend = 0, frame = 0
 1488              		@ frame_needed = 0, uses_anonymous_args = 0
 1489              	.LVL121:
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 1490              		.loc 1 1364 0
 1491 0000 10B5     		push	{r4, lr}
 1492              	.LCFI14:
 1493              		.cfi_def_cfa_offset 8
 1494              		.cfi_offset 4, -8
ARM GAS  /tmp/ccWyKvi9.s 			page 74


 1495              		.cfi_offset 14, -4
 1496 0002 0446     		mov	r4, r0
 1497              	.LVL122:
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1498              		.loc 1 1368 0
 1499 0004 0268     		ldr	r2, [r0]
 1500 0006 1368     		ldr	r3, [r2]
 1501 0008 23F4F073 		bic	r3, r3, #480
 1502 000c 1360     		str	r3, [r2]
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1503              		.loc 1 1369 0
 1504 000e 0268     		ldr	r2, [r0]
 1505 0010 9368     		ldr	r3, [r2, #8]
 1506 0012 23F00103 		bic	r3, r3, #1
 1507 0016 9360     		str	r3, [r2, #8]
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1508              		.loc 1 1374 0
 1509 0018 036E     		ldr	r3, [r0, #96]
 1510 001a 4BB1     		cbz	r3, .L96
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1511              		.loc 1 1378 0
 1512 001c 0268     		ldr	r2, [r0]
 1513 001e 9268     		ldr	r2, [r2, #8]
 1514 0020 12F0800F 		tst	r2, #128
 1515 0024 02D0     		beq	.L97
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1516              		.loc 1 1380 0
 1517 0026 284A     		ldr	r2, .L108
 1518 0028 5A63     		str	r2, [r3, #52]
 1519 002a 01E0     		b	.L96
 1520              	.L97:
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1521              		.loc 1 1384 0
 1522 002c 0022     		movs	r2, #0
 1523 002e 5A63     		str	r2, [r3, #52]
 1524              	.L96:
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1525              		.loc 1 1388 0
 1526 0030 636E     		ldr	r3, [r4, #100]
 1527 0032 4BB1     		cbz	r3, .L98
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1528              		.loc 1 1392 0
 1529 0034 2268     		ldr	r2, [r4]
 1530 0036 9268     		ldr	r2, [r2, #8]
 1531 0038 12F0400F 		tst	r2, #64
 1532 003c 02D0     		beq	.L99
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1533              		.loc 1 1394 0
 1534 003e 234A     		ldr	r2, .L108+4
 1535 0040 5A63     		str	r2, [r3, #52]
 1536 0042 01E0     		b	.L98
 1537              	.L99:
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1538              		.loc 1 1398 0
 1539 0044 0022     		movs	r2, #0
 1540 0046 5A63     		str	r2, [r3, #52]
 1541              	.L98:
ARM GAS  /tmp/ccWyKvi9.s 			page 75


1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1542              		.loc 1 1403 0
 1543 0048 2368     		ldr	r3, [r4]
 1544 004a 9A68     		ldr	r2, [r3, #8]
 1545 004c 12F0800F 		tst	r2, #128
 1546 0050 0DD0     		beq	.L103
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1547              		.loc 1 1406 0
 1548 0052 9A68     		ldr	r2, [r3, #8]
 1549 0054 22F08002 		bic	r2, r2, #128
 1550 0058 9A60     		str	r2, [r3, #8]
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1551              		.loc 1 1409 0
 1552 005a 206E     		ldr	r0, [r4, #96]
 1553              	.LVL123:
 1554 005c 48B1     		cbz	r0, .L104
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1555              		.loc 1 1415 0
 1556 005e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1557              	.LVL124:
 1558 0062 40B1     		cbz	r0, .L105
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1559              		.loc 1 1417 0
 1560 0064 236E     		ldr	r3, [r4, #96]
 1561 0066 0022     		movs	r2, #0
 1562 0068 5A63     		str	r2, [r3, #52]
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 1563              		.loc 1 1365 0
 1564 006a 0122     		movs	r2, #1
 1565 006c 04E0     		b	.L100
 1566              	.LVL125:
 1567              	.L103:
 1568 006e 0122     		movs	r2, #1
 1569 0070 02E0     		b	.L100
 1570              	.LVL126:
 1571              	.L104:
 1572 0072 0122     		movs	r2, #1
 1573 0074 00E0     		b	.L100
 1574              	.L105:
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1575              		.loc 1 1421 0
 1576 0076 0022     		movs	r2, #0
 1577              	.L100:
 1578              	.LVL127:
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1579              		.loc 1 1427 0
 1580 0078 2368     		ldr	r3, [r4]
 1581 007a 9968     		ldr	r1, [r3, #8]
 1582 007c 11F0400F 		tst	r1, #64
 1583 0080 0ED0     		beq	.L101
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1584              		.loc 1 1429 0
 1585 0082 9968     		ldr	r1, [r3, #8]
 1586 0084 21F04001 		bic	r1, r1, #64
 1587 0088 9960     		str	r1, [r3, #8]
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1588              		.loc 1 1432 0
ARM GAS  /tmp/ccWyKvi9.s 			page 76


 1589 008a 606E     		ldr	r0, [r4, #100]
 1590 008c 40B1     		cbz	r0, .L101
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1591              		.loc 1 1438 0
 1592 008e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1593              	.LVL128:
 1594 0092 20B1     		cbz	r0, .L106
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 1U;
 1595              		.loc 1 1440 0
 1596 0094 636E     		ldr	r3, [r4, #100]
 1597 0096 0022     		movs	r2, #0
 1598 0098 5A63     		str	r2, [r3, #52]
 1599              	.LVL129:
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1600              		.loc 1 1441 0
 1601 009a 0122     		movs	r2, #1
 1602 009c 00E0     		b	.L101
 1603              	.LVL130:
 1604              	.L106:
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1605              		.loc 1 1445 0
 1606 009e 0022     		movs	r2, #0
 1607              	.L101:
 1608              	.LVL131:
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1609              		.loc 1 1451 0
 1610 00a0 82B1     		cbz	r2, .L102
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1611              		.loc 1 1454 0
 1612 00a2 0023     		movs	r3, #0
 1613 00a4 A4F85230 		strh	r3, [r4, #82]	@ movhi
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1614              		.loc 1 1455 0
 1615 00a8 A4F85A30 		strh	r3, [r4, #90]	@ movhi
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1616              		.loc 1 1458 0
 1617 00ac E366     		str	r3, [r4, #108]
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1618              		.loc 1 1461 0
 1619 00ae 2368     		ldr	r3, [r4]
 1620 00b0 0F22     		movs	r2, #15
 1621              	.LVL132:
 1622 00b2 1A62     		str	r2, [r3, #32]
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1623              		.loc 1 1464 0
 1624 00b4 2023     		movs	r3, #32
 1625 00b6 84F86930 		strb	r3, [r4, #105]
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1626              		.loc 1 1465 0
 1627 00ba 84F86A30 		strb	r3, [r4, #106]
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1628              		.loc 1 1468 0
 1629 00be 2046     		mov	r0, r4
 1630 00c0 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1631              	.LVL133:
 1632              	.L102:
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccWyKvi9.s 			page 77


 1633              		.loc 1 1472 0
 1634 00c4 0020     		movs	r0, #0
 1635 00c6 10BD     		pop	{r4, pc}
 1636              	.LVL134:
 1637              	.L109:
 1638              		.align	2
 1639              	.L108:
 1640 00c8 00000000 		.word	UART_DMATxAbortCallback
 1641 00cc 00000000 		.word	UART_DMARxAbortCallback
 1642              		.cfi_endproc
 1643              	.LFE142:
 1645              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 1646              		.align	2
 1647              		.thumb
 1648              		.thumb_func
 1650              	UART_DMARxAbortCallback:
 1651              	.LFB175:
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
2526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
2535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
2541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
ARM GAS  /tmp/ccWyKvi9.s 			page 78


2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1652              		.loc 1 2566 0
 1653              		.cfi_startproc
 1654              		@ args = 0, pretend = 0, frame = 0
 1655              		@ frame_needed = 0, uses_anonymous_args = 0
 1656              	.LVL135:
 1657 0000 08B5     		push	{r3, lr}
 1658              	.LCFI15:
 1659              		.cfi_def_cfa_offset 8
 1660              		.cfi_offset 3, -8
 1661              		.cfi_offset 14, -4
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 1662              		.loc 1 2567 0
 1663 0002 406A     		ldr	r0, [r0, #36]
 1664              	.LVL136:
2568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 1665              		.loc 1 2569 0
 1666 0004 436E     		ldr	r3, [r0, #100]
 1667 0006 0022     		movs	r2, #0
 1668 0008 5A63     		str	r2, [r3, #52]
2570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 1669              		.loc 1 2572 0
 1670 000a 036E     		ldr	r3, [r0, #96]
 1671 000c 0BB1     		cbz	r3, .L111
2573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
 1672              		.loc 1 2574 0
 1673 000e 5B6B     		ldr	r3, [r3, #52]
 1674 0010 7BB9     		cbnz	r3, .L110
 1675              	.L111:
2575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
2577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1676              		.loc 1 2581 0
 1677 0012 0023     		movs	r3, #0
 1678 0014 A0F85230 		strh	r3, [r0, #82]	@ movhi
2582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
ARM GAS  /tmp/ccWyKvi9.s 			page 79


 1679              		.loc 1 2582 0
 1680 0018 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 1681              		.loc 1 2585 0
 1682 001c C366     		str	r3, [r0, #108]
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 1683              		.loc 1 2588 0
 1684 001e 0368     		ldr	r3, [r0]
 1685 0020 0F22     		movs	r2, #15
 1686 0022 1A62     		str	r2, [r3, #32]
2589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 1687              		.loc 1 2591 0
 1688 0024 2023     		movs	r3, #32
 1689 0026 80F86930 		strb	r3, [r0, #105]
2592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1690              		.loc 1 2592 0
 1691 002a 80F86A30 		strb	r3, [r0, #106]
2593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 1692              		.loc 1 2595 0
 1693 002e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1694              	.LVL137:
 1695              	.L110:
 1696 0032 08BD     		pop	{r3, pc}
 1697              		.cfi_endproc
 1698              	.LFE175:
 1700              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 1701              		.align	2
 1702              		.thumb
 1703              		.thumb_func
 1705              	UART_DMATxAbortCallback:
 1706              	.LFB174:
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 1707              		.loc 1 2524 0
 1708              		.cfi_startproc
 1709              		@ args = 0, pretend = 0, frame = 0
 1710              		@ frame_needed = 0, uses_anonymous_args = 0
 1711              	.LVL138:
 1712 0000 08B5     		push	{r3, lr}
 1713              	.LCFI16:
 1714              		.cfi_def_cfa_offset 8
 1715              		.cfi_offset 3, -8
 1716              		.cfi_offset 14, -4
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 1717              		.loc 1 2525 0
 1718 0002 406A     		ldr	r0, [r0, #36]
 1719              	.LVL139:
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1720              		.loc 1 2527 0
 1721 0004 036E     		ldr	r3, [r0, #96]
ARM GAS  /tmp/ccWyKvi9.s 			page 80


 1722 0006 0022     		movs	r2, #0
 1723 0008 5A63     		str	r2, [r3, #52]
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1724              		.loc 1 2530 0
 1725 000a 436E     		ldr	r3, [r0, #100]
 1726 000c 0BB1     		cbz	r3, .L115
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1727              		.loc 1 2532 0
 1728 000e 5B6B     		ldr	r3, [r3, #52]
 1729 0010 7BB9     		cbnz	r3, .L114
 1730              	.L115:
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1731              		.loc 1 2539 0
 1732 0012 0023     		movs	r3, #0
 1733 0014 A0F85230 		strh	r3, [r0, #82]	@ movhi
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1734              		.loc 1 2540 0
 1735 0018 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1736              		.loc 1 2543 0
 1737 001c C366     		str	r3, [r0, #108]
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1738              		.loc 1 2546 0
 1739 001e 0368     		ldr	r3, [r0]
 1740 0020 0F22     		movs	r2, #15
 1741 0022 1A62     		str	r2, [r3, #32]
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1742              		.loc 1 2549 0
 1743 0024 2023     		movs	r3, #32
 1744 0026 80F86930 		strb	r3, [r0, #105]
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1745              		.loc 1 2550 0
 1746 002a 80F86A30 		strb	r3, [r0, #106]
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1747              		.loc 1 2553 0
 1748 002e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1749              	.LVL140:
 1750              	.L114:
 1751 0032 08BD     		pop	{r3, pc}
 1752              		.cfi_endproc
 1753              	.LFE174:
 1755              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 1756              		.align	2
 1757              		.weak	HAL_UART_AbortTransmitCpltCallback
 1758              		.thumb
 1759              		.thumb_func
 1761              	HAL_UART_AbortTransmitCpltCallback:
 1762              	.LFB152:
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1763              		.loc 1 1859 0
 1764              		.cfi_startproc
 1765              		@ args = 0, pretend = 0, frame = 0
 1766              		@ frame_needed = 0, uses_anonymous_args = 0
 1767              		@ link register save eliminated.
 1768              	.LVL141:
 1769 0000 7047     		bx	lr
 1770              		.cfi_endproc
ARM GAS  /tmp/ccWyKvi9.s 			page 81


 1771              	.LFE152:
 1773 0002 00BF     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 1774              		.align	2
 1775              		.global	HAL_UART_AbortTransmit_IT
 1776              		.thumb
 1777              		.thumb_func
 1779              	HAL_UART_AbortTransmit_IT:
 1780              	.LFB143:
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1781              		.loc 1 1489 0
 1782              		.cfi_startproc
 1783              		@ args = 0, pretend = 0, frame = 0
 1784              		@ frame_needed = 0, uses_anonymous_args = 0
 1785              	.LVL142:
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1786              		.loc 1 1489 0
 1787 0000 10B5     		push	{r4, lr}
 1788              	.LCFI17:
 1789              		.cfi_def_cfa_offset 8
 1790              		.cfi_offset 4, -8
 1791              		.cfi_offset 14, -4
 1792 0002 0446     		mov	r4, r0
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1793              		.loc 1 1491 0
 1794 0004 0268     		ldr	r2, [r0]
 1795 0006 1368     		ldr	r3, [r2]
 1796 0008 23F0C003 		bic	r3, r3, #192
 1797 000c 1360     		str	r3, [r2]
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1798              		.loc 1 1494 0
 1799 000e 0368     		ldr	r3, [r0]
 1800 0010 9A68     		ldr	r2, [r3, #8]
 1801 0012 12F0800F 		tst	r2, #128
 1802 0016 18D0     		beq	.L120
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1803              		.loc 1 1496 0
 1804 0018 9A68     		ldr	r2, [r3, #8]
 1805 001a 22F08002 		bic	r2, r2, #128
 1806 001e 9A60     		str	r2, [r3, #8]
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1807              		.loc 1 1499 0
 1808 0020 036E     		ldr	r3, [r0, #96]
 1809 0022 4BB1     		cbz	r3, .L121
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1810              		.loc 1 1503 0
 1811 0024 0E4A     		ldr	r2, .L124
 1812 0026 5A63     		str	r2, [r3, #52]
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1813              		.loc 1 1506 0
 1814 0028 006E     		ldr	r0, [r0, #96]
 1815              	.LVL143:
 1816 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1817              	.LVL144:
 1818 002e A0B1     		cbz	r0, .L122
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1819              		.loc 1 1509 0
 1820 0030 206E     		ldr	r0, [r4, #96]
ARM GAS  /tmp/ccWyKvi9.s 			page 82


 1821 0032 436B     		ldr	r3, [r0, #52]
 1822 0034 9847     		blx	r3
 1823              	.LVL145:
 1824 0036 10E0     		b	.L122
 1825              	.LVL146:
 1826              	.L121:
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1827              		.loc 1 1515 0
 1828 0038 0023     		movs	r3, #0
 1829 003a A0F85230 		strh	r3, [r0, #82]	@ movhi
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1830              		.loc 1 1518 0
 1831 003e 2023     		movs	r3, #32
 1832 0040 80F86930 		strb	r3, [r0, #105]
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1833              		.loc 1 1521 0
 1834 0044 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1835              	.LVL147:
 1836 0048 07E0     		b	.L122
 1837              	.LVL148:
 1838              	.L120:
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1839              		.loc 1 1527 0
 1840 004a 0023     		movs	r3, #0
 1841 004c A0F85230 		strh	r3, [r0, #82]	@ movhi
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1842              		.loc 1 1530 0
 1843 0050 2023     		movs	r3, #32
 1844 0052 80F86930 		strb	r3, [r0, #105]
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1845              		.loc 1 1533 0
 1846 0056 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1847              	.LVL149:
 1848              	.L122:
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1849              		.loc 1 1537 0
 1850 005a 0020     		movs	r0, #0
 1851 005c 10BD     		pop	{r4, pc}
 1852              	.LVL150:
 1853              	.L125:
 1854 005e 00BF     		.align	2
 1855              	.L124:
 1856 0060 00000000 		.word	UART_DMATxOnlyAbortCallback
 1857              		.cfi_endproc
 1858              	.LFE143:
 1860              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 1861              		.align	2
 1862              		.thumb
 1863              		.thumb_func
 1865              	UART_DMATxOnlyAbortCallback:
 1866              	.LFB176:
2596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
ARM GAS  /tmp/ccWyKvi9.s 			page 83


2602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1867              		.loc 1 2608 0
 1868              		.cfi_startproc
 1869              		@ args = 0, pretend = 0, frame = 0
 1870              		@ frame_needed = 0, uses_anonymous_args = 0
 1871              	.LVL151:
 1872 0000 08B5     		push	{r3, lr}
 1873              	.LCFI18:
 1874              		.cfi_def_cfa_offset 8
 1875              		.cfi_offset 3, -8
 1876              		.cfi_offset 14, -4
2609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1877              		.loc 1 2609 0
 1878 0002 406A     		ldr	r0, [r0, #36]
 1879              	.LVL152:
2610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1880              		.loc 1 2611 0
 1881 0004 0023     		movs	r3, #0
 1882 0006 A0F85230 		strh	r3, [r0, #82]	@ movhi
2612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1883              		.loc 1 2614 0
 1884 000a 2023     		movs	r3, #32
 1885 000c 80F86930 		strb	r3, [r0, #105]
2615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 1886              		.loc 1 2617 0
 1887 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1888              	.LVL153:
 1889 0014 08BD     		pop	{r3, pc}
 1890              		.cfi_endproc
 1891              	.LFE176:
 1893 0016 00BF     		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 1894              		.align	2
 1895              		.weak	HAL_UART_AbortReceiveCpltCallback
 1896              		.thumb
 1897              		.thumb_func
 1899              	HAL_UART_AbortReceiveCpltCallback:
 1900              	.LFB153:
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1901              		.loc 1 1874 0
 1902              		.cfi_startproc
 1903              		@ args = 0, pretend = 0, frame = 0
 1904              		@ frame_needed = 0, uses_anonymous_args = 0
 1905              		@ link register save eliminated.
 1906              	.LVL154:
 1907 0000 7047     		bx	lr
 1908              		.cfi_endproc
ARM GAS  /tmp/ccWyKvi9.s 			page 84


 1909              	.LFE153:
 1911 0002 00BF     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 1912              		.align	2
 1913              		.global	HAL_UART_AbortReceive_IT
 1914              		.thumb
 1915              		.thumb_func
 1917              	HAL_UART_AbortReceive_IT:
 1918              	.LFB144:
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1919              		.loc 1 1554 0
 1920              		.cfi_startproc
 1921              		@ args = 0, pretend = 0, frame = 0
 1922              		@ frame_needed = 0, uses_anonymous_args = 0
 1923              	.LVL155:
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1924              		.loc 1 1554 0
 1925 0000 10B5     		push	{r4, lr}
 1926              	.LCFI19:
 1927              		.cfi_def_cfa_offset 8
 1928              		.cfi_offset 4, -8
 1929              		.cfi_offset 14, -4
 1930 0002 0446     		mov	r4, r0
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1931              		.loc 1 1556 0
 1932 0004 0268     		ldr	r2, [r0]
 1933 0006 1368     		ldr	r3, [r2]
 1934 0008 23F49073 		bic	r3, r3, #288
 1935 000c 1360     		str	r3, [r2]
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1936              		.loc 1 1557 0
 1937 000e 0268     		ldr	r2, [r0]
 1938 0010 9368     		ldr	r3, [r2, #8]
 1939 0012 23F00103 		bic	r3, r3, #1
 1940 0016 9360     		str	r3, [r2, #8]
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1941              		.loc 1 1560 0
 1942 0018 0368     		ldr	r3, [r0]
 1943 001a 9A68     		ldr	r2, [r3, #8]
 1944 001c 12F0400F 		tst	r2, #64
 1945 0020 1BD0     		beq	.L130
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1946              		.loc 1 1562 0
 1947 0022 9A68     		ldr	r2, [r3, #8]
 1948 0024 22F04002 		bic	r2, r2, #64
 1949 0028 9A60     		str	r2, [r3, #8]
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1950              		.loc 1 1565 0
 1951 002a 436E     		ldr	r3, [r0, #100]
 1952 002c 4BB1     		cbz	r3, .L131
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1953              		.loc 1 1569 0
 1954 002e 114A     		ldr	r2, .L134
 1955 0030 5A63     		str	r2, [r3, #52]
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1956              		.loc 1 1572 0
 1957 0032 406E     		ldr	r0, [r0, #100]
 1958              	.LVL156:
ARM GAS  /tmp/ccWyKvi9.s 			page 85


 1959 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1960              	.LVL157:
 1961 0038 C8B1     		cbz	r0, .L132
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1962              		.loc 1 1575 0
 1963 003a 606E     		ldr	r0, [r4, #100]
 1964 003c 436B     		ldr	r3, [r0, #52]
 1965 003e 9847     		blx	r3
 1966              	.LVL158:
 1967 0040 15E0     		b	.L132
 1968              	.LVL159:
 1969              	.L131:
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1970              		.loc 1 1581 0
 1971 0042 0023     		movs	r3, #0
 1972 0044 A0F85A30 		strh	r3, [r0, #90]	@ movhi
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1973              		.loc 1 1584 0
 1974 0048 0368     		ldr	r3, [r0]
 1975 004a 0F22     		movs	r2, #15
 1976 004c 1A62     		str	r2, [r3, #32]
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1977              		.loc 1 1587 0
 1978 004e 2023     		movs	r3, #32
 1979 0050 80F86A30 		strb	r3, [r0, #106]
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1980              		.loc 1 1590 0
 1981 0054 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 1982              	.LVL160:
 1983 0058 09E0     		b	.L132
 1984              	.LVL161:
 1985              	.L130:
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1986              		.loc 1 1596 0
 1987 005a 0022     		movs	r2, #0
 1988 005c A0F85A20 		strh	r2, [r0, #90]	@ movhi
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1989              		.loc 1 1599 0
 1990 0060 0F22     		movs	r2, #15
 1991 0062 1A62     		str	r2, [r3, #32]
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1992              		.loc 1 1602 0
 1993 0064 2023     		movs	r3, #32
 1994 0066 80F86A30 		strb	r3, [r0, #106]
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1995              		.loc 1 1605 0
 1996 006a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 1997              	.LVL162:
 1998              	.L132:
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1999              		.loc 1 1609 0
 2000 006e 0020     		movs	r0, #0
 2001 0070 10BD     		pop	{r4, pc}
 2002              	.LVL163:
 2003              	.L135:
 2004 0072 00BF     		.align	2
 2005              	.L134:
ARM GAS  /tmp/ccWyKvi9.s 			page 86


 2006 0074 00000000 		.word	UART_DMARxOnlyAbortCallback
 2007              		.cfi_endproc
 2008              	.LFE144:
 2010              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 2011              		.align	2
 2012              		.thumb
 2013              		.thumb_func
 2015              	UART_DMARxOnlyAbortCallback:
 2016              	.LFB177:
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2017              		.loc 1 2629 0
 2018              		.cfi_startproc
 2019              		@ args = 0, pretend = 0, frame = 0
 2020              		@ frame_needed = 0, uses_anonymous_args = 0
 2021              	.LVL164:
 2022 0000 08B5     		push	{r3, lr}
 2023              	.LCFI20:
 2024              		.cfi_def_cfa_offset 8
 2025              		.cfi_offset 3, -8
 2026              		.cfi_offset 14, -4
2630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2027              		.loc 1 2630 0
 2028 0002 406A     		ldr	r0, [r0, #36]
 2029              	.LVL165:
2631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2030              		.loc 1 2632 0
 2031 0004 0023     		movs	r3, #0
 2032 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2033              		.loc 1 2635 0
 2034 000a 0368     		ldr	r3, [r0]
 2035 000c 0F22     		movs	r2, #15
 2036 000e 1A62     		str	r2, [r3, #32]
2636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2037              		.loc 1 2638 0
 2038 0010 2023     		movs	r3, #32
 2039 0012 80F86A30 		strb	r3, [r0, #106]
2639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 2040              		.loc 1 2641 0
ARM GAS  /tmp/ccWyKvi9.s 			page 87


 2041 0016 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2042              	.LVL166:
 2043 001a 08BD     		pop	{r3, pc}
 2044              		.cfi_endproc
 2045              	.LFE177:
 2047              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2048              		.align	2
 2049              		.global	HAL_MultiProcessor_EnterMuteMode
 2050              		.thumb
 2051              		.thumb_func
 2053              	HAL_MultiProcessor_EnterMuteMode:
 2054              	.LFB156:
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2055              		.loc 1 1955 0
 2056              		.cfi_startproc
 2057              		@ args = 0, pretend = 0, frame = 0
 2058              		@ frame_needed = 0, uses_anonymous_args = 0
 2059              		@ link register save eliminated.
 2060              	.LVL167:
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2061              		.loc 1 1956 0
 2062 0000 0268     		ldr	r2, [r0]
 2063 0002 9369     		ldr	r3, [r2, #24]
 2064 0004 43F00403 		orr	r3, r3, #4
 2065 0008 9361     		str	r3, [r2, #24]
 2066 000a 7047     		bx	lr
 2067              		.cfi_endproc
 2068              	.LFE156:
 2070              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2071              		.align	2
 2072              		.global	HAL_HalfDuplex_EnableTransmitter
 2073              		.thumb
 2074              		.thumb_func
 2076              	HAL_HalfDuplex_EnableTransmitter:
 2077              	.LFB157:
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 2078              		.loc 1 1965 0
 2079              		.cfi_startproc
 2080              		@ args = 0, pretend = 0, frame = 0
 2081              		@ frame_needed = 0, uses_anonymous_args = 0
 2082              		@ link register save eliminated.
 2083              	.LVL168:
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2084              		.loc 1 1967 0
 2085 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 2086 0004 012B     		cmp	r3, #1
 2087 0006 17D0     		beq	.L141
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2088              		.loc 1 1967 0 is_stmt 0 discriminator 2
 2089 0008 0123     		movs	r3, #1
 2090 000a 80F86830 		strb	r3, [r0, #104]
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2091              		.loc 1 1968 0 is_stmt 1 discriminator 2
 2092 000e 2423     		movs	r3, #36
 2093 0010 80F86930 		strb	r3, [r0, #105]
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
 2094              		.loc 1 1971 0 discriminator 2
ARM GAS  /tmp/ccWyKvi9.s 			page 88


 2095 0014 0268     		ldr	r2, [r0]
 2096 0016 1368     		ldr	r3, [r2]
 2097 0018 23F00C03 		bic	r3, r3, #12
 2098 001c 1360     		str	r3, [r2]
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2099              		.loc 1 1973 0 discriminator 2
 2100 001e 0268     		ldr	r2, [r0]
 2101 0020 1368     		ldr	r3, [r2]
 2102 0022 43F00803 		orr	r3, r3, #8
 2103 0026 1360     		str	r3, [r2]
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2104              		.loc 1 1975 0 discriminator 2
 2105 0028 2023     		movs	r3, #32
 2106 002a 80F86930 		strb	r3, [r0, #105]
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2107              		.loc 1 1978 0 discriminator 2
 2108 002e 0023     		movs	r3, #0
 2109 0030 80F86830 		strb	r3, [r0, #104]
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2110              		.loc 1 1980 0 discriminator 2
 2111 0034 1846     		mov	r0, r3
 2112              	.LVL169:
 2113 0036 7047     		bx	lr
 2114              	.LVL170:
 2115              	.L141:
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2116              		.loc 1 1967 0
 2117 0038 0220     		movs	r0, #2
 2118              	.LVL171:
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2119              		.loc 1 1981 0
 2120 003a 7047     		bx	lr
 2121              		.cfi_endproc
 2122              	.LFE157:
 2124              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2125              		.align	2
 2126              		.global	HAL_HalfDuplex_EnableReceiver
 2127              		.thumb
 2128              		.thumb_func
 2130              	HAL_HalfDuplex_EnableReceiver:
 2131              	.LFB158:
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 2132              		.loc 1 1989 0
 2133              		.cfi_startproc
 2134              		@ args = 0, pretend = 0, frame = 0
 2135              		@ frame_needed = 0, uses_anonymous_args = 0
 2136              		@ link register save eliminated.
 2137              	.LVL172:
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2138              		.loc 1 1991 0
 2139 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 2140 0004 012B     		cmp	r3, #1
 2141 0006 17D0     		beq	.L144
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2142              		.loc 1 1991 0 is_stmt 0 discriminator 2
 2143 0008 0123     		movs	r3, #1
 2144 000a 80F86830 		strb	r3, [r0, #104]
ARM GAS  /tmp/ccWyKvi9.s 			page 89


1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2145              		.loc 1 1992 0 is_stmt 1 discriminator 2
 2146 000e 2423     		movs	r3, #36
 2147 0010 80F86930 		strb	r3, [r0, #105]
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
 2148              		.loc 1 1995 0 discriminator 2
 2149 0014 0268     		ldr	r2, [r0]
 2150 0016 1368     		ldr	r3, [r2]
 2151 0018 23F00C03 		bic	r3, r3, #12
 2152 001c 1360     		str	r3, [r2]
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2153              		.loc 1 1997 0 discriminator 2
 2154 001e 0268     		ldr	r2, [r0]
 2155 0020 1368     		ldr	r3, [r2]
 2156 0022 43F00403 		orr	r3, r3, #4
 2157 0026 1360     		str	r3, [r2]
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
 2158              		.loc 1 1999 0 discriminator 2
 2159 0028 2023     		movs	r3, #32
 2160 002a 80F86930 		strb	r3, [r0, #105]
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2161              		.loc 1 2001 0 discriminator 2
 2162 002e 0023     		movs	r3, #0
 2163 0030 80F86830 		strb	r3, [r0, #104]
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2164              		.loc 1 2003 0 discriminator 2
 2165 0034 1846     		mov	r0, r3
 2166              	.LVL173:
 2167 0036 7047     		bx	lr
 2168              	.LVL174:
 2169              	.L144:
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2170              		.loc 1 1991 0
 2171 0038 0220     		movs	r0, #2
 2172              	.LVL175:
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2173              		.loc 1 2004 0
 2174 003a 7047     		bx	lr
 2175              		.cfi_endproc
 2176              	.LFE158:
 2178              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 2179              		.align	2
 2180              		.global	HAL_LIN_SendBreak
 2181              		.thumb
 2182              		.thumb_func
 2184              	HAL_LIN_SendBreak:
 2185              	.LFB159:
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 2186              		.loc 1 2013 0
 2187              		.cfi_startproc
 2188              		@ args = 0, pretend = 0, frame = 0
 2189              		@ frame_needed = 0, uses_anonymous_args = 0
 2190              		@ link register save eliminated.
 2191              	.LVL176:
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2192              		.loc 1 2018 0
 2193 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
ARM GAS  /tmp/ccWyKvi9.s 			page 90


 2194 0004 012B     		cmp	r3, #1
 2195 0006 12D0     		beq	.L147
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2196              		.loc 1 2018 0 is_stmt 0 discriminator 2
 2197 0008 0123     		movs	r3, #1
 2198 000a 80F86830 		strb	r3, [r0, #104]
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2199              		.loc 1 2020 0 is_stmt 1 discriminator 2
 2200 000e 2423     		movs	r3, #36
 2201 0010 80F86930 		strb	r3, [r0, #105]
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2202              		.loc 1 2023 0 discriminator 2
 2203 0014 0268     		ldr	r2, [r0]
 2204 0016 9369     		ldr	r3, [r2, #24]
 2205 0018 43F00203 		orr	r3, r3, #2
 2206 001c 9361     		str	r3, [r2, #24]
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2207              		.loc 1 2025 0 discriminator 2
 2208 001e 2023     		movs	r3, #32
 2209 0020 80F86930 		strb	r3, [r0, #105]
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2210              		.loc 1 2028 0 discriminator 2
 2211 0024 0023     		movs	r3, #0
 2212 0026 80F86830 		strb	r3, [r0, #104]
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2213              		.loc 1 2030 0 discriminator 2
 2214 002a 1846     		mov	r0, r3
 2215              	.LVL177:
 2216 002c 7047     		bx	lr
 2217              	.LVL178:
 2218              	.L147:
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2219              		.loc 1 2018 0
 2220 002e 0220     		movs	r0, #2
 2221              	.LVL179:
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2222              		.loc 1 2031 0
 2223 0030 7047     		bx	lr
 2224              		.cfi_endproc
 2225              	.LFE159:
 2227 0032 00BF     		.section	.text.HAL_UART_GetState,"ax",%progbits
 2228              		.align	2
 2229              		.global	HAL_UART_GetState
 2230              		.thumb
 2231              		.thumb_func
 2233              	HAL_UART_GetState:
 2234              	.LFB160:
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 2235              		.loc 1 2061 0
 2236              		.cfi_startproc
 2237              		@ args = 0, pretend = 0, frame = 0
 2238              		@ frame_needed = 0, uses_anonymous_args = 0
 2239              		@ link register save eliminated.
 2240              	.LVL180:
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp2 = huart->RxState;
 2241              		.loc 1 2063 0
 2242 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
ARM GAS  /tmp/ccWyKvi9.s 			page 91


 2243              	.LVL181:
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2244              		.loc 1 2064 0
 2245 0004 90F86A00 		ldrb	r0, [r0, #106]	@ zero_extendqisi2
 2246              	.LVL182:
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2247              		.loc 1 2067 0
 2248 0008 1843     		orrs	r0, r0, r3
 2249              	.LVL183:
 2250 000a 7047     		bx	lr
 2251              		.cfi_endproc
 2252              	.LFE160:
 2254              		.section	.text.HAL_UART_GetError,"ax",%progbits
 2255              		.align	2
 2256              		.global	HAL_UART_GetError
 2257              		.thumb
 2258              		.thumb_func
 2260              	HAL_UART_GetError:
 2261              	.LFB161:
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
 2262              		.loc 1 2076 0
 2263              		.cfi_startproc
 2264              		@ args = 0, pretend = 0, frame = 0
 2265              		@ frame_needed = 0, uses_anonymous_args = 0
 2266              		@ link register save eliminated.
 2267              	.LVL184:
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2268              		.loc 1 2077 0
 2269 0000 C06E     		ldr	r0, [r0, #108]
 2270              	.LVL185:
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 2271              		.loc 1 2078 0
 2272 0002 7047     		bx	lr
 2273              		.cfi_endproc
 2274              	.LFE161:
 2276              		.section	.text.UART_SetConfig,"ax",%progbits
 2277              		.align	2
 2278              		.global	UART_SetConfig
 2279              		.thumb
 2280              		.thumb_func
 2282              	UART_SetConfig:
 2283              	.LFB162:
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 2284              		.loc 1 2097 0
 2285              		.cfi_startproc
 2286              		@ args = 0, pretend = 0, frame = 0
 2287              		@ frame_needed = 0, uses_anonymous_args = 0
 2288              	.LVL186:
 2289 0000 38B5     		push	{r3, r4, r5, lr}
 2290              	.LCFI21:
 2291              		.cfi_def_cfa_offset 16
 2292              		.cfi_offset 3, -16
 2293              		.cfi_offset 4, -12
 2294              		.cfi_offset 5, -8
 2295              		.cfi_offset 14, -4
 2296 0002 0446     		mov	r4, r0
 2297              	.LVL187:
ARM GAS  /tmp/ccWyKvi9.s 			page 92


2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2298              		.loc 1 2122 0
 2299 0004 8268     		ldr	r2, [r0, #8]
 2300 0006 0369     		ldr	r3, [r0, #16]
 2301 0008 1A43     		orrs	r2, r2, r3
 2302 000a 4369     		ldr	r3, [r0, #20]
 2303 000c 1A43     		orrs	r2, r2, r3
 2304 000e C369     		ldr	r3, [r0, #28]
 2305 0010 1343     		orrs	r3, r3, r2
 2306              	.LVL188:
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2307              		.loc 1 2123 0
 2308 0012 0168     		ldr	r1, [r0]
 2309 0014 0868     		ldr	r0, [r1]
 2310              	.LVL189:
 2311 0016 9C4A     		ldr	r2, .L205
 2312 0018 0240     		ands	r2, r2, r0
 2313 001a 1343     		orrs	r3, r3, r2
 2314              	.LVL190:
 2315 001c 0B60     		str	r3, [r1]
 2316              	.LVL191:
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2317              		.loc 1 2128 0
 2318 001e 2168     		ldr	r1, [r4]
 2319 0020 4B68     		ldr	r3, [r1, #4]
 2320 0022 23F44052 		bic	r2, r3, #12288
 2321 0026 E368     		ldr	r3, [r4, #12]
 2322 0028 1343     		orrs	r3, r3, r2
 2323 002a 4B60     		str	r3, [r1, #4]
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2324              		.loc 1 2136 0
 2325 002c A269     		ldr	r2, [r4, #24]
 2326 002e 236A     		ldr	r3, [r4, #32]
 2327 0030 1343     		orrs	r3, r3, r2
 2328              	.LVL192:
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2329              		.loc 1 2137 0
 2330 0032 2168     		ldr	r1, [r4]
 2331 0034 8A68     		ldr	r2, [r1, #8]
 2332 0036 22F43062 		bic	r2, r2, #2816
 2333 003a 1343     		orrs	r3, r3, r2
 2334              	.LVL193:
 2335 003c 8B60     		str	r3, [r1, #8]
 2336              	.LVL194:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2337              		.loc 1 2140 0
 2338 003e 2568     		ldr	r5, [r4]
 2339 0040 924B     		ldr	r3, .L205+4
 2340 0042 9D42     		cmp	r5, r3
 2341 0044 12D1     		bne	.L151
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2342              		.loc 1 2140 0 is_stmt 0 discriminator 1
 2343 0046 03F55843 		add	r3, r3, #55296
 2344 004a 1B6B     		ldr	r3, [r3, #48]
 2345 004c 03F00303 		and	r3, r3, #3
 2346 0050 032B     		cmp	r3, #3
 2347 0052 09D8     		bhi	.L152
ARM GAS  /tmp/ccWyKvi9.s 			page 93


 2348 0054 DFE803F0 		tbb	[pc, r3]
 2349              	.L154:
 2350 0058 02       		.byte	(.L153-.L154)/2
 2351 0059 04       		.byte	(.L155-.L154)/2
 2352 005a 06       		.byte	(.L156-.L154)/2
 2353 005b 7E       		.byte	(.L196-.L154)/2
 2354              		.p2align 1
 2355              	.L153:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2356              		.loc 1 2140 0
 2357 005c 0123     		movs	r3, #1
 2358 005e 84E0     		b	.L157
 2359              	.L155:
 2360              	.LVL195:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2361              		.loc 1 2140 0 discriminator 5
 2362 0060 0423     		movs	r3, #4
 2363 0062 82E0     		b	.L157
 2364              	.LVL196:
 2365              	.L156:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2366              		.loc 1 2140 0 discriminator 6
 2367 0064 0823     		movs	r3, #8
 2368 0066 80E0     		b	.L157
 2369              	.LVL197:
 2370              	.L152:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2371              		.loc 1 2140 0 discriminator 3
 2372 0068 1023     		movs	r3, #16
 2373 006a 7EE0     		b	.L157
 2374              	.L151:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2375              		.loc 1 2140 0 discriminator 2
 2376 006c 884B     		ldr	r3, .L205+8
 2377 006e 9D42     		cmp	r5, r3
 2378 0070 19D1     		bne	.L158
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2379              		.loc 1 2140 0 discriminator 8
 2380 0072 03F5E633 		add	r3, r3, #117760
 2381 0076 1B6B     		ldr	r3, [r3, #48]
 2382 0078 03F44033 		and	r3, r3, #196608
 2383 007c B3F5803F 		cmp	r3, #65536
 2384 0080 0BD0     		beq	.L160
 2385 0082 01D8     		bhi	.L161
 2386 0084 3BB1     		cbz	r3, .L162
 2387 0086 0CE0     		b	.L159
 2388              	.L161:
 2389 0088 B3F5003F 		cmp	r3, #131072
 2390 008c 07D0     		beq	.L163
 2391 008e B3F5403F 		cmp	r3, #196608
 2392 0092 61D0     		beq	.L197
 2393 0094 05E0     		b	.L159
 2394              	.L162:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2395              		.loc 1 2140 0
 2396 0096 0023     		movs	r3, #0
 2397 0098 67E0     		b	.L157
ARM GAS  /tmp/ccWyKvi9.s 			page 94


 2398              	.L160:
 2399              	.LVL198:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2400              		.loc 1 2140 0 discriminator 12
 2401 009a 0423     		movs	r3, #4
 2402 009c 65E0     		b	.L157
 2403              	.LVL199:
 2404              	.L163:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2405              		.loc 1 2140 0 discriminator 13
 2406 009e 0823     		movs	r3, #8
 2407 00a0 63E0     		b	.L157
 2408              	.LVL200:
 2409              	.L159:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2410              		.loc 1 2140 0 discriminator 10
 2411 00a2 1023     		movs	r3, #16
 2412 00a4 61E0     		b	.L157
 2413              	.L158:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2414              		.loc 1 2140 0 discriminator 9
 2415 00a6 7B4B     		ldr	r3, .L205+12
 2416 00a8 9D42     		cmp	r5, r3
 2417 00aa 19D1     		bne	.L164
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2418              		.loc 1 2140 0 discriminator 15
 2419 00ac 03F5E433 		add	r3, r3, #116736
 2420 00b0 1B6B     		ldr	r3, [r3, #48]
 2421 00b2 03F44023 		and	r3, r3, #786432
 2422 00b6 B3F5802F 		cmp	r3, #262144
 2423 00ba 0BD0     		beq	.L166
 2424 00bc 01D8     		bhi	.L167
 2425 00be 3BB1     		cbz	r3, .L168
 2426 00c0 0CE0     		b	.L165
 2427              	.L167:
 2428 00c2 B3F5002F 		cmp	r3, #524288
 2429 00c6 07D0     		beq	.L169
 2430 00c8 B3F5402F 		cmp	r3, #786432
 2431 00cc 46D0     		beq	.L198
 2432 00ce 05E0     		b	.L165
 2433              	.L168:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2434              		.loc 1 2140 0
 2435 00d0 0023     		movs	r3, #0
 2436 00d2 4AE0     		b	.L157
 2437              	.L166:
 2438              	.LVL201:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2439              		.loc 1 2140 0 discriminator 19
 2440 00d4 0423     		movs	r3, #4
 2441 00d6 48E0     		b	.L157
 2442              	.LVL202:
 2443              	.L169:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2444              		.loc 1 2140 0 discriminator 20
 2445 00d8 0823     		movs	r3, #8
 2446 00da 46E0     		b	.L157
ARM GAS  /tmp/ccWyKvi9.s 			page 95


 2447              	.LVL203:
 2448              	.L165:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2449              		.loc 1 2140 0 discriminator 17
 2450 00dc 1023     		movs	r3, #16
 2451 00de 44E0     		b	.L157
 2452              	.L164:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2453              		.loc 1 2140 0 discriminator 16
 2454 00e0 6D4B     		ldr	r3, .L205+16
 2455 00e2 9D42     		cmp	r5, r3
 2456 00e4 19D1     		bne	.L170
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2457              		.loc 1 2140 0 discriminator 22
 2458 00e6 03F5E233 		add	r3, r3, #115712
 2459 00ea 1B6B     		ldr	r3, [r3, #48]
 2460 00ec 03F44013 		and	r3, r3, #3145728
 2461 00f0 B3F5801F 		cmp	r3, #1048576
 2462 00f4 0BD0     		beq	.L172
 2463 00f6 01D8     		bhi	.L173
 2464 00f8 3BB1     		cbz	r3, .L174
 2465 00fa 0CE0     		b	.L171
 2466              	.L173:
 2467 00fc B3F5001F 		cmp	r3, #2097152
 2468 0100 07D0     		beq	.L175
 2469 0102 B3F5401F 		cmp	r3, #3145728
 2470 0106 2BD0     		beq	.L199
 2471 0108 05E0     		b	.L171
 2472              	.L174:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2473              		.loc 1 2140 0
 2474 010a 0023     		movs	r3, #0
 2475 010c 2DE0     		b	.L157
 2476              	.L172:
 2477              	.LVL204:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2478              		.loc 1 2140 0 discriminator 26
 2479 010e 0423     		movs	r3, #4
 2480 0110 2BE0     		b	.L157
 2481              	.LVL205:
 2482              	.L175:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2483              		.loc 1 2140 0 discriminator 27
 2484 0112 0823     		movs	r3, #8
 2485 0114 29E0     		b	.L157
 2486              	.LVL206:
 2487              	.L171:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2488              		.loc 1 2140 0 discriminator 24
 2489 0116 1023     		movs	r3, #16
 2490 0118 27E0     		b	.L157
 2491              	.L170:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2492              		.loc 1 2140 0 discriminator 23
 2493 011a 604B     		ldr	r3, .L205+20
 2494 011c 9D42     		cmp	r5, r3
 2495 011e 21D1     		bne	.L200
ARM GAS  /tmp/ccWyKvi9.s 			page 96


2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2496              		.loc 1 2140 0 discriminator 29
 2497 0120 03F5E033 		add	r3, r3, #114688
 2498 0124 1B6B     		ldr	r3, [r3, #48]
 2499 0126 03F44003 		and	r3, r3, #12582912
 2500 012a B3F5800F 		cmp	r3, #4194304
 2501 012e 0BD0     		beq	.L177
 2502 0130 01D8     		bhi	.L178
 2503 0132 3BB1     		cbz	r3, .L179
 2504 0134 0CE0     		b	.L176
 2505              	.L178:
 2506 0136 B3F5000F 		cmp	r3, #8388608
 2507 013a 07D0     		beq	.L180
 2508 013c B3F5400F 		cmp	r3, #12582912
 2509 0140 12D0     		beq	.L201
 2510 0142 05E0     		b	.L176
 2511              	.L179:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2512              		.loc 1 2140 0
 2513 0144 0023     		movs	r3, #0
 2514 0146 10E0     		b	.L157
 2515              	.L177:
 2516              	.LVL207:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2517              		.loc 1 2140 0 discriminator 33
 2518 0148 0423     		movs	r3, #4
 2519 014a 0EE0     		b	.L157
 2520              	.LVL208:
 2521              	.L180:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2522              		.loc 1 2140 0 discriminator 34
 2523 014c 0823     		movs	r3, #8
 2524 014e 0CE0     		b	.L157
 2525              	.LVL209:
 2526              	.L176:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2527              		.loc 1 2140 0 discriminator 31
 2528 0150 1023     		movs	r3, #16
 2529 0152 0AE0     		b	.L157
 2530              	.L196:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2531              		.loc 1 2140 0
 2532 0154 0223     		movs	r3, #2
 2533 0156 08E0     		b	.L157
 2534              	.L197:
 2535 0158 0223     		movs	r3, #2
 2536 015a 06E0     		b	.L157
 2537              	.L198:
 2538 015c 0223     		movs	r3, #2
 2539 015e 04E0     		b	.L157
 2540              	.L199:
 2541 0160 0223     		movs	r3, #2
 2542 0162 02E0     		b	.L157
 2543              	.L200:
 2544 0164 1023     		movs	r3, #16
 2545 0166 00E0     		b	.L157
 2546              	.L201:
ARM GAS  /tmp/ccWyKvi9.s 			page 97


 2547 0168 0223     		movs	r3, #2
 2548              	.LVL210:
 2549              	.L157:
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2550              		.loc 1 2143 0 is_stmt 1
 2551 016a E269     		ldr	r2, [r4, #28]
 2552 016c B2F5004F 		cmp	r2, #32768
 2553 0170 47D1     		bne	.L181
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2554              		.loc 1 2145 0
 2555 0172 082B     		cmp	r3, #8
 2556 0174 3BD8     		bhi	.L202
 2557 0176 DFE803F0 		tbb	[pc, r3]
 2558              	.L184:
 2559 017a 05       		.byte	(.L183-.L184)/2
 2560 017b 10       		.byte	(.L185-.L184)/2
 2561 017c 1B       		.byte	(.L186-.L184)/2
 2562 017d 3A       		.byte	(.L202-.L184)/2
 2563 017e 26       		.byte	(.L187-.L184)/2
 2564 017f 3A       		.byte	(.L202-.L184)/2
 2565 0180 3A       		.byte	(.L202-.L184)/2
 2566 0181 3A       		.byte	(.L202-.L184)/2
 2567 0182 31       		.byte	(.L188-.L184)/2
 2568 0183 00       		.p2align 1
 2569              	.L183:
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2570              		.loc 1 2148 0
 2571 0184 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2572              	.LVL211:
 2573 0188 6368     		ldr	r3, [r4, #4]
 2574 018a 5A08     		lsrs	r2, r3, #1
 2575 018c 02EB4000 		add	r0, r2, r0, lsl #1
 2576 0190 B0FBF3F3 		udiv	r3, r0, r3
 2577 0194 9BB2     		uxth	r3, r3
 2578              	.LVL212:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2579              		.loc 1 2102 0
 2580 0196 0020     		movs	r0, #0
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
 2581              		.loc 1 2149 0
 2582 0198 2BE0     		b	.L182
 2583              	.LVL213:
 2584              	.L185:
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2585              		.loc 1 2151 0
 2586 019a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2587              	.LVL214:
 2588 019e 6368     		ldr	r3, [r4, #4]
 2589 01a0 5A08     		lsrs	r2, r3, #1
 2590 01a2 02EB4000 		add	r0, r2, r0, lsl #1
 2591 01a6 B0FBF3F3 		udiv	r3, r0, r3
 2592 01aa 9BB2     		uxth	r3, r3
 2593              	.LVL215:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2594              		.loc 1 2102 0
 2595 01ac 0020     		movs	r0, #0
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
ARM GAS  /tmp/ccWyKvi9.s 			page 98


 2596              		.loc 1 2152 0
 2597 01ae 20E0     		b	.L182
 2598              	.LVL216:
 2599              	.L186:
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2600              		.loc 1 2154 0
 2601 01b0 6168     		ldr	r1, [r4, #4]
 2602 01b2 4A08     		lsrs	r2, r1, #1
 2603 01b4 02F57403 		add	r3, r2, #15990784
 2604              	.LVL217:
 2605 01b8 03F51053 		add	r3, r3, #9216
 2606 01bc B3FBF1F3 		udiv	r3, r3, r1
 2607 01c0 9BB2     		uxth	r3, r3
 2608              	.LVL218:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2609              		.loc 1 2102 0
 2610 01c2 0020     		movs	r0, #0
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 2611              		.loc 1 2155 0
 2612 01c4 15E0     		b	.L182
 2613              	.LVL219:
 2614              	.L187:
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2615              		.loc 1 2157 0
 2616 01c6 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2617              	.LVL220:
 2618 01ca 6368     		ldr	r3, [r4, #4]
 2619 01cc 5A08     		lsrs	r2, r3, #1
 2620 01ce 02EB4000 		add	r0, r2, r0, lsl #1
 2621 01d2 B0FBF3F3 		udiv	r3, r0, r3
 2622 01d6 9BB2     		uxth	r3, r3
 2623              	.LVL221:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2624              		.loc 1 2102 0
 2625 01d8 0020     		movs	r0, #0
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 2626              		.loc 1 2158 0
 2627 01da 0AE0     		b	.L182
 2628              	.LVL222:
 2629              	.L188:
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2630              		.loc 1 2160 0
 2631 01dc 6268     		ldr	r2, [r4, #4]
 2632 01de 5308     		lsrs	r3, r2, #1
 2633              	.LVL223:
 2634 01e0 03F58033 		add	r3, r3, #65536
 2635 01e4 B3FBF2F3 		udiv	r3, r3, r2
 2636 01e8 9BB2     		uxth	r3, r3
 2637              	.LVL224:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2638              		.loc 1 2102 0
 2639 01ea 0020     		movs	r0, #0
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2640              		.loc 1 2161 0
 2641 01ec 01E0     		b	.L182
 2642              	.LVL225:
 2643              	.L202:
ARM GAS  /tmp/ccWyKvi9.s 			page 99


2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2644              		.loc 1 2164 0
 2645 01ee 0120     		movs	r0, #1
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 2646              		.loc 1 2101 0
 2647 01f0 0023     		movs	r3, #0
 2648              	.LVL226:
 2649              	.L182:
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2650              		.loc 1 2168 0
 2651 01f2 23F00F02 		bic	r2, r3, #15
 2652              	.LVL227:
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 2653              		.loc 1 2169 0
 2654 01f6 C3F34203 		ubfx	r3, r3, #1, #3
 2655              	.LVL228:
 2656 01fa 1343     		orrs	r3, r3, r2
 2657              	.LVL229:
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2658              		.loc 1 2170 0
 2659 01fc 2268     		ldr	r2, [r4]
 2660 01fe D360     		str	r3, [r2, #12]
 2661 0200 38BD     		pop	{r3, r4, r5, pc}
 2662              	.LVL230:
 2663              	.L181:
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2664              		.loc 1 2174 0
 2665 0202 082B     		cmp	r3, #8
 2666 0204 3DD8     		bhi	.L203
 2667 0206 DFE803F0 		tbb	[pc, r3]
 2668              	.L191:
 2669 020a 05       		.byte	(.L190-.L191)/2
 2670 020b 10       		.byte	(.L192-.L191)/2
 2671 020c 1B       		.byte	(.L193-.L191)/2
 2672 020d 3C       		.byte	(.L203-.L191)/2
 2673 020e 27       		.byte	(.L194-.L191)/2
 2674 020f 3C       		.byte	(.L203-.L191)/2
 2675 0210 3C       		.byte	(.L203-.L191)/2
 2676 0211 3C       		.byte	(.L203-.L191)/2
 2677 0212 32       		.byte	(.L195-.L191)/2
 2678 0213 00       		.p2align 1
 2679              	.L190:
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2680              		.loc 1 2177 0
 2681 0214 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2682              	.LVL231:
 2683 0218 6368     		ldr	r3, [r4, #4]
 2684 021a 00EB5300 		add	r0, r0, r3, lsr #1
 2685 021e B0FBF3F0 		udiv	r0, r0, r3
 2686 0222 80B2     		uxth	r0, r0
 2687 0224 E860     		str	r0, [r5, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2688              		.loc 1 2102 0
 2689 0226 0020     		movs	r0, #0
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
 2690              		.loc 1 2178 0
 2691 0228 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccWyKvi9.s 			page 100


 2692              	.LVL232:
 2693              	.L192:
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2694              		.loc 1 2180 0
 2695 022a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2696              	.LVL233:
 2697 022e 6368     		ldr	r3, [r4, #4]
 2698 0230 00EB5300 		add	r0, r0, r3, lsr #1
 2699 0234 B0FBF3F0 		udiv	r0, r0, r3
 2700 0238 80B2     		uxth	r0, r0
 2701 023a E860     		str	r0, [r5, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2702              		.loc 1 2102 0
 2703 023c 0020     		movs	r0, #0
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 2704              		.loc 1 2181 0
 2705 023e 38BD     		pop	{r3, r4, r5, pc}
 2706              	.LVL234:
 2707              	.L193:
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2708              		.loc 1 2183 0
 2709 0240 6168     		ldr	r1, [r4, #4]
 2710 0242 4A08     		lsrs	r2, r1, #1
 2711 0244 02F5F403 		add	r3, r2, #7995392
 2712              	.LVL235:
 2713 0248 03F59053 		add	r3, r3, #4608
 2714 024c B3FBF1F3 		udiv	r3, r3, r1
 2715 0250 9BB2     		uxth	r3, r3
 2716 0252 EB60     		str	r3, [r5, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2717              		.loc 1 2102 0
 2718 0254 0020     		movs	r0, #0
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 2719              		.loc 1 2184 0
 2720 0256 38BD     		pop	{r3, r4, r5, pc}
 2721              	.LVL236:
 2722              	.L194:
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2723              		.loc 1 2186 0
 2724 0258 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2725              	.LVL237:
 2726 025c 6368     		ldr	r3, [r4, #4]
 2727 025e 00EB5300 		add	r0, r0, r3, lsr #1
 2728 0262 B0FBF3F0 		udiv	r0, r0, r3
 2729 0266 80B2     		uxth	r0, r0
 2730 0268 E860     		str	r0, [r5, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2731              		.loc 1 2102 0
 2732 026a 0020     		movs	r0, #0
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 2733              		.loc 1 2187 0
 2734 026c 38BD     		pop	{r3, r4, r5, pc}
 2735              	.LVL238:
 2736              	.L195:
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2737              		.loc 1 2189 0
 2738 026e 6268     		ldr	r2, [r4, #4]
ARM GAS  /tmp/ccWyKvi9.s 			page 101


 2739 0270 5308     		lsrs	r3, r2, #1
 2740              	.LVL239:
 2741 0272 03F50043 		add	r3, r3, #32768
 2742 0276 B3FBF2F3 		udiv	r3, r3, r2
 2743 027a 9BB2     		uxth	r3, r3
 2744 027c EB60     		str	r3, [r5, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2745              		.loc 1 2102 0
 2746 027e 0020     		movs	r0, #0
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2747              		.loc 1 2190 0
 2748 0280 38BD     		pop	{r3, r4, r5, pc}
 2749              	.LVL240:
 2750              	.L203:
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2751              		.loc 1 2193 0
 2752 0282 0120     		movs	r0, #1
 2753              	.LVL241:
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2754              		.loc 1 2200 0
 2755 0284 38BD     		pop	{r3, r4, r5, pc}
 2756              	.LVL242:
 2757              	.L206:
 2758 0286 00BF     		.align	2
 2759              	.L205:
 2760 0288 F369FFEF 		.word	-268473869
 2761 028c 00380140 		.word	1073821696
 2762 0290 00440040 		.word	1073759232
 2763 0294 00480040 		.word	1073760256
 2764 0298 004C0040 		.word	1073761280
 2765 029c 00500040 		.word	1073762304
 2766              		.cfi_endproc
 2767              	.LFE162:
 2769              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 2770              		.align	2
 2771              		.global	UART_AdvFeatureConfig
 2772              		.thumb
 2773              		.thumb_func
 2775              	UART_AdvFeatureConfig:
 2776              	.LFB163:
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 2777              		.loc 1 2208 0
 2778              		.cfi_startproc
 2779              		@ args = 0, pretend = 0, frame = 0
 2780              		@ frame_needed = 0, uses_anonymous_args = 0
 2781              		@ link register save eliminated.
 2782              	.LVL243:
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2783              		.loc 1 2213 0
 2784 0000 436A     		ldr	r3, [r0, #36]
 2785 0002 13F0010F 		tst	r3, #1
 2786 0006 06D0     		beq	.L208
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2787              		.loc 1 2216 0
 2788 0008 0168     		ldr	r1, [r0]
 2789 000a 4B68     		ldr	r3, [r1, #4]
 2790 000c 23F40032 		bic	r2, r3, #131072
ARM GAS  /tmp/ccWyKvi9.s 			page 102


 2791 0010 836A     		ldr	r3, [r0, #40]
 2792 0012 1343     		orrs	r3, r3, r2
 2793 0014 4B60     		str	r3, [r1, #4]
 2794              	.L208:
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2795              		.loc 1 2220 0
 2796 0016 436A     		ldr	r3, [r0, #36]
 2797 0018 13F0020F 		tst	r3, #2
 2798 001c 06D0     		beq	.L209
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2799              		.loc 1 2223 0
 2800 001e 0168     		ldr	r1, [r0]
 2801 0020 4B68     		ldr	r3, [r1, #4]
 2802 0022 23F48032 		bic	r2, r3, #65536
 2803 0026 C36A     		ldr	r3, [r0, #44]
 2804 0028 1343     		orrs	r3, r3, r2
 2805 002a 4B60     		str	r3, [r1, #4]
 2806              	.L209:
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2807              		.loc 1 2227 0
 2808 002c 436A     		ldr	r3, [r0, #36]
 2809 002e 13F0040F 		tst	r3, #4
 2810 0032 06D0     		beq	.L210
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2811              		.loc 1 2230 0
 2812 0034 0168     		ldr	r1, [r0]
 2813 0036 4B68     		ldr	r3, [r1, #4]
 2814 0038 23F48022 		bic	r2, r3, #262144
 2815 003c 036B     		ldr	r3, [r0, #48]
 2816 003e 1343     		orrs	r3, r3, r2
 2817 0040 4B60     		str	r3, [r1, #4]
 2818              	.L210:
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2819              		.loc 1 2234 0
 2820 0042 436A     		ldr	r3, [r0, #36]
 2821 0044 13F0080F 		tst	r3, #8
 2822 0048 06D0     		beq	.L211
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2823              		.loc 1 2237 0
 2824 004a 0168     		ldr	r1, [r0]
 2825 004c 4B68     		ldr	r3, [r1, #4]
 2826 004e 23F40042 		bic	r2, r3, #32768
 2827 0052 436B     		ldr	r3, [r0, #52]
 2828 0054 1343     		orrs	r3, r3, r2
 2829 0056 4B60     		str	r3, [r1, #4]
 2830              	.L211:
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2831              		.loc 1 2241 0
 2832 0058 436A     		ldr	r3, [r0, #36]
 2833 005a 13F0100F 		tst	r3, #16
 2834 005e 06D0     		beq	.L212
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2835              		.loc 1 2244 0
 2836 0060 0168     		ldr	r1, [r0]
 2837 0062 8B68     		ldr	r3, [r1, #8]
 2838 0064 23F48052 		bic	r2, r3, #4096
 2839 0068 836B     		ldr	r3, [r0, #56]
ARM GAS  /tmp/ccWyKvi9.s 			page 103


 2840 006a 1343     		orrs	r3, r3, r2
 2841 006c 8B60     		str	r3, [r1, #8]
 2842              	.L212:
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2843              		.loc 1 2248 0
 2844 006e 436A     		ldr	r3, [r0, #36]
 2845 0070 13F0200F 		tst	r3, #32
 2846 0074 06D0     		beq	.L213
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2847              		.loc 1 2251 0
 2848 0076 0168     		ldr	r1, [r0]
 2849 0078 8B68     		ldr	r3, [r1, #8]
 2850 007a 23F40052 		bic	r2, r3, #8192
 2851 007e C36B     		ldr	r3, [r0, #60]
 2852 0080 1343     		orrs	r3, r3, r2
 2853 0082 8B60     		str	r3, [r1, #8]
 2854              	.L213:
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2855              		.loc 1 2255 0
 2856 0084 436A     		ldr	r3, [r0, #36]
 2857 0086 13F0400F 		tst	r3, #64
 2858 008a 11D0     		beq	.L214
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 2859              		.loc 1 2259 0
 2860 008c 0168     		ldr	r1, [r0]
 2861 008e 4B68     		ldr	r3, [r1, #4]
 2862 0090 23F48012 		bic	r2, r3, #1048576
 2863 0094 036C     		ldr	r3, [r0, #64]
 2864 0096 1343     		orrs	r3, r3, r2
 2865 0098 4B60     		str	r3, [r1, #4]
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2866              		.loc 1 2261 0
 2867 009a 036C     		ldr	r3, [r0, #64]
 2868 009c B3F5801F 		cmp	r3, #1048576
 2869 00a0 06D1     		bne	.L214
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2870              		.loc 1 2264 0
 2871 00a2 0168     		ldr	r1, [r0]
 2872 00a4 4B68     		ldr	r3, [r1, #4]
 2873 00a6 23F4C002 		bic	r2, r3, #6291456
 2874 00aa 436C     		ldr	r3, [r0, #68]
 2875 00ac 1343     		orrs	r3, r3, r2
 2876 00ae 4B60     		str	r3, [r1, #4]
 2877              	.L214:
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2878              		.loc 1 2269 0
 2879 00b0 436A     		ldr	r3, [r0, #36]
 2880 00b2 13F0800F 		tst	r3, #128
 2881 00b6 06D0     		beq	.L207
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2882              		.loc 1 2272 0
 2883 00b8 0168     		ldr	r1, [r0]
 2884 00ba 4B68     		ldr	r3, [r1, #4]
 2885 00bc 23F40022 		bic	r2, r3, #524288
 2886 00c0 836C     		ldr	r3, [r0, #72]
 2887 00c2 1343     		orrs	r3, r3, r2
 2888 00c4 4B60     		str	r3, [r1, #4]
ARM GAS  /tmp/ccWyKvi9.s 			page 104


 2889              	.L207:
 2890 00c6 7047     		bx	lr
 2891              		.cfi_endproc
 2892              	.LFE163:
 2894              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 2895              		.align	2
 2896              		.global	UART_WaitOnFlagUntilTimeout
 2897              		.thumb
 2898              		.thumb_func
 2900              	UART_WaitOnFlagUntilTimeout:
 2901              	.LFB165:
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
 2902              		.loc 1 2332 0
 2903              		.cfi_startproc
 2904              		@ args = 4, pretend = 0, frame = 0
 2905              		@ frame_needed = 0, uses_anonymous_args = 0
 2906              	.LVL244:
 2907 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2908              	.LCFI22:
 2909              		.cfi_def_cfa_offset 24
 2910              		.cfi_offset 4, -24
 2911              		.cfi_offset 5, -20
 2912              		.cfi_offset 6, -16
 2913              		.cfi_offset 7, -12
 2914              		.cfi_offset 8, -8
 2915              		.cfi_offset 14, -4
 2916 0004 0646     		mov	r6, r0
 2917 0006 0C46     		mov	r4, r1
 2918 0008 1746     		mov	r7, r2
 2919 000a 9846     		mov	r8, r3
 2920 000c 069D     		ldr	r5, [sp, #24]
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2921              		.loc 1 2334 0
 2922 000e 1EE0     		b	.L218
 2923              	.LVL245:
 2924              	.L221:
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2925              		.loc 1 2337 0
 2926 0010 B5F1FF3F 		cmp	r5, #-1
 2927 0014 1BD0     		beq	.L218
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2928              		.loc 1 2339 0
 2929 0016 2DB1     		cbz	r5, .L219
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2930              		.loc 1 2339 0 is_stmt 0 discriminator 1
 2931 0018 FFF7FEFF 		bl	HAL_GetTick
 2932              	.LVL246:
 2933 001c C8EB0000 		rsb	r0, r8, r0
 2934 0020 A842     		cmp	r0, r5
 2935 0022 14D9     		bls	.L218
 2936              	.L219:
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2937              		.loc 1 2342 0 is_stmt 1
 2938 0024 3268     		ldr	r2, [r6]
 2939 0026 1368     		ldr	r3, [r2]
 2940 0028 23F4D073 		bic	r3, r3, #416
 2941 002c 1360     		str	r3, [r2]
ARM GAS  /tmp/ccWyKvi9.s 			page 105


2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2942              		.loc 1 2343 0
 2943 002e 3268     		ldr	r2, [r6]
 2944 0030 9368     		ldr	r3, [r2, #8]
 2945 0032 23F00103 		bic	r3, r3, #1
 2946 0036 9360     		str	r3, [r2, #8]
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 2947              		.loc 1 2345 0
 2948 0038 2023     		movs	r3, #32
 2949 003a 86F86930 		strb	r3, [r6, #105]
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2950              		.loc 1 2346 0
 2951 003e 86F86A30 		strb	r3, [r6, #106]
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 2952              		.loc 1 2349 0
 2953 0042 0023     		movs	r3, #0
 2954 0044 86F86830 		strb	r3, [r6, #104]
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2955              		.loc 1 2350 0
 2956 0048 0320     		movs	r0, #3
 2957 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2958              	.LVL247:
 2959              	.L218:
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2960              		.loc 1 2334 0
 2961 004e 3368     		ldr	r3, [r6]
 2962 0050 DB69     		ldr	r3, [r3, #28]
 2963 0052 2340     		ands	r3, r3, r4
 2964 0054 A342     		cmp	r3, r4
 2965 0056 14BF     		ite	ne
 2966 0058 0023     		movne	r3, #0
 2967 005a 0123     		moveq	r3, #1
 2968 005c BB42     		cmp	r3, r7
 2969 005e D7D0     		beq	.L221
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2970              		.loc 1 2354 0
 2971 0060 0020     		movs	r0, #0
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2972              		.loc 1 2355 0
 2973 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2974              		.cfi_endproc
 2975              	.LFE165:
 2977 0066 00BF     		.section	.text.HAL_UART_Transmit,"ax",%progbits
 2978              		.align	2
 2979              		.global	HAL_UART_Transmit
 2980              		.thumb
 2981              		.thumb_func
 2983              	HAL_UART_Transmit:
 2984              	.LFB130:
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 2985              		.loc 1 724 0
 2986              		.cfi_startproc
 2987              		@ args = 0, pretend = 0, frame = 0
 2988              		@ frame_needed = 0, uses_anonymous_args = 0
 2989              	.LVL248:
 2990 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2991              	.LCFI23:
ARM GAS  /tmp/ccWyKvi9.s 			page 106


 2992              		.cfi_def_cfa_offset 24
 2993              		.cfi_offset 4, -24
 2994              		.cfi_offset 5, -20
 2995              		.cfi_offset 6, -16
 2996              		.cfi_offset 7, -12
 2997              		.cfi_offset 8, -8
 2998              		.cfi_offset 14, -4
 2999 0004 82B0     		sub	sp, sp, #8
 3000              	.LCFI24:
 3001              		.cfi_def_cfa_offset 32
 3002 0006 0446     		mov	r4, r0
 3003 0008 1E46     		mov	r6, r3
 3004              	.LVL249:
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3005              		.loc 1 729 0
 3006 000a 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3007              	.LVL250:
 3008 000e DBB2     		uxtb	r3, r3
 3009 0010 202B     		cmp	r3, #32
 3010 0012 4DD1     		bne	.L229
 3011 0014 0D46     		mov	r5, r1
 3012 0016 9046     		mov	r8, r2
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3013              		.loc 1 731 0
 3014 0018 0029     		cmp	r1, #0
 3015 001a 4BD0     		beq	.L230
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3016              		.loc 1 731 0 is_stmt 0 discriminator 1
 3017 001c 002A     		cmp	r2, #0
 3018 001e 4BD0     		beq	.L231
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3019              		.loc 1 737 0 is_stmt 1
 3020 0020 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3021 0024 012B     		cmp	r3, #1
 3022 0026 49D0     		beq	.L232
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3023              		.loc 1 737 0 is_stmt 0 discriminator 2
 3024 0028 0123     		movs	r3, #1
 3025 002a 80F86830 		strb	r3, [r0, #104]
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3026              		.loc 1 739 0 is_stmt 1 discriminator 2
 3027 002e 0023     		movs	r3, #0
 3028 0030 C366     		str	r3, [r0, #108]
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3029              		.loc 1 740 0 discriminator 2
 3030 0032 2123     		movs	r3, #33
 3031 0034 80F86930 		strb	r3, [r0, #105]
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3032              		.loc 1 743 0 discriminator 2
 3033 0038 FFF7FEFF 		bl	HAL_GetTick
 3034              	.LVL251:
 3035 003c 0746     		mov	r7, r0
 3036              	.LVL252:
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 3037              		.loc 1 745 0 discriminator 2
 3038 003e A4F85080 		strh	r8, [r4, #80]	@ movhi
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
ARM GAS  /tmp/ccWyKvi9.s 			page 107


 3039              		.loc 1 746 0 discriminator 2
 3040 0042 A4F85280 		strh	r8, [r4, #82]	@ movhi
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3041              		.loc 1 747 0 discriminator 2
 3042 0046 1EE0     		b	.L225
 3043              	.LVL253:
 3044              	.L228:
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3045              		.loc 1 749 0
 3046 0048 B4F85230 		ldrh	r3, [r4, #82]
 3047 004c 013B     		subs	r3, r3, #1
 3048 004e 9BB2     		uxth	r3, r3
 3049 0050 A4F85230 		strh	r3, [r4, #82]	@ movhi
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3050              		.loc 1 750 0
 3051 0054 0096     		str	r6, [sp]
 3052 0056 2046     		mov	r0, r4
 3053 0058 8021     		movs	r1, #128
 3054 005a 0022     		movs	r2, #0
 3055 005c 3B46     		mov	r3, r7
 3056 005e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3057              	.LVL254:
 3058 0062 68BB     		cbnz	r0, .L233
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3059              		.loc 1 754 0
 3060 0064 A368     		ldr	r3, [r4, #8]
 3061 0066 B3F5805F 		cmp	r3, #4096
 3062 006a 08D1     		bne	.L226
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3063              		.loc 1 754 0 is_stmt 0 discriminator 1
 3064 006c 2369     		ldr	r3, [r4, #16]
 3065 006e 33B9     		cbnz	r3, .L226
 3066              	.LVL255:
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData += 2U;
 3067              		.loc 1 757 0 is_stmt 1
 3068 0070 2268     		ldr	r2, [r4]
 3069 0072 35F8023B 		ldrh	r3, [r5], #2
 3070              	.LVL256:
 3071 0076 C3F30803 		ubfx	r3, r3, #0, #9
 3072 007a 1385     		strh	r3, [r2, #40]	@ movhi
 3073              	.LVL257:
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3074              		.loc 1 758 0
 3075 007c 03E0     		b	.L225
 3076              	.LVL258:
 3077              	.L226:
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3078              		.loc 1 762 0
 3079 007e 2368     		ldr	r3, [r4]
 3080              	.LVL259:
 3081 0080 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 3082 0082 1A85     		strh	r2, [r3, #40]	@ movhi
 3083 0084 0135     		adds	r5, r5, #1
 3084              	.LVL260:
 3085              	.L225:
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3086              		.loc 1 747 0
ARM GAS  /tmp/ccWyKvi9.s 			page 108


 3087 0086 B4F85230 		ldrh	r3, [r4, #82]
 3088 008a 9BB2     		uxth	r3, r3
 3089 008c 002B     		cmp	r3, #0
 3090 008e DBD1     		bne	.L228
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3091              		.loc 1 765 0
 3092 0090 0096     		str	r6, [sp]
 3093 0092 2046     		mov	r0, r4
 3094 0094 4021     		movs	r1, #64
 3095 0096 0022     		movs	r2, #0
 3096 0098 3B46     		mov	r3, r7
 3097 009a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3098              	.LVL261:
 3099 009e 0346     		mov	r3, r0
 3100 00a0 80B9     		cbnz	r0, .L234
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3101              		.loc 1 771 0
 3102 00a2 2022     		movs	r2, #32
 3103 00a4 84F86920 		strb	r2, [r4, #105]
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3104              		.loc 1 774 0
 3105 00a8 0022     		movs	r2, #0
 3106 00aa 84F86820 		strb	r2, [r4, #104]
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3107              		.loc 1 776 0
 3108 00ae 0AE0     		b	.L224
 3109              	.LVL262:
 3110              	.L229:
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3111              		.loc 1 780 0
 3112 00b0 0223     		movs	r3, #2
 3113 00b2 08E0     		b	.L224
 3114              	.L230:
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3115              		.loc 1 733 0
 3116 00b4 0123     		movs	r3, #1
 3117 00b6 06E0     		b	.L224
 3118              	.L231:
 3119 00b8 0123     		movs	r3, #1
 3120 00ba 04E0     		b	.L224
 3121              	.L232:
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3122              		.loc 1 737 0
 3123 00bc 0223     		movs	r3, #2
 3124 00be 02E0     		b	.L224
 3125              	.LVL263:
 3126              	.L233:
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3127              		.loc 1 752 0
 3128 00c0 0323     		movs	r3, #3
 3129 00c2 00E0     		b	.L224
 3130              	.L234:
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3131              		.loc 1 767 0
 3132 00c4 0323     		movs	r3, #3
 3133              	.LVL264:
 3134              	.L224:
ARM GAS  /tmp/ccWyKvi9.s 			page 109


 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3135              		.loc 1 782 0
 3136 00c6 1846     		mov	r0, r3
 3137 00c8 02B0     		add	sp, sp, #8
 3138              	.LCFI25:
 3139              		.cfi_def_cfa_offset 24
 3140              		@ sp needed
 3141 00ca BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3142              		.cfi_endproc
 3143              	.LFE130:
 3145 00ce 00BF     		.section	.text.HAL_UART_Receive,"ax",%progbits
 3146              		.align	2
 3147              		.global	HAL_UART_Receive
 3148              		.thumb
 3149              		.thumb_func
 3151              	HAL_UART_Receive:
 3152              	.LFB131:
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 3153              		.loc 1 793 0
 3154              		.cfi_startproc
 3155              		@ args = 0, pretend = 0, frame = 0
 3156              		@ frame_needed = 0, uses_anonymous_args = 0
 3157              	.LVL265:
 3158 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3159              	.LCFI26:
 3160              		.cfi_def_cfa_offset 24
 3161              		.cfi_offset 4, -24
 3162              		.cfi_offset 5, -20
 3163              		.cfi_offset 6, -16
 3164              		.cfi_offset 7, -12
 3165              		.cfi_offset 8, -8
 3166              		.cfi_offset 14, -4
 3167 0004 82B0     		sub	sp, sp, #8
 3168              	.LCFI27:
 3169              		.cfi_def_cfa_offset 32
 3170 0006 0446     		mov	r4, r0
 3171 0008 1E46     		mov	r6, r3
 3172              	.LVL266:
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3173              		.loc 1 799 0
 3174 000a 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 3175              	.LVL267:
 3176 000e DBB2     		uxtb	r3, r3
 3177 0010 202B     		cmp	r3, #32
 3178 0012 6ED1     		bne	.L248
 3179 0014 0D46     		mov	r5, r1
 3180 0016 9046     		mov	r8, r2
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3181              		.loc 1 801 0
 3182 0018 0029     		cmp	r1, #0
 3183 001a 6CD0     		beq	.L249
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3184              		.loc 1 801 0 is_stmt 0 discriminator 1
 3185 001c 002A     		cmp	r2, #0
 3186 001e 6CD0     		beq	.L250
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3187              		.loc 1 807 0 is_stmt 1
ARM GAS  /tmp/ccWyKvi9.s 			page 110


 3188 0020 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3189 0024 012B     		cmp	r3, #1
 3190 0026 6AD0     		beq	.L251
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3191              		.loc 1 807 0 is_stmt 0 discriminator 2
 3192 0028 0123     		movs	r3, #1
 3193 002a 80F86830 		strb	r3, [r0, #104]
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 3194              		.loc 1 809 0 is_stmt 1 discriminator 2
 3195 002e 0023     		movs	r3, #0
 3196 0030 C366     		str	r3, [r0, #108]
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3197              		.loc 1 810 0 discriminator 2
 3198 0032 2223     		movs	r3, #34
 3199 0034 80F86A30 		strb	r3, [r0, #106]
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3200              		.loc 1 813 0 discriminator 2
 3201 0038 FFF7FEFF 		bl	HAL_GetTick
 3202              	.LVL268:
 3203 003c 0746     		mov	r7, r0
 3204              	.LVL269:
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 3205              		.loc 1 815 0 discriminator 2
 3206 003e A4F85880 		strh	r8, [r4, #88]	@ movhi
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3207              		.loc 1 816 0 discriminator 2
 3208 0042 A4F85A80 		strh	r8, [r4, #90]	@ movhi
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3209              		.loc 1 819 0 discriminator 2
 3210 0046 A368     		ldr	r3, [r4, #8]
 3211 0048 B3F5805F 		cmp	r3, #4096
 3212 004c 0AD1     		bne	.L238
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3213              		.loc 1 819 0 is_stmt 0 discriminator 1
 3214 004e 2369     		ldr	r3, [r4, #16]
 3215 0050 23B9     		cbnz	r3, .L239
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3216              		.loc 1 819 0 discriminator 3
 3217 0052 40F2FF13 		movw	r3, #511
 3218 0056 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3219 005a 1AE0     		b	.L240
 3220              	.L239:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3221              		.loc 1 819 0 discriminator 4
 3222 005c FF23     		movs	r3, #255
 3223 005e A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3224 0062 16E0     		b	.L240
 3225              	.L238:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3226              		.loc 1 819 0 discriminator 2
 3227 0064 4BB9     		cbnz	r3, .L241
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3228              		.loc 1 819 0 discriminator 5
 3229 0066 2369     		ldr	r3, [r4, #16]
 3230 0068 1BB9     		cbnz	r3, .L242
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3231              		.loc 1 819 0 discriminator 7
ARM GAS  /tmp/ccWyKvi9.s 			page 111


 3232 006a FF23     		movs	r3, #255
 3233 006c A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3234 0070 0FE0     		b	.L240
 3235              	.L242:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3236              		.loc 1 819 0 discriminator 8
 3237 0072 7F23     		movs	r3, #127
 3238 0074 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3239 0078 0BE0     		b	.L240
 3240              	.L241:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3241              		.loc 1 819 0 discriminator 6
 3242 007a B3F1805F 		cmp	r3, #268435456
 3243 007e 08D1     		bne	.L240
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3244              		.loc 1 819 0 discriminator 9
 3245 0080 2369     		ldr	r3, [r4, #16]
 3246 0082 1BB9     		cbnz	r3, .L243
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3247              		.loc 1 819 0 discriminator 10
 3248 0084 7F23     		movs	r3, #127
 3249 0086 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3250 008a 02E0     		b	.L240
 3251              	.L243:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3252              		.loc 1 819 0 discriminator 11
 3253 008c 3F23     		movs	r3, #63
 3254 008e A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3255              	.L240:
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3256              		.loc 1 820 0 is_stmt 1
 3257 0092 B4F85C80 		ldrh	r8, [r4, #92]
 3258              	.LVL270:
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3259              		.loc 1 823 0
 3260 0096 20E0     		b	.L244
 3261              	.LVL271:
 3262              	.L247:
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 3263              		.loc 1 825 0
 3264 0098 B4F85A30 		ldrh	r3, [r4, #90]
 3265 009c 013B     		subs	r3, r3, #1
 3266 009e 9BB2     		uxth	r3, r3
 3267 00a0 A4F85A30 		strh	r3, [r4, #90]	@ movhi
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3268              		.loc 1 826 0
 3269 00a4 0096     		str	r6, [sp]
 3270 00a6 2046     		mov	r0, r4
 3271 00a8 2021     		movs	r1, #32
 3272 00aa 0022     		movs	r2, #0
 3273 00ac 3B46     		mov	r3, r7
 3274 00ae FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3275              	.LVL272:
 3276 00b2 30BB     		cbnz	r0, .L252
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3277              		.loc 1 830 0
 3278 00b4 A368     		ldr	r3, [r4, #8]
ARM GAS  /tmp/ccWyKvi9.s 			page 112


 3279 00b6 B3F5805F 		cmp	r3, #4096
 3280 00ba 08D1     		bne	.L245
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3281              		.loc 1 830 0 is_stmt 0 discriminator 1
 3282 00bc 2369     		ldr	r3, [r4, #16]
 3283 00be 33B9     		cbnz	r3, .L245
 3284              	.LVL273:
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData +=2U;
 3285              		.loc 1 833 0 is_stmt 1
 3286 00c0 2368     		ldr	r3, [r4]
 3287 00c2 9B8C     		ldrh	r3, [r3, #36]
 3288 00c4 08EA0303 		and	r3, r8, r3
 3289 00c8 25F8023B 		strh	r3, [r5], #2	@ movhi
 3290              	.LVL274:
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3291              		.loc 1 834 0
 3292 00cc 05E0     		b	.L244
 3293              	.LVL275:
 3294              	.L245:
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3295              		.loc 1 838 0
 3296 00ce 2368     		ldr	r3, [r4]
 3297 00d0 9B8C     		ldrh	r3, [r3, #36]
 3298 00d2 08EA0303 		and	r3, r8, r3
 3299 00d6 2B70     		strb	r3, [r5]
 3300 00d8 0135     		adds	r5, r5, #1
 3301              	.LVL276:
 3302              	.L244:
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3303              		.loc 1 823 0
 3304 00da B4F85A30 		ldrh	r3, [r4, #90]
 3305 00de 9BB2     		uxth	r3, r3
 3306 00e0 002B     		cmp	r3, #0
 3307 00e2 D9D1     		bne	.L247
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3308              		.loc 1 843 0
 3309 00e4 2023     		movs	r3, #32
 3310 00e6 84F86A30 		strb	r3, [r4, #106]
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3311              		.loc 1 846 0
 3312 00ea 0020     		movs	r0, #0
 3313 00ec 84F86800 		strb	r0, [r4, #104]
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3314              		.loc 1 848 0
 3315 00f0 08E0     		b	.L237
 3316              	.LVL277:
 3317              	.L248:
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3318              		.loc 1 852 0
 3319 00f2 0220     		movs	r0, #2
 3320              	.LVL278:
 3321 00f4 06E0     		b	.L237
 3322              	.LVL279:
 3323              	.L249:
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3324              		.loc 1 803 0
 3325 00f6 0120     		movs	r0, #1
ARM GAS  /tmp/ccWyKvi9.s 			page 113


 3326              	.LVL280:
 3327 00f8 04E0     		b	.L237
 3328              	.LVL281:
 3329              	.L250:
 3330 00fa 0120     		movs	r0, #1
 3331              	.LVL282:
 3332 00fc 02E0     		b	.L237
 3333              	.LVL283:
 3334              	.L251:
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3335              		.loc 1 807 0
 3336 00fe 0220     		movs	r0, #2
 3337              	.LVL284:
 3338 0100 00E0     		b	.L237
 3339              	.LVL285:
 3340              	.L252:
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3341              		.loc 1 828 0
 3342 0102 0320     		movs	r0, #3
 3343              	.LVL286:
 3344              	.L237:
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3345              		.loc 1 854 0
 3346 0104 02B0     		add	sp, sp, #8
 3347              	.LCFI28:
 3348              		.cfi_def_cfa_offset 24
 3349              		@ sp needed
 3350 0106 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3351              		.cfi_endproc
 3352              	.LFE131:
 3354 010a 00BF     		.section	.text.UART_CheckIdleState,"ax",%progbits
 3355              		.align	2
 3356              		.global	UART_CheckIdleState
 3357              		.thumb
 3358              		.thumb_func
 3360              	UART_CheckIdleState:
 3361              	.LFB164:
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 3362              		.loc 1 2282 0
 3363              		.cfi_startproc
 3364              		@ args = 0, pretend = 0, frame = 0
 3365              		@ frame_needed = 0, uses_anonymous_args = 0
 3366              	.LVL287:
 3367 0000 30B5     		push	{r4, r5, lr}
 3368              	.LCFI29:
 3369              		.cfi_def_cfa_offset 12
 3370              		.cfi_offset 4, -12
 3371              		.cfi_offset 5, -8
 3372              		.cfi_offset 14, -4
 3373 0002 83B0     		sub	sp, sp, #12
 3374              	.LCFI30:
 3375              		.cfi_def_cfa_offset 24
 3376 0004 0446     		mov	r4, r0
 3377              	.LVL288:
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3378              		.loc 1 2286 0
 3379 0006 0023     		movs	r3, #0
ARM GAS  /tmp/ccWyKvi9.s 			page 114


 3380 0008 C366     		str	r3, [r0, #108]
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3381              		.loc 1 2289 0
 3382 000a FFF7FEFF 		bl	HAL_GetTick
 3383              	.LVL289:
 3384 000e 0546     		mov	r5, r0
 3385              	.LVL290:
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3386              		.loc 1 2292 0
 3387 0010 2368     		ldr	r3, [r4]
 3388 0012 1B68     		ldr	r3, [r3]
 3389 0014 13F0080F 		tst	r3, #8
 3390 0018 0AD0     		beq	.L255
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3391              		.loc 1 2295 0
 3392 001a 6FF07E43 		mvn	r3, #-33554432
 3393 001e 0093     		str	r3, [sp]
 3394 0020 2046     		mov	r0, r4
 3395              	.LVL291:
 3396 0022 4FF40011 		mov	r1, #2097152
 3397 0026 0022     		movs	r2, #0
 3398 0028 2B46     		mov	r3, r5
 3399 002a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3400              	.LVL292:
 3401 002e C0B9     		cbnz	r0, .L258
 3402              	.L255:
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3403              		.loc 1 2302 0
 3404 0030 2368     		ldr	r3, [r4]
 3405 0032 1B68     		ldr	r3, [r3]
 3406 0034 13F0040F 		tst	r3, #4
 3407 0038 0AD0     		beq	.L257
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3408              		.loc 1 2305 0
 3409 003a 6FF07E43 		mvn	r3, #-33554432
 3410 003e 0093     		str	r3, [sp]
 3411 0040 2046     		mov	r0, r4
 3412 0042 4FF48001 		mov	r1, #4194304
 3413 0046 0022     		movs	r2, #0
 3414 0048 2B46     		mov	r3, r5
 3415 004a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3416              	.LVL293:
 3417 004e 50B9     		cbnz	r0, .L259
 3418              	.L257:
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3419              		.loc 1 2313 0
 3420 0050 2023     		movs	r3, #32
 3421 0052 84F86930 		strb	r3, [r4, #105]
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3422              		.loc 1 2314 0
 3423 0056 84F86A30 		strb	r3, [r4, #106]
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3424              		.loc 1 2317 0
 3425 005a 0020     		movs	r0, #0
 3426 005c 84F86800 		strb	r0, [r4, #104]
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3427              		.loc 1 2319 0
ARM GAS  /tmp/ccWyKvi9.s 			page 115


 3428 0060 02E0     		b	.L256
 3429              	.L258:
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3430              		.loc 1 2298 0
 3431 0062 0320     		movs	r0, #3
 3432 0064 00E0     		b	.L256
 3433              	.L259:
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3434              		.loc 1 2308 0
 3435 0066 0320     		movs	r0, #3
 3436              	.L256:
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3437              		.loc 1 2320 0
 3438 0068 03B0     		add	sp, sp, #12
 3439              	.LCFI31:
 3440              		.cfi_def_cfa_offset 12
 3441              		@ sp needed
 3442 006a 30BD     		pop	{r4, r5, pc}
 3443              		.cfi_endproc
 3444              	.LFE164:
 3446              		.section	.text.HAL_UART_Init,"ax",%progbits
 3447              		.align	2
 3448              		.global	HAL_UART_Init
 3449              		.thumb
 3450              		.thumb_func
 3452              	HAL_UART_Init:
 3453              	.LFB123:
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3454              		.loc 1 295 0
 3455              		.cfi_startproc
 3456              		@ args = 0, pretend = 0, frame = 0
 3457              		@ frame_needed = 0, uses_anonymous_args = 0
 3458              	.LVL294:
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3459              		.loc 1 297 0
 3460 0000 80B3     		cbz	r0, .L265
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3461              		.loc 1 295 0
 3462 0002 10B5     		push	{r4, lr}
 3463              	.LCFI32:
 3464              		.cfi_def_cfa_offset 8
 3465              		.cfi_offset 4, -8
 3466              		.cfi_offset 14, -4
 3467 0004 0446     		mov	r4, r0
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3468              		.loc 1 313 0
 3469 0006 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3470 000a 13F0FF0F 		tst	r3, #255
 3471 000e 04D1     		bne	.L263
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3472              		.loc 1 316 0
 3473 0010 0023     		movs	r3, #0
 3474 0012 80F86830 		strb	r3, [r0, #104]
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3475              		.loc 1 319 0
 3476 0016 FFF7FEFF 		bl	HAL_UART_MspInit
 3477              	.LVL295:
ARM GAS  /tmp/ccWyKvi9.s 			page 116


 3478              	.L263:
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3479              		.loc 1 322 0
 3480 001a 2423     		movs	r3, #36
 3481 001c 84F86930 		strb	r3, [r4, #105]
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3482              		.loc 1 325 0
 3483 0020 2268     		ldr	r2, [r4]
 3484 0022 1368     		ldr	r3, [r2]
 3485 0024 23F00103 		bic	r3, r3, #1
 3486 0028 1360     		str	r3, [r2]
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3487              		.loc 1 328 0
 3488 002a 2046     		mov	r0, r4
 3489 002c FFF7FEFF 		bl	UART_SetConfig
 3490              	.LVL296:
 3491 0030 0128     		cmp	r0, #1
 3492 0032 19D0     		beq	.L262
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3493              		.loc 1 333 0
 3494 0034 636A     		ldr	r3, [r4, #36]
 3495 0036 13B1     		cbz	r3, .L264
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3496              		.loc 1 335 0
 3497 0038 2046     		mov	r0, r4
 3498 003a FFF7FEFF 		bl	UART_AdvFeatureConfig
 3499              	.LVL297:
 3500              	.L264:
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 3501              		.loc 1 341 0
 3502 003e 2268     		ldr	r2, [r4]
 3503 0040 5368     		ldr	r3, [r2, #4]
 3504 0042 23F49043 		bic	r3, r3, #18432
 3505 0046 5360     		str	r3, [r2, #4]
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3506              		.loc 1 342 0
 3507 0048 2268     		ldr	r2, [r4]
 3508 004a 9368     		ldr	r3, [r2, #8]
 3509 004c 23F02A03 		bic	r3, r3, #42
 3510 0050 9360     		str	r3, [r2, #8]
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3511              		.loc 1 345 0
 3512 0052 2268     		ldr	r2, [r4]
 3513 0054 1368     		ldr	r3, [r2]
 3514 0056 43F00103 		orr	r3, r3, #1
 3515 005a 1360     		str	r3, [r2]
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3516              		.loc 1 348 0
 3517 005c 2046     		mov	r0, r4
 3518 005e FFF7FEFF 		bl	UART_CheckIdleState
 3519              	.LVL298:
 3520 0062 10BD     		pop	{r4, pc}
 3521              	.LVL299:
 3522              	.L265:
 3523              	.LCFI33:
 3524              		.cfi_def_cfa_offset 0
 3525              		.cfi_restore 4
ARM GAS  /tmp/ccWyKvi9.s 			page 117


 3526              		.cfi_restore 14
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3527              		.loc 1 299 0
 3528 0064 0120     		movs	r0, #1
 3529              	.LVL300:
 3530 0066 7047     		bx	lr
 3531              	.LVL301:
 3532              	.L262:
 3533              	.LCFI34:
 3534              		.cfi_def_cfa_offset 8
 3535              		.cfi_offset 4, -8
 3536              		.cfi_offset 14, -4
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3537              		.loc 1 349 0
 3538 0068 10BD     		pop	{r4, pc}
 3539              		.cfi_endproc
 3540              	.LFE123:
 3542 006a 00BF     		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 3543              		.align	2
 3544              		.global	HAL_HalfDuplex_Init
 3545              		.thumb
 3546              		.thumb_func
 3548              	HAL_HalfDuplex_Init:
 3549              	.LFB124:
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3550              		.loc 1 358 0
 3551              		.cfi_startproc
 3552              		@ args = 0, pretend = 0, frame = 0
 3553              		@ frame_needed = 0, uses_anonymous_args = 0
 3554              	.LVL302:
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3555              		.loc 1 360 0
 3556 0000 0028     		cmp	r0, #0
 3557 0002 35D0     		beq	.L272
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3558              		.loc 1 358 0
 3559 0004 10B5     		push	{r4, lr}
 3560              	.LCFI35:
 3561              		.cfi_def_cfa_offset 8
 3562              		.cfi_offset 4, -8
 3563              		.cfi_offset 14, -4
 3564 0006 0446     		mov	r4, r0
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3565              		.loc 1 368 0
 3566 0008 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3567 000c 13F0FF0F 		tst	r3, #255
 3568 0010 04D1     		bne	.L270
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3569              		.loc 1 371 0
 3570 0012 0023     		movs	r3, #0
 3571 0014 80F86830 		strb	r3, [r0, #104]
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3572              		.loc 1 374 0
 3573 0018 FFF7FEFF 		bl	HAL_UART_MspInit
 3574              	.LVL303:
 3575              	.L270:
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccWyKvi9.s 			page 118


 3576              		.loc 1 377 0
 3577 001c 2423     		movs	r3, #36
 3578 001e 84F86930 		strb	r3, [r4, #105]
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3579              		.loc 1 380 0
 3580 0022 2268     		ldr	r2, [r4]
 3581 0024 1368     		ldr	r3, [r2]
 3582 0026 23F00103 		bic	r3, r3, #1
 3583 002a 1360     		str	r3, [r2]
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3584              		.loc 1 383 0
 3585 002c 2046     		mov	r0, r4
 3586 002e FFF7FEFF 		bl	UART_SetConfig
 3587              	.LVL304:
 3588 0032 0128     		cmp	r0, #1
 3589 0034 1ED0     		beq	.L269
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3590              		.loc 1 388 0
 3591 0036 636A     		ldr	r3, [r4, #36]
 3592 0038 13B1     		cbz	r3, .L271
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3593              		.loc 1 390 0
 3594 003a 2046     		mov	r0, r4
 3595 003c FFF7FEFF 		bl	UART_AdvFeatureConfig
 3596              	.LVL305:
 3597              	.L271:
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 3598              		.loc 1 396 0
 3599 0040 2268     		ldr	r2, [r4]
 3600 0042 5368     		ldr	r3, [r2, #4]
 3601 0044 23F49043 		bic	r3, r3, #18432
 3602 0048 5360     		str	r3, [r2, #4]
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3603              		.loc 1 397 0
 3604 004a 2268     		ldr	r2, [r4]
 3605 004c 9368     		ldr	r3, [r2, #8]
 3606 004e 23F02203 		bic	r3, r3, #34
 3607 0052 9360     		str	r3, [r2, #8]
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3608              		.loc 1 400 0
 3609 0054 2268     		ldr	r2, [r4]
 3610 0056 9368     		ldr	r3, [r2, #8]
 3611 0058 43F00803 		orr	r3, r3, #8
 3612 005c 9360     		str	r3, [r2, #8]
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3613              		.loc 1 403 0
 3614 005e 2268     		ldr	r2, [r4]
 3615 0060 1368     		ldr	r3, [r2]
 3616 0062 43F00103 		orr	r3, r3, #1
 3617 0066 1360     		str	r3, [r2]
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3618              		.loc 1 406 0
 3619 0068 2046     		mov	r0, r4
 3620 006a FFF7FEFF 		bl	UART_CheckIdleState
 3621              	.LVL306:
 3622 006e 10BD     		pop	{r4, pc}
 3623              	.LVL307:
ARM GAS  /tmp/ccWyKvi9.s 			page 119


 3624              	.L272:
 3625              	.LCFI36:
 3626              		.cfi_def_cfa_offset 0
 3627              		.cfi_restore 4
 3628              		.cfi_restore 14
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3629              		.loc 1 362 0
 3630 0070 0120     		movs	r0, #1
 3631              	.LVL308:
 3632 0072 7047     		bx	lr
 3633              	.LVL309:
 3634              	.L269:
 3635              	.LCFI37:
 3636              		.cfi_def_cfa_offset 8
 3637              		.cfi_offset 4, -8
 3638              		.cfi_offset 14, -4
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3639              		.loc 1 407 0
 3640 0074 10BD     		pop	{r4, pc}
 3641              		.cfi_endproc
 3642              	.LFE124:
 3644 0076 00BF     		.section	.text.HAL_LIN_Init,"ax",%progbits
 3645              		.align	2
 3646              		.global	HAL_LIN_Init
 3647              		.thumb
 3648              		.thumb_func
 3650              	HAL_LIN_Init:
 3651              	.LFB125:
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3652              		.loc 1 421 0
 3653              		.cfi_startproc
 3654              		@ args = 0, pretend = 0, frame = 0
 3655              		@ frame_needed = 0, uses_anonymous_args = 0
 3656              	.LVL310:
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3657              		.loc 1 423 0
 3658 0000 0028     		cmp	r0, #0
 3659 0002 43D0     		beq	.L279
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3660              		.loc 1 421 0
 3661 0004 38B5     		push	{r3, r4, r5, lr}
 3662              	.LCFI38:
 3663              		.cfi_def_cfa_offset 16
 3664              		.cfi_offset 3, -16
 3665              		.cfi_offset 4, -12
 3666              		.cfi_offset 5, -8
 3667              		.cfi_offset 14, -4
 3668 0006 0446     		mov	r4, r0
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3669              		.loc 1 434 0
 3670 0008 C369     		ldr	r3, [r0, #28]
 3671 000a B3F5004F 		cmp	r3, #32768
 3672 000e 3FD0     		beq	.L280
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3673              		.loc 1 439 0
 3674 0010 8368     		ldr	r3, [r0, #8]
 3675 0012 002B     		cmp	r3, #0
ARM GAS  /tmp/ccWyKvi9.s 			page 120


 3676 0014 3ED1     		bne	.L281
 3677 0016 0D46     		mov	r5, r1
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3678              		.loc 1 444 0
 3679 0018 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3680 001c 13F0FF0F 		tst	r3, #255
 3681 0020 04D1     		bne	.L277
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3682              		.loc 1 447 0
 3683 0022 0023     		movs	r3, #0
 3684 0024 80F86830 		strb	r3, [r0, #104]
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3685              		.loc 1 450 0
 3686 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 3687              	.LVL311:
 3688              	.L277:
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3689              		.loc 1 453 0
 3690 002c 2423     		movs	r3, #36
 3691 002e 84F86930 		strb	r3, [r4, #105]
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3692              		.loc 1 456 0
 3693 0032 2268     		ldr	r2, [r4]
 3694 0034 1368     		ldr	r3, [r2]
 3695 0036 23F00103 		bic	r3, r3, #1
 3696 003a 1360     		str	r3, [r2]
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3697              		.loc 1 459 0
 3698 003c 2046     		mov	r0, r4
 3699 003e FFF7FEFF 		bl	UART_SetConfig
 3700              	.LVL312:
 3701 0042 0128     		cmp	r0, #1
 3702 0044 27D0     		beq	.L276
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3703              		.loc 1 464 0
 3704 0046 636A     		ldr	r3, [r4, #36]
 3705 0048 13B1     		cbz	r3, .L278
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3706              		.loc 1 466 0
 3707 004a 2046     		mov	r0, r4
 3708 004c FFF7FEFF 		bl	UART_AdvFeatureConfig
 3709              	.LVL313:
 3710              	.L278:
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 3711              		.loc 1 472 0
 3712 0050 2268     		ldr	r2, [r4]
 3713 0052 5368     		ldr	r3, [r2, #4]
 3714 0054 23F40063 		bic	r3, r3, #2048
 3715 0058 5360     		str	r3, [r2, #4]
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3716              		.loc 1 473 0
 3717 005a 2268     		ldr	r2, [r4]
 3718 005c 9368     		ldr	r3, [r2, #8]
 3719 005e 23F02A03 		bic	r3, r3, #42
 3720 0062 9360     		str	r3, [r2, #8]
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3721              		.loc 1 476 0
ARM GAS  /tmp/ccWyKvi9.s 			page 121


 3722 0064 2268     		ldr	r2, [r4]
 3723 0066 5368     		ldr	r3, [r2, #4]
 3724 0068 43F48043 		orr	r3, r3, #16384
 3725 006c 5360     		str	r3, [r2, #4]
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3726              		.loc 1 479 0
 3727 006e 2368     		ldr	r3, [r4]
 3728 0070 5968     		ldr	r1, [r3, #4]
 3729 0072 21F02001 		bic	r1, r1, #32
 3730 0076 2943     		orrs	r1, r1, r5
 3731 0078 5960     		str	r1, [r3, #4]
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3732              		.loc 1 482 0
 3733 007a 2268     		ldr	r2, [r4]
 3734 007c 1368     		ldr	r3, [r2]
 3735 007e 43F00103 		orr	r3, r3, #1
 3736 0082 1360     		str	r3, [r2]
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3737              		.loc 1 485 0
 3738 0084 2046     		mov	r0, r4
 3739 0086 FFF7FEFF 		bl	UART_CheckIdleState
 3740              	.LVL314:
 3741 008a 38BD     		pop	{r3, r4, r5, pc}
 3742              	.LVL315:
 3743              	.L279:
 3744              	.LCFI39:
 3745              		.cfi_def_cfa_offset 0
 3746              		.cfi_restore 3
 3747              		.cfi_restore 4
 3748              		.cfi_restore 5
 3749              		.cfi_restore 14
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3750              		.loc 1 425 0
 3751 008c 0120     		movs	r0, #1
 3752              	.LVL316:
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3753              		.loc 1 486 0
 3754 008e 7047     		bx	lr
 3755              	.LVL317:
 3756              	.L280:
 3757              	.LCFI40:
 3758              		.cfi_def_cfa_offset 16
 3759              		.cfi_offset 3, -16
 3760              		.cfi_offset 4, -12
 3761              		.cfi_offset 5, -8
 3762              		.cfi_offset 14, -4
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3763              		.loc 1 436 0
 3764 0090 0120     		movs	r0, #1
 3765              	.LVL318:
 3766 0092 38BD     		pop	{r3, r4, r5, pc}
 3767              	.LVL319:
 3768              	.L281:
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3769              		.loc 1 441 0
 3770 0094 0120     		movs	r0, #1
 3771              	.LVL320:
ARM GAS  /tmp/ccWyKvi9.s 			page 122


 3772              	.L276:
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3773              		.loc 1 486 0
 3774 0096 38BD     		pop	{r3, r4, r5, pc}
 3775              		.cfi_endproc
 3776              	.LFE125:
 3778              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 3779              		.align	2
 3780              		.global	HAL_MultiProcessor_Init
 3781              		.thumb
 3782              		.thumb_func
 3784              	HAL_MultiProcessor_Init:
 3785              	.LFB126:
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3786              		.loc 1 508 0
 3787              		.cfi_startproc
 3788              		@ args = 0, pretend = 0, frame = 0
 3789              		@ frame_needed = 0, uses_anonymous_args = 0
 3790              	.LVL321:
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3791              		.loc 1 510 0
 3792 0000 0028     		cmp	r0, #0
 3793 0002 42D0     		beq	.L288
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3794              		.loc 1 508 0
 3795 0004 70B5     		push	{r4, r5, r6, lr}
 3796              	.LCFI41:
 3797              		.cfi_def_cfa_offset 16
 3798              		.cfi_offset 4, -16
 3799              		.cfi_offset 5, -12
 3800              		.cfi_offset 6, -8
 3801              		.cfi_offset 14, -4
 3802 0006 0446     		mov	r4, r0
 3803 0008 1546     		mov	r5, r2
 3804 000a 0E46     		mov	r6, r1
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3805              		.loc 1 518 0
 3806 000c 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3807 0010 13F0FF0F 		tst	r3, #255
 3808 0014 04D1     		bne	.L285
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3809              		.loc 1 521 0
 3810 0016 0023     		movs	r3, #0
 3811 0018 80F86830 		strb	r3, [r0, #104]
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3812              		.loc 1 524 0
 3813 001c FFF7FEFF 		bl	HAL_UART_MspInit
 3814              	.LVL322:
 3815              	.L285:
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3816              		.loc 1 527 0
 3817 0020 2423     		movs	r3, #36
 3818 0022 84F86930 		strb	r3, [r4, #105]
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3819              		.loc 1 530 0
 3820 0026 2268     		ldr	r2, [r4]
 3821 0028 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccWyKvi9.s 			page 123


 3822 002a 23F00103 		bic	r3, r3, #1
 3823 002e 1360     		str	r3, [r2]
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3824              		.loc 1 533 0
 3825 0030 2046     		mov	r0, r4
 3826 0032 FFF7FEFF 		bl	UART_SetConfig
 3827              	.LVL323:
 3828 0036 0128     		cmp	r0, #1
 3829 0038 29D0     		beq	.L284
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3830              		.loc 1 538 0
 3831 003a 636A     		ldr	r3, [r4, #36]
 3832 003c 13B1     		cbz	r3, .L286
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3833              		.loc 1 540 0
 3834 003e 2046     		mov	r0, r4
 3835 0040 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3836              	.LVL324:
 3837              	.L286:
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 3838              		.loc 1 546 0
 3839 0044 2268     		ldr	r2, [r4]
 3840 0046 5368     		ldr	r3, [r2, #4]
 3841 0048 23F49043 		bic	r3, r3, #18432
 3842 004c 5360     		str	r3, [r2, #4]
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3843              		.loc 1 547 0
 3844 004e 2268     		ldr	r2, [r4]
 3845 0050 9368     		ldr	r3, [r2, #8]
 3846 0052 23F02A03 		bic	r3, r3, #42
 3847 0056 9360     		str	r3, [r2, #8]
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3848              		.loc 1 549 0
 3849 0058 B5F5006F 		cmp	r5, #2048
 3850 005c 06D1     		bne	.L287
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3851              		.loc 1 552 0
 3852 005e 2368     		ldr	r3, [r4]
 3853 0060 5968     		ldr	r1, [r3, #4]
 3854 0062 21F07F41 		bic	r1, r1, #-16777216
 3855 0066 41EA0666 		orr	r6, r1, r6, lsl #24
 3856 006a 5E60     		str	r6, [r3, #4]
 3857              	.L287:
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3858              		.loc 1 556 0
 3859 006c 2368     		ldr	r3, [r4]
 3860 006e 1A68     		ldr	r2, [r3]
 3861 0070 22F40062 		bic	r2, r2, #2048
 3862 0074 1543     		orrs	r5, r5, r2
 3863              	.LVL325:
 3864 0076 1D60     		str	r5, [r3]
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3865              		.loc 1 559 0
 3866 0078 2268     		ldr	r2, [r4]
 3867 007a 1368     		ldr	r3, [r2]
 3868 007c 43F00103 		orr	r3, r3, #1
 3869 0080 1360     		str	r3, [r2]
ARM GAS  /tmp/ccWyKvi9.s 			page 124


 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3870              		.loc 1 562 0
 3871 0082 2046     		mov	r0, r4
 3872 0084 FFF7FEFF 		bl	UART_CheckIdleState
 3873              	.LVL326:
 3874 0088 70BD     		pop	{r4, r5, r6, pc}
 3875              	.LVL327:
 3876              	.L288:
 3877              	.LCFI42:
 3878              		.cfi_def_cfa_offset 0
 3879              		.cfi_restore 4
 3880              		.cfi_restore 5
 3881              		.cfi_restore 6
 3882              		.cfi_restore 14
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3883              		.loc 1 512 0
 3884 008a 0120     		movs	r0, #1
 3885              	.LVL328:
 3886 008c 7047     		bx	lr
 3887              	.LVL329:
 3888              	.L284:
 3889              	.LCFI43:
 3890              		.cfi_def_cfa_offset 16
 3891              		.cfi_offset 4, -16
 3892              		.cfi_offset 5, -12
 3893              		.cfi_offset 6, -8
 3894              		.cfi_offset 14, -4
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3895              		.loc 1 563 0
 3896 008e 70BD     		pop	{r4, r5, r6, pc}
 3897              		.cfi_endproc
 3898              	.LFE126:
 3900              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 3901              		.align	2
 3902              		.global	HAL_MultiProcessor_EnableMuteMode
 3903              		.thumb
 3904              		.thumb_func
 3906              	HAL_MultiProcessor_EnableMuteMode:
 3907              	.LFB154:
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 3908              		.loc 1 1913 0
 3909              		.cfi_startproc
 3910              		@ args = 0, pretend = 0, frame = 0
 3911              		@ frame_needed = 0, uses_anonymous_args = 0
 3912              	.LVL330:
 3913 0000 08B5     		push	{r3, lr}
 3914              	.LCFI44:
 3915              		.cfi_def_cfa_offset 8
 3916              		.cfi_offset 3, -8
 3917              		.cfi_offset 14, -4
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3918              		.loc 1 1915 0
 3919 0002 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3920 0006 012B     		cmp	r3, #1
 3921 0008 10D0     		beq	.L293
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3922              		.loc 1 1915 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccWyKvi9.s 			page 125


 3923 000a 0123     		movs	r3, #1
 3924 000c 80F86830 		strb	r3, [r0, #104]
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3925              		.loc 1 1917 0 is_stmt 1 discriminator 2
 3926 0010 2423     		movs	r3, #36
 3927 0012 80F86930 		strb	r3, [r0, #105]
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3928              		.loc 1 1920 0 discriminator 2
 3929 0016 0268     		ldr	r2, [r0]
 3930 0018 1368     		ldr	r3, [r2]
 3931 001a 43F40053 		orr	r3, r3, #8192
 3932 001e 1360     		str	r3, [r2]
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3933              		.loc 1 1922 0 discriminator 2
 3934 0020 2023     		movs	r3, #32
 3935 0022 80F86930 		strb	r3, [r0, #105]
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3936              		.loc 1 1924 0 discriminator 2
 3937 0026 FFF7FEFF 		bl	UART_CheckIdleState
 3938              	.LVL331:
 3939 002a 08BD     		pop	{r3, pc}
 3940              	.LVL332:
 3941              	.L293:
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3942              		.loc 1 1915 0
 3943 002c 0220     		movs	r0, #2
 3944              	.LVL333:
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3945              		.loc 1 1925 0
 3946 002e 08BD     		pop	{r3, pc}
 3947              		.cfi_endproc
 3948              	.LFE154:
 3950              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 3951              		.align	2
 3952              		.global	HAL_MultiProcessor_DisableMuteMode
 3953              		.thumb
 3954              		.thumb_func
 3956              	HAL_MultiProcessor_DisableMuteMode:
 3957              	.LFB155:
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 3958              		.loc 1 1934 0
 3959              		.cfi_startproc
 3960              		@ args = 0, pretend = 0, frame = 0
 3961              		@ frame_needed = 0, uses_anonymous_args = 0
 3962              	.LVL334:
 3963 0000 08B5     		push	{r3, lr}
 3964              	.LCFI45:
 3965              		.cfi_def_cfa_offset 8
 3966              		.cfi_offset 3, -8
 3967              		.cfi_offset 14, -4
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3968              		.loc 1 1936 0
 3969 0002 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3970 0006 012B     		cmp	r3, #1
 3971 0008 10D0     		beq	.L297
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3972              		.loc 1 1936 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccWyKvi9.s 			page 126


 3973 000a 0123     		movs	r3, #1
 3974 000c 80F86830 		strb	r3, [r0, #104]
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3975              		.loc 1 1938 0 is_stmt 1 discriminator 2
 3976 0010 2423     		movs	r3, #36
 3977 0012 80F86930 		strb	r3, [r0, #105]
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3978              		.loc 1 1941 0 discriminator 2
 3979 0016 0268     		ldr	r2, [r0]
 3980 0018 1368     		ldr	r3, [r2]
 3981 001a 23F40053 		bic	r3, r3, #8192
 3982 001e 1360     		str	r3, [r2]
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3983              		.loc 1 1943 0 discriminator 2
 3984 0020 2023     		movs	r3, #32
 3985 0022 80F86930 		strb	r3, [r0, #105]
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3986              		.loc 1 1945 0 discriminator 2
 3987 0026 FFF7FEFF 		bl	UART_CheckIdleState
 3988              	.LVL335:
 3989 002a 08BD     		pop	{r3, pc}
 3990              	.LVL336:
 3991              	.L297:
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3992              		.loc 1 1936 0
 3993 002c 0220     		movs	r0, #2
 3994              	.LVL337:
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3995              		.loc 1 1946 0
 3996 002e 08BD     		pop	{r3, pc}
 3997              		.cfi_endproc
 3998              	.LFE155:
 4000              		.section	.text.UART_Transmit_IT,"ax",%progbits
 4001              		.align	2
 4002              		.global	UART_Transmit_IT
 4003              		.thumb
 4004              		.thumb_func
 4006              	UART_Transmit_IT:
 4007              	.LFB178:
2642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Send an amount of data in interrupt mode.
2646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4008              		.loc 1 2652 0
 4009              		.cfi_startproc
 4010              		@ args = 0, pretend = 0, frame = 0
 4011              		@ frame_needed = 0, uses_anonymous_args = 0
 4012              		@ link register save eliminated.
 4013              	.LVL338:
2653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
ARM GAS  /tmp/ccWyKvi9.s 			page 127


2654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 4014              		.loc 1 2656 0
 4015 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 4016 0004 DBB2     		uxtb	r3, r3
 4017 0006 212B     		cmp	r3, #33
 4018 0008 2DD1     		bne	.L304
2657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
 4019              		.loc 1 2658 0
 4020 000a B0F85230 		ldrh	r3, [r0, #82]
 4021 000e 9BB2     		uxth	r3, r3
 4022 0010 5BB9     		cbnz	r3, .L301
2659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 4023              		.loc 1 2661 0
 4024 0012 0268     		ldr	r2, [r0]
 4025 0014 1368     		ldr	r3, [r2]
 4026 0016 23F08003 		bic	r3, r3, #128
 4027 001a 1360     		str	r3, [r2]
2662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4028              		.loc 1 2664 0
 4029 001c 0268     		ldr	r2, [r0]
 4030 001e 1368     		ldr	r3, [r2]
 4031 0020 43F04003 		orr	r3, r3, #64
 4032 0024 1360     		str	r3, [r2]
2665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
 4033              		.loc 1 2666 0
 4034 0026 0020     		movs	r0, #0
 4035              	.LVL339:
 4036 0028 7047     		bx	lr
 4037              	.LVL340:
 4038              	.L301:
2667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 4039              		.loc 1 2670 0
 4040 002a 8368     		ldr	r3, [r0, #8]
 4041 002c B3F5805F 		cmp	r3, #4096
 4042 0030 0BD1     		bne	.L302
 4043              		.loc 1 2670 0 is_stmt 0 discriminator 1
 4044 0032 0369     		ldr	r3, [r0, #16]
 4045 0034 4BB9     		cbnz	r3, .L302
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
 4046              		.loc 1 2672 0 is_stmt 1
 4047 0036 C36C     		ldr	r3, [r0, #76]
 4048              	.LVL341:
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 4049              		.loc 1 2673 0
 4050 0038 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccWyKvi9.s 			page 128


 4051 003a 1B88     		ldrh	r3, [r3]
 4052              	.LVL342:
 4053 003c C3F30803 		ubfx	r3, r3, #0, #9
 4054 0040 1385     		strh	r3, [r2, #40]	@ movhi
 4055              	.LVL343:
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 4056              		.loc 1 2674 0
 4057 0042 C36C     		ldr	r3, [r0, #76]
 4058 0044 0233     		adds	r3, r3, #2
 4059 0046 C364     		str	r3, [r0, #76]
 4060 0048 05E0     		b	.L303
 4061              	.L302:
2675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
2677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
 4062              		.loc 1 2678 0
 4063 004a 0268     		ldr	r2, [r0]
 4064 004c C36C     		ldr	r3, [r0, #76]
 4065 004e 591C     		adds	r1, r3, #1
 4066 0050 C164     		str	r1, [r0, #76]
 4067 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4068 0054 1385     		strh	r3, [r2, #40]	@ movhi
 4069              	.L303:
2679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 4070              		.loc 1 2680 0
 4071 0056 B0F85230 		ldrh	r3, [r0, #82]
 4072 005a 013B     		subs	r3, r3, #1
 4073 005c 9BB2     		uxth	r3, r3
 4074 005e A0F85230 		strh	r3, [r0, #82]	@ movhi
2681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
 4075              		.loc 1 2682 0
 4076 0062 0020     		movs	r0, #0
 4077              	.LVL344:
 4078 0064 7047     		bx	lr
 4079              	.LVL345:
 4080              	.L304:
2683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 4081              		.loc 1 2687 0
 4082 0066 0220     		movs	r0, #2
 4083              	.LVL346:
2688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4084              		.loc 1 2689 0
 4085 0068 7047     		bx	lr
 4086              		.cfi_endproc
 4087              	.LFE178:
 4089 006a 00BF     		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 4090              		.align	2
 4091              		.global	UART_EndTransmit_IT
 4092              		.thumb
ARM GAS  /tmp/ccWyKvi9.s 			page 129


 4093              		.thumb_func
 4095              	UART_EndTransmit_IT:
 4096              	.LFB179:
2690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART module.
2695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4097              		.loc 1 2698 0
 4098              		.cfi_startproc
 4099              		@ args = 0, pretend = 0, frame = 0
 4100              		@ frame_needed = 0, uses_anonymous_args = 0
 4101              	.LVL347:
 4102 0000 08B5     		push	{r3, lr}
 4103              	.LCFI46:
 4104              		.cfi_def_cfa_offset 8
 4105              		.cfi_offset 3, -8
 4106              		.cfi_offset 14, -4
2699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4107              		.loc 1 2700 0
 4108 0002 0168     		ldr	r1, [r0]
 4109 0004 0B68     		ldr	r3, [r1]
 4110 0006 23F04003 		bic	r3, r3, #64
 4111 000a 0B60     		str	r3, [r1]
2701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4112              		.loc 1 2703 0
 4113 000c 2023     		movs	r3, #32
 4114 000e 80F86930 		strb	r3, [r0, #105]
2704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 4115              		.loc 1 2705 0
 4116 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 4117              	.LVL348:
2706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4118              		.loc 1 2708 0
 4119 0016 0020     		movs	r0, #0
 4120 0018 08BD     		pop	{r3, pc}
 4121              		.cfi_endproc
 4122              	.LFE179:
 4124 001a 00BF     		.section	.text.UART_Receive_IT,"ax",%progbits
 4125              		.align	2
 4126              		.global	UART_Receive_IT
 4127              		.thumb
 4128              		.thumb_func
 4130              	UART_Receive_IT:
 4131              	.LFB180:
2709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
ARM GAS  /tmp/ccWyKvi9.s 			page 130


2711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Receive an amount of data in interrupt mode.
2712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
2714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4132              		.loc 1 2718 0
 4133              		.cfi_startproc
 4134              		@ args = 0, pretend = 0, frame = 0
 4135              		@ frame_needed = 0, uses_anonymous_args = 0
 4136              	.LVL349:
2719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 4137              		.loc 1 2720 0
 4138 0000 B0F85C20 		ldrh	r2, [r0, #92]
 4139              	.LVL350:
2721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhdata;
2722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 4140              		.loc 1 2724 0
 4141 0004 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 4142 0008 DBB2     		uxtb	r3, r3
 4143 000a 222B     		cmp	r3, #34
 4144 000c 2DD1     		bne	.L308
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 4145              		.loc 1 2718 0
 4146 000e 10B5     		push	{r4, lr}
 4147              	.LCFI47:
 4148              		.cfi_def_cfa_offset 8
 4149              		.cfi_offset 4, -8
 4150              		.cfi_offset 14, -4
2725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 4151              		.loc 1 2726 0
 4152 0010 0368     		ldr	r3, [r0]
 4153 0012 9B8C     		ldrh	r3, [r3, #36]
 4154 0014 9BB2     		uxth	r3, r3
 4155              	.LVL351:
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 4156              		.loc 1 2727 0
 4157 0016 8168     		ldr	r1, [r0, #8]
 4158 0018 B1F5805F 		cmp	r1, #4096
 4159 001c 08D1     		bne	.L309
 4160              		.loc 1 2727 0 is_stmt 0 discriminator 1
 4161 001e 0169     		ldr	r1, [r0, #16]
 4162 0020 31B9     		cbnz	r1, .L309
2728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
 4163              		.loc 1 2729 0 is_stmt 1
 4164 0022 416D     		ldr	r1, [r0, #84]
 4165              	.LVL352:
2730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 4166              		.loc 1 2730 0
 4167 0024 1A40     		ands	r2, r2, r3
ARM GAS  /tmp/ccWyKvi9.s 			page 131


 4168              	.LVL353:
 4169 0026 0A80     		strh	r2, [r1]	@ movhi
 4170              	.LVL354:
2731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
 4171              		.loc 1 2731 0
 4172 0028 436D     		ldr	r3, [r0, #84]
 4173              	.LVL355:
 4174 002a 0233     		adds	r3, r3, #2
 4175 002c 4365     		str	r3, [r0, #84]
 4176 002e 04E0     		b	.L310
 4177              	.LVL356:
 4178              	.L309:
2732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
 4179              		.loc 1 2735 0
 4180 0030 416D     		ldr	r1, [r0, #84]
 4181 0032 4C1C     		adds	r4, r1, #1
 4182 0034 4465     		str	r4, [r0, #84]
 4183 0036 1A40     		ands	r2, r2, r3
 4184              	.LVL357:
 4185 0038 0A70     		strb	r2, [r1]
 4186              	.LVL358:
 4187              	.L310:
2736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
 4188              		.loc 1 2738 0
 4189 003a B0F85A30 		ldrh	r3, [r0, #90]
 4190 003e 013B     		subs	r3, r3, #1
 4191 0040 9BB2     		uxth	r3, r3
 4192 0042 A0F85A30 		strh	r3, [r0, #90]	@ movhi
 4193 0046 BBB9     		cbnz	r3, .L312
2739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4194              		.loc 1 2741 0
 4195 0048 0268     		ldr	r2, [r0]
 4196 004a 1368     		ldr	r3, [r2]
 4197 004c 23F49073 		bic	r3, r3, #288
 4198 0050 1360     		str	r3, [r2]
2742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4199              		.loc 1 2744 0
 4200 0052 0268     		ldr	r2, [r0]
 4201 0054 9368     		ldr	r3, [r2, #8]
 4202 0056 23F00103 		bic	r3, r3, #1
 4203 005a 9360     		str	r3, [r2, #8]
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 4204              		.loc 1 2747 0
 4205 005c 2023     		movs	r3, #32
 4206 005e 80F86A30 		strb	r3, [r0, #106]
2748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccWyKvi9.s 			page 132


2749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 4207              		.loc 1 2749 0
 4208 0062 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 4209              	.LVL359:
2750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
 4210              		.loc 1 2751 0
 4211 0066 0020     		movs	r0, #0
 4212 0068 10BD     		pop	{r4, pc}
 4213              	.LVL360:
 4214              	.L308:
 4215              	.LCFI48:
 4216              		.cfi_def_cfa_offset 0
 4217              		.cfi_restore 4
 4218              		.cfi_restore 14
2752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
2755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
2759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4219              		.loc 1 2759 0
 4220 006a 0268     		ldr	r2, [r0]
 4221              	.LVL361:
 4222 006c 9369     		ldr	r3, [r2, #24]
 4223 006e 43F00803 		orr	r3, r3, #8
 4224 0072 9361     		str	r3, [r2, #24]
 4225              	.LVL362:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 4226              		.loc 1 2761 0
 4227 0074 0220     		movs	r0, #2
 4228              	.LVL363:
2762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4229              		.loc 1 2763 0
 4230 0076 7047     		bx	lr
 4231              	.LVL364:
 4232              	.L312:
 4233              	.LCFI49:
 4234              		.cfi_def_cfa_offset 8
 4235              		.cfi_offset 4, -8
 4236              		.cfi_offset 14, -4
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4237              		.loc 1 2754 0
 4238 0078 0020     		movs	r0, #0
 4239              	.LVL365:
 4240              		.loc 1 2763 0
 4241 007a 10BD     		pop	{r4, pc}
 4242              		.cfi_endproc
 4243              	.LFE180:
 4245              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 4246              		.align	2
 4247              		.global	HAL_UART_IRQHandler
 4248              		.thumb
ARM GAS  /tmp/ccWyKvi9.s 			page 133


 4249              		.thumb_func
 4251              	HAL_UART_IRQHandler:
 4252              	.LFB145:
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 4253              		.loc 1 1617 0
 4254              		.cfi_startproc
 4255              		@ args = 0, pretend = 0, frame = 0
 4256              		@ frame_needed = 0, uses_anonymous_args = 0
 4257              	.LVL366:
 4258 0000 38B5     		push	{r3, r4, r5, lr}
 4259              	.LCFI50:
 4260              		.cfi_def_cfa_offset 16
 4261              		.cfi_offset 3, -16
 4262              		.cfi_offset 4, -12
 4263              		.cfi_offset 5, -8
 4264              		.cfi_offset 14, -4
 4265 0002 0446     		mov	r4, r0
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 4266              		.loc 1 1618 0
 4267 0004 0268     		ldr	r2, [r0]
 4268 0006 D369     		ldr	r3, [r2, #28]
 4269              	.LVL367:
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr3its;
 4270              		.loc 1 1619 0
 4271 0008 1168     		ldr	r1, [r2]
 4272              	.LVL368:
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4273              		.loc 1 1625 0
 4274 000a 13F00F05 		ands	r5, r3, #15
 4275              	.LVL369:
 4276 000e 08D1     		bne	.L315
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4277              		.loc 1 1628 0
 4278 0010 13F0200F 		tst	r3, #32
 4279 0014 05D0     		beq	.L315
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4280              		.loc 1 1628 0 is_stmt 0 discriminator 1
 4281 0016 11F0200F 		tst	r1, #32
 4282 001a 02D0     		beq	.L315
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
 4283              		.loc 1 1630 0 is_stmt 1
 4284 001c FFF7FEFF 		bl	UART_Receive_IT
 4285              	.LVL370:
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4286              		.loc 1 1631 0
 4287 0020 38BD     		pop	{r3, r4, r5, pc}
 4288              	.LVL371:
 4289              	.L315:
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(   (errorflags != RESET)
 4290              		.loc 1 1636 0
 4291 0022 9068     		ldr	r0, [r2, #8]
 4292              	.LVL372:
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 4293              		.loc 1 1637 0
 4294 0024 002D     		cmp	r5, #0
 4295 0026 6FD0     		beq	.L317
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
ARM GAS  /tmp/ccWyKvi9.s 			page 134


 4296              		.loc 1 1638 0
 4297 0028 10F00105 		ands	r5, r0, #1
 4298              	.LVL373:
 4299 002c 02D1     		bne	.L318
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4300              		.loc 1 1639 0
 4301 002e 11F4907F 		tst	r1, #288
 4302 0032 69D0     		beq	.L317
 4303              	.L318:
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4304              		.loc 1 1642 0
 4305 0034 13F0010F 		tst	r3, #1
 4306 0038 07D0     		beq	.L319
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4307              		.loc 1 1642 0 is_stmt 0 discriminator 1
 4308 003a 11F4807F 		tst	r1, #256
 4309 003e 04D0     		beq	.L319
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4310              		.loc 1 1644 0 is_stmt 1
 4311 0040 0120     		movs	r0, #1
 4312              	.LVL374:
 4313 0042 1062     		str	r0, [r2, #32]
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4314              		.loc 1 1646 0
 4315 0044 E26E     		ldr	r2, [r4, #108]
 4316 0046 0243     		orrs	r2, r2, r0
 4317 0048 E266     		str	r2, [r4, #108]
 4318              	.L319:
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4319              		.loc 1 1650 0
 4320 004a 13F0020F 		tst	r3, #2
 4321 004e 07D0     		beq	.L320
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4322              		.loc 1 1650 0 is_stmt 0 discriminator 1
 4323 0050 35B1     		cbz	r5, .L320
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4324              		.loc 1 1652 0 is_stmt 1
 4325 0052 2268     		ldr	r2, [r4]
 4326 0054 0220     		movs	r0, #2
 4327 0056 1062     		str	r0, [r2, #32]
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4328              		.loc 1 1654 0
 4329 0058 E26E     		ldr	r2, [r4, #108]
 4330 005a 42F00402 		orr	r2, r2, #4
 4331 005e E266     		str	r2, [r4, #108]
 4332              	.L320:
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4333              		.loc 1 1658 0
 4334 0060 13F0040F 		tst	r3, #4
 4335 0064 07D0     		beq	.L321
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4336              		.loc 1 1658 0 is_stmt 0 discriminator 1
 4337 0066 35B1     		cbz	r5, .L321
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4338              		.loc 1 1660 0 is_stmt 1
 4339 0068 2268     		ldr	r2, [r4]
 4340 006a 0420     		movs	r0, #4
ARM GAS  /tmp/ccWyKvi9.s 			page 135


 4341 006c 1062     		str	r0, [r2, #32]
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4342              		.loc 1 1662 0
 4343 006e E26E     		ldr	r2, [r4, #108]
 4344 0070 42F00202 		orr	r2, r2, #2
 4345 0074 E266     		str	r2, [r4, #108]
 4346              	.L321:
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4347              		.loc 1 1666 0
 4348 0076 13F0080F 		tst	r3, #8
 4349 007a 09D0     		beq	.L322
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4350              		.loc 1 1666 0 is_stmt 0 discriminator 1
 4351 007c 11F0200F 		tst	r1, #32
 4352 0080 00D1     		bne	.L323
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4353              		.loc 1 1667 0 is_stmt 1
 4354 0082 2DB1     		cbz	r5, .L322
 4355              	.L323:
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4356              		.loc 1 1669 0
 4357 0084 2268     		ldr	r2, [r4]
 4358 0086 0820     		movs	r0, #8
 4359 0088 1062     		str	r0, [r2, #32]
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4360              		.loc 1 1671 0
 4361 008a E26E     		ldr	r2, [r4, #108]
 4362 008c 0243     		orrs	r2, r2, r0
 4363 008e E266     		str	r2, [r4, #108]
 4364              	.L322:
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4365              		.loc 1 1675 0
 4366 0090 E26E     		ldr	r2, [r4, #108]
 4367 0092 002A     		cmp	r2, #0
 4368 0094 5DD0     		beq	.L314
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4369              		.loc 1 1678 0
 4370 0096 13F0200F 		tst	r3, #32
 4371 009a 05D0     		beq	.L324
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4372              		.loc 1 1678 0 is_stmt 0 discriminator 1
 4373 009c 11F0200F 		tst	r1, #32
 4374 00a0 02D0     		beq	.L324
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 4375              		.loc 1 1680 0 is_stmt 1
 4376 00a2 2046     		mov	r0, r4
 4377 00a4 FFF7FEFF 		bl	UART_Receive_IT
 4378              	.LVL375:
 4379              	.L324:
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 4380              		.loc 1 1685 0
 4381 00a8 E36E     		ldr	r3, [r4, #108]
 4382 00aa 13F0080F 		tst	r3, #8
 4383 00ae 04D1     		bne	.L325
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {  
 4384              		.loc 1 1686 0 discriminator 1
 4385 00b0 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccWyKvi9.s 			page 136


 4386 00b2 9B68     		ldr	r3, [r3, #8]
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 4387              		.loc 1 1685 0 discriminator 1
 4388 00b4 13F0400F 		tst	r3, #64
 4389 00b8 20D0     		beq	.L326
 4390              	.L325:
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4391              		.loc 1 1691 0
 4392 00ba 2046     		mov	r0, r4
 4393 00bc FFF7FEFF 		bl	UART_EndRxTransfer
 4394              	.LVL376:
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 4395              		.loc 1 1694 0
 4396 00c0 2368     		ldr	r3, [r4]
 4397 00c2 9A68     		ldr	r2, [r3, #8]
 4398 00c4 12F0400F 		tst	r2, #64
 4399 00c8 14D0     		beq	.L327
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4400              		.loc 1 1696 0
 4401 00ca 9A68     		ldr	r2, [r3, #8]
 4402 00cc 22F04002 		bic	r2, r2, #64
 4403 00d0 9A60     		str	r2, [r3, #8]
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
 4404              		.loc 1 1699 0
 4405 00d2 636E     		ldr	r3, [r4, #100]
 4406 00d4 53B1     		cbz	r3, .L328
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4407              		.loc 1 1703 0
 4408 00d6 1F4A     		ldr	r2, .L332
 4409 00d8 5A63     		str	r2, [r3, #52]
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             {
 4410              		.loc 1 1706 0
 4411 00da 606E     		ldr	r0, [r4, #100]
 4412 00dc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4413              	.LVL377:
 4414 00e0 0028     		cmp	r0, #0
 4415 00e2 36D0     		beq	.L314
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
 4416              		.loc 1 1709 0
 4417 00e4 606E     		ldr	r0, [r4, #100]
 4418 00e6 436B     		ldr	r3, [r0, #52]
 4419 00e8 9847     		blx	r3
 4420              	.LVL378:
 4421 00ea 38BD     		pop	{r3, r4, r5, pc}
 4422              	.LVL379:
 4423              	.L328:
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
 4424              		.loc 1 1715 0
 4425 00ec 2046     		mov	r0, r4
 4426 00ee FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4427              	.LVL380:
 4428 00f2 38BD     		pop	{r3, r4, r5, pc}
 4429              	.LVL381:
 4430              	.L327:
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 4431              		.loc 1 1721 0
 4432 00f4 2046     		mov	r0, r4
ARM GAS  /tmp/ccWyKvi9.s 			page 137


 4433 00f6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4434              	.LVL382:
 4435 00fa 38BD     		pop	{r3, r4, r5, pc}
 4436              	.LVL383:
 4437              	.L326:
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 4438              		.loc 1 1728 0
 4439 00fc 2046     		mov	r0, r4
 4440 00fe FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4441              	.LVL384:
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 4442              		.loc 1 1729 0
 4443 0102 0023     		movs	r3, #0
 4444 0104 E366     		str	r3, [r4, #108]
 4445 0106 38BD     		pop	{r3, r4, r5, pc}
 4446              	.LVL385:
 4447              	.L317:
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4448              		.loc 1 1737 0
 4449 0108 13F4801F 		tst	r3, #1048576
 4450 010c 0ED0     		beq	.L329
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4451              		.loc 1 1737 0 is_stmt 0 discriminator 1
 4452 010e 10F4800F 		tst	r0, #4194304
 4453 0112 0BD0     		beq	.L329
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
 4454              		.loc 1 1739 0 is_stmt 1
 4455 0114 4FF48013 		mov	r3, #1048576
 4456              	.LVL386:
 4457 0118 1362     		str	r3, [r2, #32]
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4458              		.loc 1 1741 0
 4459 011a 2023     		movs	r3, #32
 4460 011c 84F86930 		strb	r3, [r4, #105]
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 4461              		.loc 1 1742 0
 4462 0120 84F86A30 		strb	r3, [r4, #106]
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 4463              		.loc 1 1743 0
 4464 0124 2046     		mov	r0, r4
 4465              	.LVL387:
 4466 0126 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 4467              	.LVL388:
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4468              		.loc 1 1744 0
 4469 012a 38BD     		pop	{r3, r4, r5, pc}
 4470              	.LVL389:
 4471              	.L329:
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4472              		.loc 1 1748 0
 4473 012c 13F0800F 		tst	r3, #128
 4474 0130 06D0     		beq	.L330
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4475              		.loc 1 1748 0 is_stmt 0 discriminator 1
 4476 0132 11F0800F 		tst	r1, #128
 4477 0136 03D0     		beq	.L330
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
ARM GAS  /tmp/ccWyKvi9.s 			page 138


 4478              		.loc 1 1750 0 is_stmt 1
 4479 0138 2046     		mov	r0, r4
 4480              	.LVL390:
 4481 013a FFF7FEFF 		bl	UART_Transmit_IT
 4482              	.LVL391:
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4483              		.loc 1 1751 0
 4484 013e 38BD     		pop	{r3, r4, r5, pc}
 4485              	.LVL392:
 4486              	.L330:
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4487              		.loc 1 1755 0
 4488 0140 13F0400F 		tst	r3, #64
 4489 0144 05D0     		beq	.L314
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4490              		.loc 1 1755 0 is_stmt 0 discriminator 1
 4491 0146 11F0400F 		tst	r1, #64
 4492 014a 02D0     		beq	.L314
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 4493              		.loc 1 1757 0 is_stmt 1
 4494 014c 2046     		mov	r0, r4
 4495              	.LVL393:
 4496 014e FFF7FEFF 		bl	UART_EndTransmit_IT
 4497              	.LVL394:
 4498              	.L314:
 4499 0152 38BD     		pop	{r3, r4, r5, pc}
 4500              	.LVL395:
 4501              	.L333:
 4502              		.align	2
 4503              	.L332:
 4504 0154 00000000 		.word	UART_DMAAbortOnError
 4505              		.cfi_endproc
 4506              	.LFE145:
 4508              		.section	.text.UART_Wakeup_AddressConfig,"ax",%progbits
 4509              		.align	2
 4510              		.global	UART_Wakeup_AddressConfig
 4511              		.thumb
 4512              		.thumb_func
 4514              	UART_Wakeup_AddressConfig:
 4515              	.LFB181:
2764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART wake-up from stop mode parameters when triggered by address detectio
2767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpSelection UART wake up from stop mode parameters.
2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelection)
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4516              		.loc 1 2772 0
 4517              		.cfi_startproc
 4518              		@ args = 0, pretend = 0, frame = 8
 4519              		@ frame_needed = 0, uses_anonymous_args = 0
 4520              		@ link register save eliminated.
 4521              	.LVL396:
 4522 0000 82B0     		sub	sp, sp, #8
 4523              	.LCFI51:
ARM GAS  /tmp/ccWyKvi9.s 			page 139


 4524              		.cfi_def_cfa_offset 8
 4525 0002 02AB     		add	r3, sp, #8
 4526 0004 03E90600 		stmdb	r3, {r1, r2}
2773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(WakeUpSelection.AddressLength));
2774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART address length */
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, WakeUpSelection.AddressLength);
 4527              		.loc 1 2776 0
 4528 0008 0168     		ldr	r1, [r0]
 4529 000a 4B68     		ldr	r3, [r1, #4]
 4530 000c 23F01002 		bic	r2, r3, #16
 4531 0010 BDF80430 		ldrh	r3, [sp, #4]
 4532 0014 1343     		orrs	r3, r3, r2
 4533 0016 4B60     		str	r3, [r1, #4]
2777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART address node */
2779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)WakeUpSelection.Address << UART_CR2_AD
 4534              		.loc 1 2779 0
 4535 0018 0268     		ldr	r2, [r0]
 4536 001a 5368     		ldr	r3, [r2, #4]
 4537 001c 23F07F43 		bic	r3, r3, #-16777216
 4538 0020 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
 4539 0024 43EA0163 		orr	r3, r3, r1, lsl #24
 4540 0028 5360     		str	r3, [r2, #4]
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4541              		.loc 1 2780 0
 4542 002a 02B0     		add	sp, sp, #8
 4543              	.LCFI52:
 4544              		.cfi_def_cfa_offset 0
 4545              		@ sp needed
 4546 002c 7047     		bx	lr
 4547              		.cfi_endproc
 4548              	.LFE181:
 4550 002e 00BF     		.text
 4551              	.Letext0:
 4552              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 4553              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 4554              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 4555              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 4556              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 4557              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 4558              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 4559              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 4560              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 4561              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
 4562              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart_ex.h"
ARM GAS  /tmp/ccWyKvi9.s 			page 140


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_uart.c
     /tmp/ccWyKvi9.s:21     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccWyKvi9.s:25     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccWyKvi9.s:47     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccWyKvi9.s:51     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccWyKvi9.s:77     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccWyKvi9.s:82     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccWyKvi9.s:95     .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccWyKvi9.s:100    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccWyKvi9.s:113    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccWyKvi9.s:118    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccWyKvi9.s:184    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccWyKvi9.s:189    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccWyKvi9.s:264    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccWyKvi9.s:269    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccWyKvi9.s:401    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccWyKvi9.s:406    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccWyKvi9.s:520    .text.HAL_UART_Transmit_DMA:0000000000000084 $d
     /tmp/ccWyKvi9.s:1125   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccWyKvi9.s:1195   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccWyKvi9.s:1362   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccWyKvi9.s:527    .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccWyKvi9.s:532    .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccWyKvi9.s:650    .text.HAL_UART_Receive_DMA:0000000000000090 $d
     /tmp/ccWyKvi9.s:1241   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccWyKvi9.s:1316   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccWyKvi9.s:657    .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccWyKvi9.s:662    .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccWyKvi9.s:737    .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccWyKvi9.s:742    .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccWyKvi9.s:811    .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccWyKvi9.s:816    .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccWyKvi9.s:891    .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccWyKvi9.s:896    .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccWyKvi9.s:982    .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccWyKvi9.s:987    .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccWyKvi9.s:1038   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccWyKvi9.s:1043   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccWyKvi9.s:1103   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccWyKvi9.s:1108   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccWyKvi9.s:1121   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccWyKvi9.s:1173   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccWyKvi9.s:1178   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccWyKvi9.s:1191   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccWyKvi9.s:1219   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccWyKvi9.s:1224   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccWyKvi9.s:1237   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccWyKvi9.s:1294   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccWyKvi9.s:1299   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccWyKvi9.s:1312   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccWyKvi9.s:1340   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccWyKvi9.s:1345   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccWyKvi9.s:1358   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccWyKvi9.s:1428   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccWyKvi9.s:1432   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccWyKvi9.s:1460   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
ARM GAS  /tmp/ccWyKvi9.s 			page 141


     /tmp/ccWyKvi9.s:1465   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccWyKvi9.s:1478   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccWyKvi9.s:1483   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccWyKvi9.s:1640   .text.HAL_UART_Abort_IT:00000000000000c8 $d
     /tmp/ccWyKvi9.s:1705   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccWyKvi9.s:1650   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccWyKvi9.s:1646   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccWyKvi9.s:1701   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccWyKvi9.s:1756   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccWyKvi9.s:1761   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccWyKvi9.s:1774   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccWyKvi9.s:1779   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccWyKvi9.s:1856   .text.HAL_UART_AbortTransmit_IT:0000000000000060 $d
     /tmp/ccWyKvi9.s:1865   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccWyKvi9.s:1861   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccWyKvi9.s:1894   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccWyKvi9.s:1899   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccWyKvi9.s:1912   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccWyKvi9.s:1917   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccWyKvi9.s:2006   .text.HAL_UART_AbortReceive_IT:0000000000000074 $d
     /tmp/ccWyKvi9.s:2015   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccWyKvi9.s:2011   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccWyKvi9.s:2048   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccWyKvi9.s:2053   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccWyKvi9.s:2071   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccWyKvi9.s:2076   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccWyKvi9.s:2125   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccWyKvi9.s:2130   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccWyKvi9.s:2179   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccWyKvi9.s:2184   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccWyKvi9.s:2228   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccWyKvi9.s:2233   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccWyKvi9.s:2255   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccWyKvi9.s:2260   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccWyKvi9.s:2277   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccWyKvi9.s:2282   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccWyKvi9.s:2350   .text.UART_SetConfig:0000000000000058 $d
     /tmp/ccWyKvi9.s:2354   .text.UART_SetConfig:000000000000005c $t
     /tmp/ccWyKvi9.s:2559   .text.UART_SetConfig:000000000000017a $d
     /tmp/ccWyKvi9.s:2669   .text.UART_SetConfig:000000000000020a $d
     /tmp/ccWyKvi9.s:2760   .text.UART_SetConfig:0000000000000288 $d
     /tmp/ccWyKvi9.s:2770   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccWyKvi9.s:2775   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccWyKvi9.s:2895   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccWyKvi9.s:2900   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccWyKvi9.s:2978   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccWyKvi9.s:2983   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccWyKvi9.s:3146   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccWyKvi9.s:3151   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccWyKvi9.s:3355   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccWyKvi9.s:3360   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccWyKvi9.s:3447   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccWyKvi9.s:3452   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccWyKvi9.s:3543   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccWyKvi9.s:3548   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccWyKvi9.s:3645   .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccWyKvi9.s:3650   .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
ARM GAS  /tmp/ccWyKvi9.s 			page 142


     /tmp/ccWyKvi9.s:3779   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccWyKvi9.s:3784   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccWyKvi9.s:3901   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccWyKvi9.s:3906   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccWyKvi9.s:3951   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccWyKvi9.s:3956   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccWyKvi9.s:4001   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/ccWyKvi9.s:4006   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/ccWyKvi9.s:4090   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccWyKvi9.s:4095   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccWyKvi9.s:4125   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/ccWyKvi9.s:4130   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/ccWyKvi9.s:4246   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccWyKvi9.s:4251   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccWyKvi9.s:4504   .text.HAL_UART_IRQHandler:0000000000000154 $d
     /tmp/ccWyKvi9.s:4509   .text.UART_Wakeup_AddressConfig:0000000000000000 $t
     /tmp/ccWyKvi9.s:4514   .text.UART_Wakeup_AddressConfig:0000000000000000 UART_Wakeup_AddressConfig
                     .debug_frame:0000000000000010 $d
     /tmp/ccWyKvi9.s:2568   .text.UART_SetConfig:0000000000000183 $d
     /tmp/ccWyKvi9.s:2568   .text.UART_SetConfig:0000000000000184 $t
     /tmp/ccWyKvi9.s:2678   .text.UART_SetConfig:0000000000000213 $d
     /tmp/ccWyKvi9.s:2678   .text.UART_SetConfig:0000000000000214 $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick
HAL_UARTEx_WakeupCallback
